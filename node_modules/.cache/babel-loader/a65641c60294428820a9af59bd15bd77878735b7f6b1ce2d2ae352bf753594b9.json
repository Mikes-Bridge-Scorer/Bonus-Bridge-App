{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikec\\\\MikesBridge\\\\bonusbridge\\\\src\\\\components\\\\ContractInput.js\";\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContractInput = ({\n  onContractChange,\n  initialContract = ''\n}) => {\n  // State for levels (1-7) const [level, setLevel] = useState(''); // State for suits (♣, ♦, ♥, ♠, NT) const [suit, setSuit] = useState(''); // State for declarer (N, E, S, W) const [declarer, setDeclarer] = useState(''); // State for doubled status (none, X, XX) const [doubled, setDoubled] = useState('');\n\n  // Parse initialContract if provided useEffect(() => { if (initialContract) { const contractMatch = initialContract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/); if (contractMatch) { setLevel(contractMatch[1]); setSuit(contractMatch[2]); setDeclarer(contractMatch[3]); setDoubled(contractMatch[4] || ''); } } }, [initialContract]);\n\n  // Update contract when any component changes useEffect(() => { if (level && suit && declarer) { const newContract = ${level}${suit} ${declarer}${doubled}; onContractChange(newContract); } }, [level, suit, declarer, doubled, onContractChange]);\n\n  // Handle level selection const handleLevelClick = (selectedLevel) => { setLevel(selectedLevel); };\n\n  // Handle suit selection const handleSuitClick = (selectedSuit) => { setSuit(selectedSuit); };\n\n  // Handle declarer selection const handleDeclarerClick = (selectedDeclarer) => { setDeclarer(selectedDeclarer); };\n\n  // Handle doubled selection - fixed to correctly toggle selections const handleDoubledClick = (selectedDoubled) => { // Toggle selection - if already selected, deselect it if (doubled === selectedDoubled) { setDoubled(''); } else { setDoubled(selectedDoubled); } };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contract-input-container\",\n    children: [\" \", \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"level-suit-section\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section-label\",\n        children: \"Level and Suit:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 110\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"level-buttons\",\n        children: [1, 2, 3, 4, 5, 6, 7].map(num => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `level-btn ${level === num.toString() ? 'selected' : ''}`,\n          onClick: () => handleLevelClick(num.toString()),\n          \"data-level\": num,\n          children: num\n        }, `level-${num}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suit-buttons\",\n        children: ['♣', '♦', '♥', '♠', 'NT'].map(s => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `suit-btn ${suit === s ? 'selected' : ''}`,\n          onClick: () => handleSuitClick(s),\n          \"data-suit\": s,\n          children: s\n        }, `suit-${s}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 73\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"declarer-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section-label\",\n        children: \"Declarer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"declarer-buttons\",\n        children: ['N', 'S', 'E', 'W'].map(d => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `declarer-btn ${declarer === d ? 'selected' : ''}`,\n          onClick: () => handleDeclarerClick(d),\n          children: d\n        }, `declarer-${d}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doubled-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section-label\",\n        children: \"Doubled:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doubled-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `doubled-btn ${doubled === '' ? 'selected' : ''}`,\n          onClick: () => setDoubled(''),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `doubled-btn ${doubled === 'X' ? 'selected' : ''}`,\n          onClick: () => handleDoubledClick('X'),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `doubled-btn ${doubled === 'XX' ? 'selected' : ''}`,\n          onClick: () => handleDoubledClick('XX'),\n          children: \"XX\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n_c = ContractInput;\nexport default ContractInput;\nvar _c;\n$RefreshReg$(_c, \"ContractInput\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ContractInput","onContractChange","initialContract","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","num","level","toString","onClick","handleLevelClick","s","suit","handleSuitClick","d","declarer","handleDeclarerClick","doubled","setDoubled","handleDoubledClick","_c","$RefreshReg$"],"sources":["C:/Users/mikec/MikesBridge/bonusbridge/src/components/ContractInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ContractInput = ({ onContractChange, initialContract = '' }) => { // State for levels (1-7) const [level, setLevel] = useState(''); // State for suits (♣, ♦, ♥, ♠, NT) const [suit, setSuit] = useState(''); // State for declarer (N, E, S, W) const [declarer, setDeclarer] = useState(''); // State for doubled status (none, X, XX) const [doubled, setDoubled] = useState('');\r\n\r\n// Parse initialContract if provided useEffect(() => { if (initialContract) { const contractMatch = initialContract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/); if (contractMatch) { setLevel(contractMatch[1]); setSuit(contractMatch[2]); setDeclarer(contractMatch[3]); setDoubled(contractMatch[4] || ''); } } }, [initialContract]);\r\n\r\n// Update contract when any component changes useEffect(() => { if (level && suit && declarer) { const newContract = ${level}${suit} ${declarer}${doubled}; onContractChange(newContract); } }, [level, suit, declarer, doubled, onContractChange]);\r\n\r\n// Handle level selection const handleLevelClick = (selectedLevel) => { setLevel(selectedLevel); };\r\n\r\n// Handle suit selection const handleSuitClick = (selectedSuit) => { setSuit(selectedSuit); };\r\n\r\n// Handle declarer selection const handleDeclarerClick = (selectedDeclarer) => { setDeclarer(selectedDeclarer); };\r\n\r\n// Handle doubled selection - fixed to correctly toggle selections const handleDoubledClick = (selectedDoubled) => { // Toggle selection - if already selected, deselect it if (doubled === selectedDoubled) { setDoubled(''); } else { setDoubled(selectedDoubled); } };\r\n\r\nreturn ( <div className=\"contract-input-container\"> {/* Level Input */} <div className=\"level-suit-section\"> <div className=\"input-section-label\">Level and Suit:</div>\r\n\r\n    {/* Level Buttons (1-7) */}\r\n    <div className=\"level-buttons\">\r\n      {[1, 2, 3, 4, 5, 6, 7].map((num) => (\r\n        <button\r\n          key={`level-${num}`}\r\n          className={`level-btn ${level === num.toString() ? 'selected' : ''}`}\r\n          onClick={() => handleLevelClick(num.toString())}\r\n          data-level={num}\r\n        >\r\n          {num}\r\n        </button>\r\n      ))}\r\n    </div>\r\n    \r\n    {/* Suit Buttons */}\r\n    <div className=\"suit-buttons\">\r\n      {['♣', '♦', '♥', '♠', 'NT'].map((s) => (\r\n        <button\r\n          key={`suit-${s}`}\r\n          className={`suit-btn ${suit === s ? 'selected' : ''}`}\r\n          onClick={() => handleSuitClick(s)}\r\n          data-suit={s}\r\n        >\r\n          {s}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  </div>\r\n  \r\n  {/* Declarer Input */}\r\n  <div className=\"declarer-section\">\r\n    <div className=\"input-section-label\">Declarer:</div>\r\n    <div className=\"declarer-buttons\">\r\n      {['N', 'S', 'E', 'W'].map((d) => (\r\n        <button\r\n          key={`declarer-${d}`}\r\n          className={`declarer-btn ${declarer === d ? 'selected' : ''}`}\r\n          onClick={() => handleDeclarerClick(d)}\r\n        >\r\n          {d}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  </div>\r\n  \r\n  {/* Doubled Input - Fixed to allow proper selection */}\r\n  <div className=\"doubled-section\">\r\n    <div className=\"input-section-label\">Doubled:</div>\r\n    <div className=\"doubled-buttons\">\r\n      <button\r\n        className={`doubled-btn ${doubled === '' ? 'selected' : ''}`}\r\n        onClick={() => setDoubled('')}\r\n      >\r\n        -\r\n      </button>\r\n      <button\r\n        className={`doubled-btn ${doubled === 'X' ? 'selected' : ''}`}\r\n        onClick={() => handleDoubledClick('X')}\r\n      >\r\n        X\r\n      </button>\r\n      <button\r\n        className={`doubled-btn ${doubled === 'XX' ? 'selected' : ''}`}\r\n        onClick={() => handleDoubledClick('XX')}\r\n      >\r\n        XX\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n); };\r\n\r\nexport default ContractInput;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}