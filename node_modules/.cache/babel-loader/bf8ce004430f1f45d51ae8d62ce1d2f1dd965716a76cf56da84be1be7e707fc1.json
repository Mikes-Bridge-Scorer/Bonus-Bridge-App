{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikec\\\\MikesBridge\\\\bonusbridge\\\\src\\\\components\\\\TrickInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './TrickInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrickInput = ({\n  onTrickChange,\n  initialResult = null,\n  contract = '',\n  onChangeContract\n}) => {\n  _s();\n  const [selectedTrick, setSelectedTrick] = useState(null);\n  const [requiredTricks, setRequiredTricks] = useState(7);\n\n  // Calculate required tricks when contract changes\n  useEffect(() => {\n    if (contract) {\n      const contractMatch = contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\n      if (contractMatch) {\n        const level = parseInt(contractMatch[1]);\n        setRequiredTricks(level + 6);\n      }\n    }\n  }, [contract]);\n\n  // Set selected trick from initialResult if provided\n  useEffect(() => {\n    if (initialResult !== null && requiredTricks) {\n      const actualTricks = requiredTricks + initialResult;\n      setSelectedTrick(actualTricks);\n    }\n  }, [initialResult, requiredTricks]);\n\n  // Handle trick button click\n  const handleTrickClick = numTricks => {\n    setSelectedTrick(numTricks);\n    const result = numTricks - requiredTricks;\n    onTrickChange(result, numTricks);\n  };\n\n  // Get result preview text and style\n  const getResultPreview = () => {\n    if (selectedTrick === null) return null;\n    const result = selectedTrick - requiredTricks;\n    let text = '';\n    let className = 'result-preview';\n    if (result === 0) {\n      text = 'Made exactly';\n      className += ' exact';\n    } else if (result > 0) {\n      text = `Made +${result}`;\n      className += ' made';\n    } else {\n      text = `Down ${Math.abs(result)}`;\n      className += ' down';\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: [text, \" (\", selectedTrick, \" tricks)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render trick buttons in a 5-column grid with better layout\n  const renderTrickGrid = () => {\n    // Create buttons for 0-13, but arrange them in a specific order\n    const buttonOrder = [1, 2, 3, 4, 5,\n    // Row 1: 1-5\n    6, 7, 8, 9, 10,\n    // Row 2: 6-10\n    11, 12, 13, 0, '' // Row 3: 11, 12, 13, 0, empty\n    ];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trick-grid\",\n      children: buttonOrder.map((num, index) => {\n        // Skip empty cells\n        if (num === '') {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trick-grid-empty\"\n          }, `empty-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 20\n          }, this);\n        }\n        const isExact = num === requiredTricks;\n        const isMade = num > requiredTricks;\n        const isDown = num < requiredTricks;\n        let buttonClass = \"trick-btn\";\n        if (isDown) buttonClass += \" trick-btn-down\";else if (isExact) buttonClass += \" trick-btn-exact\";else if (isMade) buttonClass += \" trick-btn-made\";\n        if (selectedTrick === num) buttonClass += \" selected\";\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: buttonClass,\n          onClick: () => handleTrickClick(num),\n          children: num\n        }, `trick-${num}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trick-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"required-tricks\",\n      children: [\"Required tricks: \", requiredTricks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), renderTrickGrid(), getResultPreview(), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"change-contract-btn\",\n      onClick: onChangeContract,\n      children: \"Change Contract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(TrickInput, \"/QmD/W+wxqgdg5tWOmifM1V76DQ=\");\n_c = TrickInput;\nexport default TrickInput;\nvar _c;\n$RefreshReg$(_c, \"TrickInput\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TrickInput","onTrickChange","initialResult","contract","onChangeContract","_s","selectedTrick","setSelectedTrick","requiredTricks","setRequiredTricks","contractMatch","match","level","parseInt","actualTricks","handleTrickClick","numTricks","result","getResultPreview","text","className","Math","abs","children","fileName","_jsxFileName","lineNumber","columnNumber","renderTrickGrid","buttonOrder","map","num","index","isExact","isMade","isDown","buttonClass","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mikec/MikesBridge/bonusbridge/src/components/TrickInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './TrickInput.css';\r\n\r\nconst TrickInput = ({ onTrickChange, initialResult = null, contract = '', onChangeContract }) => {\r\n  const [selectedTrick, setSelectedTrick] = useState(null);\r\n  const [requiredTricks, setRequiredTricks] = useState(7);\r\n  \r\n  // Calculate required tricks when contract changes\r\n  useEffect(() => {\r\n    if (contract) {\r\n      const contractMatch = contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\r\n      if (contractMatch) {\r\n        const level = parseInt(contractMatch[1]);\r\n        setRequiredTricks(level + 6);\r\n      }\r\n    }\r\n  }, [contract]);\r\n  \r\n  // Set selected trick from initialResult if provided\r\n  useEffect(() => {\r\n    if (initialResult !== null && requiredTricks) {\r\n      const actualTricks = requiredTricks + initialResult;\r\n      setSelectedTrick(actualTricks);\r\n    }\r\n  }, [initialResult, requiredTricks]);\r\n  \r\n  // Handle trick button click\r\n  const handleTrickClick = (numTricks) => {\r\n    setSelectedTrick(numTricks);\r\n    const result = numTricks - requiredTricks;\r\n    onTrickChange(result, numTricks);\r\n  };\r\n  \r\n  // Get result preview text and style\r\n  const getResultPreview = () => {\r\n    if (selectedTrick === null) return null;\r\n    \r\n    const result = selectedTrick - requiredTricks;\r\n    let text = '';\r\n    let className = 'result-preview';\r\n    \r\n    if (result === 0) {\r\n      text = 'Made exactly';\r\n      className += ' exact';\r\n    } else if (result > 0) {\r\n      text = `Made +${result}`;\r\n      className += ' made';\r\n    } else {\r\n      text = `Down ${Math.abs(result)}`;\r\n      className += ' down';\r\n    }\r\n    \r\n    return (\r\n      <div className={className}>\r\n        {text} ({selectedTrick} tricks)\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  // Render trick buttons in a 5-column grid with better layout\r\n  const renderTrickGrid = () => {\r\n    // Create buttons for 0-13, but arrange them in a specific order\r\n    const buttonOrder = [\r\n      1, 2, 3, 4, 5,    // Row 1: 1-5\r\n      6, 7, 8, 9, 10,   // Row 2: 6-10\r\n      11, 12, 13, 0, '' // Row 3: 11, 12, 13, 0, empty\r\n    ];\r\n    \r\n    return (\r\n      <div className=\"trick-grid\">\r\n        {buttonOrder.map((num, index) => {\r\n          // Skip empty cells\r\n          if (num === '') {\r\n            return <div key={`empty-${index}`} className=\"trick-grid-empty\"></div>;\r\n          }\r\n          \r\n          const isExact = num === requiredTricks;\r\n          const isMade = num > requiredTricks;\r\n          const isDown = num < requiredTricks;\r\n          \r\n          let buttonClass = \"trick-btn\";\r\n          if (isDown) buttonClass += \" trick-btn-down\";\r\n          else if (isExact) buttonClass += \" trick-btn-exact\";\r\n          else if (isMade) buttonClass += \" trick-btn-made\";\r\n          \r\n          if (selectedTrick === num) buttonClass += \" selected\";\r\n          \r\n          return (\r\n            <button\r\n              key={`trick-${num}`}\r\n              className={buttonClass}\r\n              onClick={() => handleTrickClick(num)}\r\n            >\r\n              {num}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  return (\r\n    <div className=\"trick-input\">\r\n      <div className=\"required-tricks\">\r\n        Required tricks: {requiredTricks}\r\n      </div>\r\n      \r\n      {/* Trick Grid */}\r\n      {renderTrickGrid()}\r\n      \r\n      {/* Result Preview - shows immediately after selection */}\r\n      {getResultPreview()}\r\n      \r\n      {/* Change Contract Button */}\r\n      <button \r\n        className=\"change-contract-btn\"\r\n        onClick={onChangeContract}\r\n      >\r\n        Change Contract\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrickInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}