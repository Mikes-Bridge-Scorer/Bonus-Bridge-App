{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikec\\\\MikesBridge\\\\bonusbridge\\\\src\\\\components\\\\TrickInput.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\n\n// A radical approach for TrickInput that bypasses React and manipulates the DOM directly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrickInput = ({\n  onTrickChange,\n  initialResult = null,\n  contract = '',\n  onChangeContract\n}) => {\n  _s();\n  // Create ref for the container\n  const containerRef = useRef(null);\n\n  // Track the current state\n  let requiredTricks = 7;\n  let initialTrick = null;\n\n  // Parse contract to determine required tricks\n  if (contract) {\n    const contractMatch = contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\n    if (contractMatch) {\n      const level = parseInt(contractMatch[1]);\n      requiredTricks = level + 6;\n    }\n  }\n\n  // Calculate selected trick from initial result\n  if (initialResult !== null) {\n    initialTrick = requiredTricks + initialResult;\n  }\n\n  // Effect for direct DOM manipulation\n  useEffect(() => {\n    // Current state\n    let selectedTrick = initialTrick;\n    let currentRequiredTricks = requiredTricks;\n\n    // Create a trick button with appropriate styling\n    const createTrickButton = trickNum => {\n      const btn = document.createElement('button');\n      btn.textContent = trickNum;\n\n      // Determine button state\n      const isSelected = selectedTrick === trickNum;\n      const isExact = trickNum === currentRequiredTricks;\n      const isMade = trickNum > currentRequiredTricks;\n      const isDown = trickNum < currentRequiredTricks;\n\n      // Base styles\n      btn.style.flex = '1';\n      btn.style.height = '40px';\n      btn.style.minWidth = '40px';\n      btn.style.border = '1px solid';\n      btn.style.borderRadius = '6px';\n      btn.style.fontSize = '16px';\n      btn.style.fontWeight = 'bold';\n      btn.style.cursor = 'pointer';\n      btn.style.display = 'flex';\n      btn.style.alignItems = 'center';\n      btn.style.justifyContent = 'center';\n\n      // Determine colors based on state\n      if (isSelected) {\n        if (isExact) {\n          btn.style.backgroundColor = '#ff9800';\n          btn.style.borderColor = '#ff9800';\n        } else if (isMade) {\n          btn.style.backgroundColor = '#4caf50';\n          btn.style.borderColor = '#4caf50';\n        } else {\n          btn.style.backgroundColor = '#f44336';\n          btn.style.borderColor = '#f44336';\n        }\n        btn.style.color = 'white';\n      } else {\n        if (isExact) {\n          btn.style.backgroundColor = '#fff3e0';\n          btn.style.borderColor = '#ffe0b2';\n        } else if (isMade) {\n          btn.style.backgroundColor = '#e8f5e9';\n          btn.style.borderColor = '#c8e6c9';\n        } else {\n          btn.style.backgroundColor = '#ffebee';\n          btn.style.borderColor = '#ffcdd2';\n        }\n        btn.style.color = 'black';\n      }\n\n      // Store the trick type as data attribute for restyling\n      btn.setAttribute('data-trick-type', isExact ? 'exact' : isMade ? 'made' : 'down');\n\n      // Add click handler\n      btn.addEventListener('click', () => {\n        // Update selected trick\n        selectedTrick = trickNum;\n\n        // Calculate result\n        const result = trickNum - currentRequiredTricks;\n        onTrickChange(result, trickNum);\n\n        // Update all buttons\n        const allButtons = btn.parentElement.parentElement.querySelectorAll('button');\n        allButtons.forEach(b => {\n          const btnTrick = parseInt(b.textContent);\n          const btnIsExact = btnTrick === currentRequiredTricks;\n          const btnIsMade = btnTrick > currentRequiredTricks;\n          if (btnTrick === selectedTrick) {\n            // Selected button\n            if (btnIsExact) {\n              b.style.backgroundColor = '#ff9800';\n              b.style.borderColor = '#ff9800';\n            } else if (btnIsMade) {\n              b.style.backgroundColor = '#4caf50';\n              b.style.borderColor = '#4caf50';\n            } else {\n              b.style.backgroundColor = '#f44336';\n              b.style.borderColor = '#f44336';\n            }\n            b.style.color = 'white';\n          } else {\n            // Unselected button\n            if (btnIsExact) {\n              b.style.backgroundColor = '#fff3e0';\n              b.style.borderColor = '#ffe0b2';\n            } else if (btnIsMade) {\n              b.style.backgroundColor = '#e8f5e9';\n              b.style.borderColor = '#c8e6c9';\n            } else {\n              b.style.backgroundColor = '#ffebee';\n              b.style.borderColor = '#ffcdd2';\n            }\n            b.style.color = 'black';\n          }\n        });\n      });\n      return btn;\n    };\n\n    // Create button row\n    const createButtonRow = () => {\n      const row = document.createElement('div');\n      row.style.display = 'flex';\n      row.style.gap = '6px';\n      row.style.marginBottom = '6px';\n      row.style.width = '100%';\n      return row;\n    };\n\n    // Create change contract button\n    const createChangeContractButton = () => {\n      const btn = document.createElement('button');\n      btn.textContent = 'Change Contract';\n      btn.style.width = '100%';\n      btn.style.height = '36px';\n      btn.style.marginTop = '6px';\n      btn.style.border = '1px solid #ddd';\n      btn.style.borderRadius = '6px';\n      btn.style.backgroundColor = '#f5f5f5';\n      btn.style.color = '#2c3e50';\n      btn.style.fontSize = '14px';\n      btn.style.fontWeight = 'bold';\n      btn.style.cursor = 'pointer';\n      btn.addEventListener('click', () => {\n        onChangeContract();\n      });\n      return btn;\n    };\n\n    // Build the container\n    if (containerRef.current) {\n      // Clear existing content\n      containerRef.current.innerHTML = '';\n\n      // Set container style\n      containerRef.current.style.display = 'flex';\n      containerRef.current.style.flexDirection = 'column';\n      containerRef.current.style.gap = '6px';\n      containerRef.current.style.padding = '6px';\n      containerRef.current.style.maxWidth = '100%';\n      containerRef.current.style.boxSizing = 'border-box';\n      containerRef.current.style.maxHeight = '260px';\n      containerRef.current.style.overflow = 'hidden';\n\n      // Create required tricks banner\n      const requiredBanner = document.createElement('div');\n      requiredBanner.textContent = `Required tricks: ${currentRequiredTricks}`;\n      requiredBanner.style.backgroundColor = '#f0f3f8';\n      requiredBanner.style.padding = '8px';\n      requiredBanner.style.borderRadius = '6px';\n      requiredBanner.style.textAlign = 'center';\n      requiredBanner.style.fontSize = '14px';\n      requiredBanner.style.fontWeight = 'bold';\n      requiredBanner.style.color = '#2c3e50';\n      requiredBanner.style.border = '1px solid #dfe6e9';\n      requiredBanner.style.marginBottom = '4px';\n      containerRef.current.appendChild(requiredBanner);\n\n      // Create trick buttons in rows\n      const grid = document.createElement('div');\n      grid.style.display = 'flex';\n      grid.style.flexDirection = 'column';\n      grid.style.gap = '6px';\n\n      // First row (tricks 0-3)\n      const row1 = createButtonRow();\n      [0, 1, 2, 3].forEach(num => {\n        row1.appendChild(createTrickButton(num));\n      });\n      grid.appendChild(row1);\n\n      // Second row (tricks 4-7)\n      const row2 = createButtonRow();\n      [4, 5, 6, 7].forEach(num => {\n        row2.appendChild(createTrickButton(num));\n      });\n      grid.appendChild(row2);\n\n      // Third row (tricks 8-11)\n      const row3 = createButtonRow();\n      [8, 9, 10, 11].forEach(num => {\n        row3.appendChild(createTrickButton(num));\n      });\n      grid.appendChild(row3);\n\n      // Fourth row (tricks 12-13 with spacing)\n      const row4 = createButtonRow();\n\n      // Add empty space to center 12 and 13\n      const emptyLeft = document.createElement('div');\n      emptyLeft.style.flex = '1';\n      row4.appendChild(emptyLeft);\n      row4.appendChild(createTrickButton(12));\n      row4.appendChild(createTrickButton(13));\n      const emptyRight = document.createElement('div');\n      emptyRight.style.flex = '1';\n      row4.appendChild(emptyRight);\n      grid.appendChild(row4);\n      containerRef.current.appendChild(grid);\n\n      // Add change contract button\n      containerRef.current.appendChild(createChangeContractButton());\n    }\n  }, [contract, initialResult, onChangeContract, onTrickChange, requiredTricks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 10\n  }, this);\n};\n_s(TrickInput, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = TrickInput;\nexport default TrickInput;\nvar _c;\n$RefreshReg$(_c, \"TrickInput\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","TrickInput","onTrickChange","initialResult","contract","onChangeContract","_s","containerRef","requiredTricks","initialTrick","contractMatch","match","level","parseInt","selectedTrick","currentRequiredTricks","createTrickButton","trickNum","btn","document","createElement","textContent","isSelected","isExact","isMade","isDown","style","flex","height","minWidth","border","borderRadius","fontSize","fontWeight","cursor","display","alignItems","justifyContent","backgroundColor","borderColor","color","setAttribute","addEventListener","result","allButtons","parentElement","querySelectorAll","forEach","b","btnTrick","btnIsExact","btnIsMade","createButtonRow","row","gap","marginBottom","width","createChangeContractButton","marginTop","current","innerHTML","flexDirection","padding","maxWidth","boxSizing","maxHeight","overflow","requiredBanner","textAlign","appendChild","grid","row1","num","row2","row3","row4","emptyLeft","emptyRight","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mikec/MikesBridge/bonusbridge/src/components/TrickInput.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\n// A radical approach for TrickInput that bypasses React and manipulates the DOM directly\r\nconst TrickInput = ({ onTrickChange, initialResult = null, contract = '', onChangeContract }) => {\r\n  // Create ref for the container\r\n  const containerRef = useRef(null);\r\n  \r\n  // Track the current state\r\n  let requiredTricks = 7;\r\n  let initialTrick = null;\r\n  \r\n  // Parse contract to determine required tricks\r\n  if (contract) {\r\n    const contractMatch = contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\r\n    if (contractMatch) {\r\n      const level = parseInt(contractMatch[1]);\r\n      requiredTricks = level + 6;\r\n    }\r\n  }\r\n  \r\n  // Calculate selected trick from initial result\r\n  if (initialResult !== null) {\r\n    initialTrick = requiredTricks + initialResult;\r\n  }\r\n  \r\n  // Effect for direct DOM manipulation\r\n  useEffect(() => {\r\n    // Current state\r\n    let selectedTrick = initialTrick;\r\n    let currentRequiredTricks = requiredTricks;\r\n    \r\n    // Create a trick button with appropriate styling\r\n    const createTrickButton = (trickNum) => {\r\n      const btn = document.createElement('button');\r\n      btn.textContent = trickNum;\r\n      \r\n      // Determine button state\r\n      const isSelected = selectedTrick === trickNum;\r\n      const isExact = trickNum === currentRequiredTricks;\r\n      const isMade = trickNum > currentRequiredTricks;\r\n      const isDown = trickNum < currentRequiredTricks;\r\n      \r\n      // Base styles\r\n      btn.style.flex = '1';\r\n      btn.style.height = '40px';\r\n      btn.style.minWidth = '40px';\r\n      btn.style.border = '1px solid';\r\n      btn.style.borderRadius = '6px';\r\n      btn.style.fontSize = '16px';\r\n      btn.style.fontWeight = 'bold';\r\n      btn.style.cursor = 'pointer';\r\n      btn.style.display = 'flex';\r\n      btn.style.alignItems = 'center';\r\n      btn.style.justifyContent = 'center';\r\n      \r\n      // Determine colors based on state\r\n      if (isSelected) {\r\n        if (isExact) {\r\n          btn.style.backgroundColor = '#ff9800';\r\n          btn.style.borderColor = '#ff9800';\r\n        } else if (isMade) {\r\n          btn.style.backgroundColor = '#4caf50';\r\n          btn.style.borderColor = '#4caf50';\r\n        } else {\r\n          btn.style.backgroundColor = '#f44336';\r\n          btn.style.borderColor = '#f44336';\r\n        }\r\n        btn.style.color = 'white';\r\n      } else {\r\n        if (isExact) {\r\n          btn.style.backgroundColor = '#fff3e0';\r\n          btn.style.borderColor = '#ffe0b2';\r\n        } else if (isMade) {\r\n          btn.style.backgroundColor = '#e8f5e9';\r\n          btn.style.borderColor = '#c8e6c9';\r\n        } else {\r\n          btn.style.backgroundColor = '#ffebee';\r\n          btn.style.borderColor = '#ffcdd2';\r\n        }\r\n        btn.style.color = 'black';\r\n      }\r\n      \r\n      // Store the trick type as data attribute for restyling\r\n      btn.setAttribute('data-trick-type', isExact ? 'exact' : (isMade ? 'made' : 'down'));\r\n      \r\n      // Add click handler\r\n      btn.addEventListener('click', () => {\r\n        // Update selected trick\r\n        selectedTrick = trickNum;\r\n        \r\n        // Calculate result\r\n        const result = trickNum - currentRequiredTricks;\r\n        onTrickChange(result, trickNum);\r\n        \r\n        // Update all buttons\r\n        const allButtons = btn.parentElement.parentElement.querySelectorAll('button');\r\n        allButtons.forEach(b => {\r\n          const btnTrick = parseInt(b.textContent);\r\n          const btnIsExact = btnTrick === currentRequiredTricks;\r\n          const btnIsMade = btnTrick > currentRequiredTricks;\r\n          \r\n          if (btnTrick === selectedTrick) {\r\n            // Selected button\r\n            if (btnIsExact) {\r\n              b.style.backgroundColor = '#ff9800';\r\n              b.style.borderColor = '#ff9800';\r\n            } else if (btnIsMade) {\r\n              b.style.backgroundColor = '#4caf50';\r\n              b.style.borderColor = '#4caf50';\r\n            } else {\r\n              b.style.backgroundColor = '#f44336';\r\n              b.style.borderColor = '#f44336';\r\n            }\r\n            b.style.color = 'white';\r\n          } else {\r\n            // Unselected button\r\n            if (btnIsExact) {\r\n              b.style.backgroundColor = '#fff3e0';\r\n              b.style.borderColor = '#ffe0b2';\r\n            } else if (btnIsMade) {\r\n              b.style.backgroundColor = '#e8f5e9';\r\n              b.style.borderColor = '#c8e6c9';\r\n            } else {\r\n              b.style.backgroundColor = '#ffebee';\r\n              b.style.borderColor = '#ffcdd2';\r\n            }\r\n            b.style.color = 'black';\r\n          }\r\n        });\r\n      });\r\n      \r\n      return btn;\r\n    };\r\n    \r\n    // Create button row\r\n    const createButtonRow = () => {\r\n      const row = document.createElement('div');\r\n      row.style.display = 'flex';\r\n      row.style.gap = '6px';\r\n      row.style.marginBottom = '6px';\r\n      row.style.width = '100%';\r\n      return row;\r\n    };\r\n    \r\n    // Create change contract button\r\n    const createChangeContractButton = () => {\r\n      const btn = document.createElement('button');\r\n      btn.textContent = 'Change Contract';\r\n      btn.style.width = '100%';\r\n      btn.style.height = '36px';\r\n      btn.style.marginTop = '6px';\r\n      btn.style.border = '1px solid #ddd';\r\n      btn.style.borderRadius = '6px';\r\n      btn.style.backgroundColor = '#f5f5f5';\r\n      btn.style.color = '#2c3e50';\r\n      btn.style.fontSize = '14px';\r\n      btn.style.fontWeight = 'bold';\r\n      btn.style.cursor = 'pointer';\r\n      \r\n      btn.addEventListener('click', () => {\r\n        onChangeContract();\r\n      });\r\n      \r\n      return btn;\r\n    };\r\n    \r\n    // Build the container\r\n    if (containerRef.current) {\r\n      // Clear existing content\r\n      containerRef.current.innerHTML = '';\r\n      \r\n      // Set container style\r\n      containerRef.current.style.display = 'flex';\r\n      containerRef.current.style.flexDirection = 'column';\r\n      containerRef.current.style.gap = '6px';\r\n      containerRef.current.style.padding = '6px';\r\n      containerRef.current.style.maxWidth = '100%';\r\n      containerRef.current.style.boxSizing = 'border-box';\r\n      containerRef.current.style.maxHeight = '260px';\r\n      containerRef.current.style.overflow = 'hidden';\r\n      \r\n      // Create required tricks banner\r\n      const requiredBanner = document.createElement('div');\r\n      requiredBanner.textContent = `Required tricks: ${currentRequiredTricks}`;\r\n      requiredBanner.style.backgroundColor = '#f0f3f8';\r\n      requiredBanner.style.padding = '8px';\r\n      requiredBanner.style.borderRadius = '6px';\r\n      requiredBanner.style.textAlign = 'center';\r\n      requiredBanner.style.fontSize = '14px';\r\n      requiredBanner.style.fontWeight = 'bold';\r\n      requiredBanner.style.color = '#2c3e50';\r\n      requiredBanner.style.border = '1px solid #dfe6e9';\r\n      requiredBanner.style.marginBottom = '4px';\r\n      \r\n      containerRef.current.appendChild(requiredBanner);\r\n      \r\n      // Create trick buttons in rows\r\n      const grid = document.createElement('div');\r\n      grid.style.display = 'flex';\r\n      grid.style.flexDirection = 'column';\r\n      grid.style.gap = '6px';\r\n      \r\n      // First row (tricks 0-3)\r\n      const row1 = createButtonRow();\r\n      [0, 1, 2, 3].forEach(num => {\r\n        row1.appendChild(createTrickButton(num));\r\n      });\r\n      grid.appendChild(row1);\r\n      \r\n      // Second row (tricks 4-7)\r\n      const row2 = createButtonRow();\r\n      [4, 5, 6, 7].forEach(num => {\r\n        row2.appendChild(createTrickButton(num));\r\n      });\r\n      grid.appendChild(row2);\r\n      \r\n      // Third row (tricks 8-11)\r\n      const row3 = createButtonRow();\r\n      [8, 9, 10, 11].forEach(num => {\r\n        row3.appendChild(createTrickButton(num));\r\n      });\r\n      grid.appendChild(row3);\r\n      \r\n      // Fourth row (tricks 12-13 with spacing)\r\n      const row4 = createButtonRow();\r\n      \r\n      // Add empty space to center 12 and 13\r\n      const emptyLeft = document.createElement('div');\r\n      emptyLeft.style.flex = '1';\r\n      row4.appendChild(emptyLeft);\r\n      \r\n      row4.appendChild(createTrickButton(12));\r\n      row4.appendChild(createTrickButton(13));\r\n      \r\n      const emptyRight = document.createElement('div');\r\n      emptyRight.style.flex = '1';\r\n      row4.appendChild(emptyRight);\r\n      \r\n      grid.appendChild(row4);\r\n      \r\n      containerRef.current.appendChild(grid);\r\n      \r\n      // Add change contract button\r\n      containerRef.current.appendChild(createChangeContractButton());\r\n    }\r\n  }, [contract, initialResult, onChangeContract, onTrickChange, requiredTricks]);\r\n  \r\n  return <div ref={containerRef}></div>;\r\n};\r\n\r\nexport default TrickInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}