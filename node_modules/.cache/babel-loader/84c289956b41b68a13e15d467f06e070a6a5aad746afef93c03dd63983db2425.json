{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikec\\\\MikesBridge\\\\bonusbridge\\\\src\\\\components\\\\TrickInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './TrickInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrickInput = ({\n  onTrickChange,\n  initialResult = null,\n  contract = '',\n  onChangeContract\n}) => {\n  _s();\n  const [selectedTrick, setSelectedTrick] = useState(null);\n  const [requiredTricks, setRequiredTricks] = useState(7);\n\n  // Calculate required tricks when contract changes\n  useEffect(() => {\n    if (contract) {\n      const contractMatch = contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\n      if (contractMatch) {\n        const level = parseInt(contractMatch[1]);\n        setRequiredTricks(level + 6);\n      }\n    }\n  }, [contract]);\n\n  // Set selected trick from initialResult if provided\n  useEffect(() => {\n    if (initialResult !== null && requiredTricks) {\n      const actualTricks = requiredTricks + initialResult;\n      setSelectedTrick(actualTricks);\n    }\n  }, [initialResult, requiredTricks]);\n\n  // Handle trick button click\n  const handleTrickClick = numTricks => {\n    setSelectedTrick(numTricks);\n    const result = numTricks - requiredTricks;\n    onTrickChange(result, numTricks);\n  };\n\n  // Create a more efficient grid layout for trick buttons\n  const renderTrickGrid = () => {\n    // Create a 4x4 grid (with the last row having only 2 buttons)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(4, 1fr)',\n        gap: '6px'\n      },\n      children: Array.from({\n        length: 14\n      }, (_, i) => {\n        // Only create buttons for tricks 0-13\n        if (i <= 13) {\n          const isExact = i === requiredTricks;\n          const isMade = i > requiredTricks;\n          const isDown = i < requiredTricks;\n          let backgroundColor, borderColor;\n          if (selectedTrick === i) {\n            if (isExact) {\n              backgroundColor = '#ff9800';\n              borderColor = '#ff9800';\n            } else if (isMade) {\n              backgroundColor = '#4caf50';\n              borderColor = '#4caf50';\n            } else {\n              backgroundColor = '#f44336';\n              borderColor = '#f44336';\n            }\n          } else {\n            if (isExact) {\n              backgroundColor = '#fff3e0';\n              borderColor = '#ffe0b2';\n            } else if (isMade) {\n              backgroundColor = '#e8f5e9';\n              borderColor = '#c8e6c9';\n            } else {\n              backgroundColor = '#ffebee';\n              borderColor = '#ffcdd2';\n            }\n          }\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              height: '38px',\n              border: `1px solid ${borderColor}`,\n              borderRadius: '6px',\n              backgroundColor,\n              color: selectedTrick === i ? 'white' : 'black',\n              fontWeight: 'bold',\n              fontSize: '15px',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              cursor: 'pointer',\n              padding: '0',\n              // Make tricks 12 and 13 wider (2 columns each)\n              gridColumn: i >= 12 ? 'span 2' : 'span 1'\n            },\n            onClick: () => handleTrickClick(i),\n            children: i\n          }, `trick-${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this);\n        }\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '8px',\n      padding: '5px 0'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#f0f3f8',\n        padding: '8px',\n        borderRadius: '6px',\n        textAlign: 'center',\n        fontSize: '14px',\n        fontWeight: 'bold',\n        color: '#2c3e50',\n        border: '1px solid #dfe6e9',\n        marginBottom: '5px'\n      },\n      children: [\"Required tricks: \", requiredTricks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), renderTrickGrid(), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        width: '100%',\n        height: '40px',\n        marginTop: '8px',\n        border: '1px solid #ddd',\n        borderRadius: '6px',\n        backgroundColor: '#f5f5f5',\n        color: '#2c3e50',\n        fontSize: '15px',\n        fontWeight: 'bold',\n        cursor: 'pointer'\n      },\n      onClick: onChangeContract,\n      children: \"Change Contract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(TrickInput, \"/QmD/W+wxqgdg5tWOmifM1V76DQ=\");\n_c = TrickInput;\nexport default TrickInput;\nvar _c;\n$RefreshReg$(_c, \"TrickInput\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TrickInput","onTrickChange","initialResult","contract","onChangeContract","_s","selectedTrick","setSelectedTrick","requiredTricks","setRequiredTricks","contractMatch","match","level","parseInt","actualTricks","handleTrickClick","numTricks","result","renderTrickGrid","style","display","gridTemplateColumns","gap","children","Array","from","length","_","i","isExact","isMade","isDown","backgroundColor","borderColor","height","border","borderRadius","color","fontWeight","fontSize","alignItems","justifyContent","cursor","padding","gridColumn","onClick","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","textAlign","marginBottom","width","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/mikec/MikesBridge/bonusbridge/src/components/TrickInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './TrickInput.css';\r\n\r\nconst TrickInput = ({ onTrickChange, initialResult = null, contract = '', onChangeContract }) => {\r\n  const [selectedTrick, setSelectedTrick] = useState(null);\r\n  const [requiredTricks, setRequiredTricks] = useState(7);\r\n  \r\n  // Calculate required tricks when contract changes\r\n  useEffect(() => {\r\n    if (contract) {\r\n      const contractMatch = contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\r\n      if (contractMatch) {\r\n        const level = parseInt(contractMatch[1]);\r\n        setRequiredTricks(level + 6);\r\n      }\r\n    }\r\n  }, [contract]);\r\n  \r\n  // Set selected trick from initialResult if provided\r\n  useEffect(() => {\r\n    if (initialResult !== null && requiredTricks) {\r\n      const actualTricks = requiredTricks + initialResult;\r\n      setSelectedTrick(actualTricks);\r\n    }\r\n  }, [initialResult, requiredTricks]);\r\n  \r\n  // Handle trick button click\r\n  const handleTrickClick = (numTricks) => {\r\n    setSelectedTrick(numTricks);\r\n    const result = numTricks - requiredTricks;\r\n    onTrickChange(result, numTricks);\r\n  };\r\n  \r\n  // Create a more efficient grid layout for trick buttons\r\n  const renderTrickGrid = () => {\r\n    // Create a 4x4 grid (with the last row having only 2 buttons)\r\n    return (\r\n      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(4, 1fr)', gap: '6px' }}>\r\n        {Array.from({ length: 14 }, (_, i) => {\r\n          // Only create buttons for tricks 0-13\r\n          if (i <= 13) {\r\n            const isExact = i === requiredTricks;\r\n            const isMade = i > requiredTricks;\r\n            const isDown = i < requiredTricks;\r\n            \r\n            let backgroundColor, borderColor;\r\n            if (selectedTrick === i) {\r\n              if (isExact) {\r\n                backgroundColor = '#ff9800';\r\n                borderColor = '#ff9800';\r\n              } else if (isMade) {\r\n                backgroundColor = '#4caf50';\r\n                borderColor = '#4caf50';\r\n              } else {\r\n                backgroundColor = '#f44336';\r\n                borderColor = '#f44336';\r\n              }\r\n            } else {\r\n              if (isExact) {\r\n                backgroundColor = '#fff3e0';\r\n                borderColor = '#ffe0b2';\r\n              } else if (isMade) {\r\n                backgroundColor = '#e8f5e9';\r\n                borderColor = '#c8e6c9';\r\n              } else {\r\n                backgroundColor = '#ffebee';\r\n                borderColor = '#ffcdd2';\r\n              }\r\n            }\r\n            \r\n            return (\r\n              <button\r\n                key={`trick-${i}`}\r\n                style={{\r\n                  height: '38px',\r\n                  border: `1px solid ${borderColor}`,\r\n                  borderRadius: '6px',\r\n                  backgroundColor,\r\n                  color: selectedTrick === i ? 'white' : 'black',\r\n                  fontWeight: 'bold',\r\n                  fontSize: '15px',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  cursor: 'pointer',\r\n                  padding: '0',\r\n                  // Make tricks 12 and 13 wider (2 columns each)\r\n                  gridColumn: i >= 12 ? 'span 2' : 'span 1'\r\n                }}\r\n                onClick={() => handleTrickClick(i)}\r\n              >\r\n                {i}\r\n              </button>\r\n            );\r\n          }\r\n          return null;\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  return (\r\n    <div style={{\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      gap: '8px',\r\n      padding: '5px 0'\r\n    }}>\r\n      <div style={{\r\n        backgroundColor: '#f0f3f8',\r\n        padding: '8px',\r\n        borderRadius: '6px',\r\n        textAlign: 'center',\r\n        fontSize: '14px',\r\n        fontWeight: 'bold',\r\n        color: '#2c3e50',\r\n        border: '1px solid #dfe6e9',\r\n        marginBottom: '5px'\r\n      }}>\r\n        Required tricks: {requiredTricks}\r\n      </div>\r\n      \r\n      {/* Trick Grid */}\r\n      {renderTrickGrid()}\r\n      \r\n      {/* Change Contract Button - ONLY ONE BUTTON */}\r\n      <button \r\n        style={{\r\n          width: '100%',\r\n          height: '40px',\r\n          marginTop: '8px',\r\n          border: '1px solid #ddd',\r\n          borderRadius: '6px',\r\n          backgroundColor: '#f5f5f5',\r\n          color: '#2c3e50',\r\n          fontSize: '15px',\r\n          fontWeight: 'bold',\r\n          cursor: 'pointer'\r\n        }}\r\n        onClick={onChangeContract}\r\n      >\r\n        Change Contract\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrickInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}