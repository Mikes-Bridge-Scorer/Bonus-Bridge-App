{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikec\\\\MikesBridge\\\\bonusbridge\\\\src\\\\components\\\\ScoreAdjustment.js\",\n  _s = $RefreshSig$();\n// ScoreAdjustment.js - Fixed version\n\nimport React, { useState, useEffect } from 'react';\nimport './ScoreAdjustment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoreAdjustment = ({\n  currentDeal,\n  onSaveAdjustment,\n  onCancel\n}) => {\n  _s();\n  // State for form inputs\n  const [totalHCP, setTotalHCP] = useState(20);\n  const [singletons, setSingletons] = useState(0);\n  const [voids, setVoids] = useState(0);\n  const [longSuits, setLongSuits] = useState(0);\n\n  // Effect to initialize with default values based on current deal\n  useEffect(() => {\n    if (currentDeal) {\n      console.log('ScoreAdjustment: Current deal loaded', currentDeal);\n      // If we have previous analysis data, use it\n      if (currentDeal.handAnalysis) {\n        setTotalHCP(currentDeal.handAnalysis.totalHCP || 20);\n        setSingletons(currentDeal.handAnalysis.singletons || 0);\n        setVoids(currentDeal.handAnalysis.voids || 0);\n        setLongSuits(currentDeal.handAnalysis.longSuits || 0);\n      }\n    }\n  }, [currentDeal]);\n\n  // Validate and handle input changes\n  const handleHCPChange = increment => {\n    setTotalHCP(prev => {\n      const newValue = prev + increment;\n      return Math.min(Math.max(0, newValue), 40); // Limit between 0-40\n    });\n  };\n  const handleSingletonChange = increment => {\n    setSingletons(prev => {\n      const newValue = prev + increment;\n      return Math.min(Math.max(0, newValue), 4); // Max 4 singletons possible\n    });\n  };\n  const handleVoidChange = increment => {\n    setVoids(prev => {\n      const newValue = prev + increment;\n      return Math.min(Math.max(0, newValue), 4); // Max 4 voids possible\n    });\n  };\n  const handleLongSuitChange = increment => {\n    setLongSuits(prev => {\n      const newValue = prev + increment;\n      return Math.min(Math.max(0, newValue), 4); // Limit for practical purposes\n    });\n  };\n\n  // Calculate and prepare final analysis data\n  const calculateFinalAnalysis = () => {\n    // Extract contract details\n    const contractMatch = currentDeal.contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\n    if (!contractMatch) {\n      console.error('Unable to parse contract:', currentDeal.contract);\n      return null;\n    }\n    const level = parseInt(contractMatch[1]);\n    const suit = contractMatch[2];\n    const declarer = contractMatch[3];\n    const doubled = contractMatch[4] || '';\n\n    // Basic data\n    const madeContract = currentDeal.result >= 0;\n    const isNS = declarer === 'N' || declarer === 'S';\n\n    // Calculate distribution points\n    const distributionPoints = voids * 3 + singletons * 2 + longSuits;\n\n    // Calculate HCP distribution\n    const totalPoints = 40; // Total HCP in a deck\n    const declarerHCPPercentage = Math.round(totalHCP / totalPoints * 100);\n    const defenderHCPPercentage = 100 - declarerHCPPercentage;\n    const hcpAdvantage = Math.abs(declarerHCPPercentage - 50);\n    const advantageSide = declarerHCPPercentage > 50 ? \"declarer\" : \"defender\";\n\n    // Determine expected HCP for contract\n    let expectedHCP;\n    if (level <= 2) {\n      // Part scores\n      expectedHCP = 21;\n    } else if (level === 3 && suit === 'NT') {\n      // 3NT\n      expectedHCP = 25;\n    } else if (level === 4 && (suit === '♥' || suit === '♠')) {\n      // 4 major\n      expectedHCP = 24;\n    } else if (level === 5 && (suit === '♣' || suit === '♦')) {\n      // 5 minor\n      expectedHCP = 27;\n    } else if (level === 6) {\n      // Small slam\n      expectedHCP = 30;\n    } else if (level === 7) {\n      // Grand slam\n      expectedHCP = 32;\n    } else {\n      // Other levels - formula based on level\n      expectedHCP = 21 + level * 1.5;\n    }\n\n    // Expected tricks calculations\n    const contractExpectedTricks = level + 6;\n    const handExpectedTricks = Math.min(13, 6 + Math.floor(totalHCP / 3) + Math.floor(distributionPoints / 4));\n\n    // Calculate the raw score and steps for made contracts\n    let calculationSteps = {};\n    let nsPoints = 0;\n    let ewPoints = 0;\n    if (madeContract) {\n      // Step 1: Raw score calculation\n      const rawScore = (currentDeal.rawScore || 0) / 20;\n\n      // Step 2: HCP Adjustment\n      const hcpAdjustment = (totalHCP - expectedHCP) * 0.75;\n      const afterHcpAdjustment = totalHCP > expectedHCP ? rawScore - hcpAdjustment : rawScore + Math.abs(hcpAdjustment);\n\n      // Step 3: Performance Assessment\n      const performanceVariance = currentDeal.result || 0;\n      let afterPerformanceAssessment = afterHcpAdjustment;\n      if (performanceVariance > 0) {\n        // Add points for overtricks\n        afterPerformanceAssessment += performanceVariance * 1.5;\n      }\n\n      // Step 4: Contract Type Adjustment\n      let contractTypeAdjustment = 0;\n      let contractTypeDescription = \"\";\n\n      // Check if it's a game contract\n      const isGameContract = level === 3 && suit === 'NT' || level === 4 && (suit === '♥' || suit === '♠') || level === 5 && (suit === '♣' || suit === '♦') || level >= 6;\n      if (isGameContract) {\n        contractTypeAdjustment += 2;\n        contractTypeDescription = \"(Game)\";\n      }\n      if (level === 6) {\n        contractTypeAdjustment += 4;\n        contractTypeDescription = \"(Small Slam)\";\n      } else if (level === 7) {\n        contractTypeAdjustment += 6;\n        contractTypeDescription = \"(Grand Slam)\";\n      }\n      if (suit === 'NT') {\n        contractTypeAdjustment += 1;\n        contractTypeDescription += \" (NT)\";\n      }\n      const afterContractAdjustments = afterPerformanceAssessment + contractTypeAdjustment;\n\n      // Step 5: Distribution Adjustment\n      let distributionAdjustment = 0;\n      if (suit !== 'NT') {\n        if (distributionPoints >= 7) {\n          distributionAdjustment = -3;\n        } else if (distributionPoints >= 5) {\n          distributionAdjustment = -2;\n        } else if (distributionPoints >= 3) {\n          distributionAdjustment = -1;\n        }\n      }\n\n      // Step 6: Calculate Defender Reward\n      let defenderReward = 0;\n      if (handExpectedTricks > contractExpectedTricks && currentDeal.result < handExpectedTricks - contractExpectedTricks) {\n        // Defender reward calculation\n        const trickDifference = handExpectedTricks - (contractExpectedTricks + currentDeal.result);\n        defenderReward = trickDifference * 2;\n\n        // Extra reward if defending at disadvantage\n        if (advantageSide === \"declarer\") {\n          const extraReward = Math.min(3, hcpAdvantage / 10);\n          defenderReward += extraReward;\n        }\n      }\n\n      // Final declarer points calculation\n      const declarerPoints = Math.max(1, Math.round(afterContractAdjustments + distributionAdjustment));\n\n      // Final defender points\n      const defenderPoints = Math.round(defenderReward);\n\n      // Assign points to the correct side\n      if (isNS) {\n        nsPoints = declarerPoints;\n        ewPoints = defenderPoints;\n      } else {\n        nsPoints = defenderPoints;\n        ewPoints = declarerPoints;\n      }\n\n      // Store calculation steps for display\n      calculationSteps = {\n        rawScore,\n        hcpAdjustment,\n        afterHcpAdjustment,\n        performanceVariance,\n        afterPerformanceAssessment,\n        contractTypeAdjustment,\n        contractTypeDescription,\n        afterContractAdjustments,\n        distributionAdjustment,\n        defenderReward\n      };\n    } else {\n      // Calculation for defeated contracts\n      // Base penalty\n      const basePenalty = Math.abs(currentDeal.rawScore || 0) / 10;\n\n      // Contract level penalties\n      let levelPenalties = 0;\n\n      // Check if it's a game contract\n      const isGameContract = level === 3 && suit === 'NT' || level === 4 && (suit === '♥' || suit === '♠') || level === 5 && (suit === '♣' || suit === '♦') || level >= 6;\n      if (isGameContract) {\n        levelPenalties += 3;\n      }\n      if (level === 6) {\n        levelPenalties += 5;\n      } else if (level === 7) {\n        levelPenalties += 7;\n      }\n\n      // Defender performance bonus\n      let performanceBonus = 0;\n      if (declarerHCPPercentage > 60) {\n        performanceBonus += (declarerHCPPercentage - 50) / 5;\n      }\n      if (Math.abs(currentDeal.result) >= 2) {\n        performanceBonus += 2;\n        if (Math.abs(currentDeal.result) >= 3) {\n          performanceBonus += 3;\n        }\n      }\n\n      // Declarer consolation\n      let consolationPoints = 0;\n      if (declarerHCPPercentage < 40) {\n        consolationPoints = (50 - declarerHCPPercentage) / 10;\n      }\n\n      // Calculate final points\n      const defenderPoints = Math.max(3, Math.round(basePenalty + levelPenalties + performanceBonus));\n      const declarerPoints = Math.round(consolationPoints);\n\n      // Assign points to the correct side\n      if (isNS) {\n        nsPoints = declarerPoints;\n        ewPoints = defenderPoints;\n      } else {\n        nsPoints = defenderPoints;\n        ewPoints = declarerPoints;\n      }\n\n      // Store calculation steps for defeated contracts\n      calculationSteps = {\n        basePenalty,\n        levelPenalties,\n        performanceBonus,\n        consolationPoints\n      };\n    }\n\n    // Return complete analysis data\n    return {\n      totalHCP,\n      singletons,\n      voids,\n      longSuits,\n      distributionPoints,\n      declarerHCPPercentage,\n      defenderHCPPercentage,\n      hcpAdvantage,\n      advantageSide,\n      expectedHCP,\n      contractExpectedTricks,\n      handExpectedTricks,\n      nsPoints,\n      ewPoints,\n      ...calculationSteps\n    };\n  };\n\n  // Handle save button click\n  const handleSave = () => {\n    const analysisData = calculateFinalAnalysis();\n    if (analysisData) {\n      console.log('Calculated analysis data:', analysisData);\n      onSaveAdjustment(analysisData);\n    } else {\n      alert('Error calculating score. Please check your inputs.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"score-adjustment\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"adjustment-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Game Paused for Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Declarer and Dummy, please show your cards to all players.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adjustment-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Bonus Bridge Score Adjustment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"info-btn\",\n        children: \"What is this?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contract-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Contract: \", currentDeal.contract, \" \", currentDeal.result >= 0 ? `Made ${currentDeal.result > 0 ? '+' + currentDeal.result : 'exactly'}` : `Down ${Math.abs(currentDeal.result)}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Raw score: \", currentDeal.rawScore, \" points\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-sections\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Combined HCP (Declarer + Dummy)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"numeric-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"decrement-btn\",\n            onClick: () => handleHCPChange(-1),\n            disabled: totalHCP <= 0,\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-value\",\n            children: totalHCP\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"increment-btn\",\n            onClick: () => handleHCPChange(1),\n            disabled: totalHCP >= 40,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Number of Singletons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"numeric-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"decrement-btn\",\n            onClick: () => handleSingletonChange(-1),\n            disabled: singletons <= 0,\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-value\",\n            children: singletons\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"increment-btn\",\n            onClick: () => handleSingletonChange(1),\n            disabled: singletons >= 4,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Number of Voids\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"numeric-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"decrement-btn\",\n            onClick: () => handleVoidChange(-1),\n            disabled: voids <= 0,\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-value\",\n            children: voids\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"increment-btn\",\n            onClick: () => handleVoidChange(1),\n            disabled: voids >= 4,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Number of Long Suits (6+ cards)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"numeric-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"decrement-btn\",\n            onClick: () => handleLongSuitChange(-1),\n            disabled: longSuits <= 0,\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-value\",\n            children: longSuits\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"increment-btn\",\n            onClick: () => handleLongSuitChange(1),\n            disabled: longSuits >= 4,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel-btn\",\n        onClick: onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-btn\",\n        onClick: handleSave,\n        children: \"Calculate Final Score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 5\n  }, this);\n};\n_s(ScoreAdjustment, \"pYpv1Ga6YAVuR0iLZwj4+7obb6w=\");\n_c = ScoreAdjustment;\nexport default ScoreAdjustment;\nvar _c;\n$RefreshReg$(_c, \"ScoreAdjustment\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ScoreAdjustment","currentDeal","onSaveAdjustment","onCancel","_s","totalHCP","setTotalHCP","singletons","setSingletons","voids","setVoids","longSuits","setLongSuits","console","log","handAnalysis","handleHCPChange","increment","prev","newValue","Math","min","max","handleSingletonChange","handleVoidChange","handleLongSuitChange","calculateFinalAnalysis","contractMatch","contract","match","error","level","parseInt","suit","declarer","doubled","madeContract","result","isNS","distributionPoints","totalPoints","declarerHCPPercentage","round","defenderHCPPercentage","hcpAdvantage","abs","advantageSide","expectedHCP","contractExpectedTricks","handExpectedTricks","floor","calculationSteps","nsPoints","ewPoints","rawScore","hcpAdjustment","afterHcpAdjustment","performanceVariance","afterPerformanceAssessment","contractTypeAdjustment","contractTypeDescription","isGameContract","afterContractAdjustments","distributionAdjustment","defenderReward","trickDifference","extraReward","declarerPoints","defenderPoints","basePenalty","levelPenalties","performanceBonus","consolationPoints","handleSave","analysisData","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/mikec/MikesBridge/bonusbridge/src/components/ScoreAdjustment.js"],"sourcesContent":["// ScoreAdjustment.js - Fixed version\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport './ScoreAdjustment.css';\r\n\r\nconst ScoreAdjustment = ({ currentDeal, onSaveAdjustment, onCancel }) => {\r\n  // State for form inputs\r\n  const [totalHCP, setTotalHCP] = useState(20);\r\n  const [singletons, setSingletons] = useState(0);\r\n  const [voids, setVoids] = useState(0);\r\n  const [longSuits, setLongSuits] = useState(0);\r\n  \r\n  // Effect to initialize with default values based on current deal\r\n  useEffect(() => {\r\n    if (currentDeal) {\r\n      console.log('ScoreAdjustment: Current deal loaded', currentDeal);\r\n      // If we have previous analysis data, use it\r\n      if (currentDeal.handAnalysis) {\r\n        setTotalHCP(currentDeal.handAnalysis.totalHCP || 20);\r\n        setSingletons(currentDeal.handAnalysis.singletons || 0);\r\n        setVoids(currentDeal.handAnalysis.voids || 0);\r\n        setLongSuits(currentDeal.handAnalysis.longSuits || 0);\r\n      }\r\n    }\r\n  }, [currentDeal]);\r\n  \r\n  // Validate and handle input changes\r\n  const handleHCPChange = (increment) => {\r\n    setTotalHCP(prev => {\r\n      const newValue = prev + increment;\r\n      return Math.min(Math.max(0, newValue), 40); // Limit between 0-40\r\n    });\r\n  };\r\n  \r\n  const handleSingletonChange = (increment) => {\r\n    setSingletons(prev => {\r\n      const newValue = prev + increment;\r\n      return Math.min(Math.max(0, newValue), 4); // Max 4 singletons possible\r\n    });\r\n  };\r\n  \r\n  const handleVoidChange = (increment) => {\r\n    setVoids(prev => {\r\n      const newValue = prev + increment;\r\n      return Math.min(Math.max(0, newValue), 4); // Max 4 voids possible\r\n    });\r\n  };\r\n  \r\n  const handleLongSuitChange = (increment) => {\r\n    setLongSuits(prev => {\r\n      const newValue = prev + increment;\r\n      return Math.min(Math.max(0, newValue), 4); // Limit for practical purposes\r\n    });\r\n  };\r\n  \r\n  // Calculate and prepare final analysis data\r\n  const calculateFinalAnalysis = () => {\r\n    // Extract contract details\r\n    const contractMatch = currentDeal.contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\r\n    if (!contractMatch) {\r\n      console.error('Unable to parse contract:', currentDeal.contract);\r\n      return null;\r\n    }\r\n    \r\n    const level = parseInt(contractMatch[1]);\r\n    const suit = contractMatch[2];\r\n    const declarer = contractMatch[3];\r\n    const doubled = contractMatch[4] || '';\r\n    \r\n    // Basic data\r\n    const madeContract = currentDeal.result >= 0;\r\n    const isNS = declarer === 'N' || declarer === 'S';\r\n    \r\n    // Calculate distribution points\r\n    const distributionPoints = (voids * 3) + (singletons * 2) + longSuits;\r\n    \r\n    // Calculate HCP distribution\r\n    const totalPoints = 40; // Total HCP in a deck\r\n    const declarerHCPPercentage = Math.round((totalHCP / totalPoints) * 100);\r\n    const defenderHCPPercentage = 100 - declarerHCPPercentage;\r\n    const hcpAdvantage = Math.abs(declarerHCPPercentage - 50);\r\n    const advantageSide = declarerHCPPercentage > 50 ? \"declarer\" : \"defender\";\r\n    \r\n    // Determine expected HCP for contract\r\n    let expectedHCP;\r\n    if (level <= 2) {\r\n      // Part scores\r\n      expectedHCP = 21;\r\n    } else if (level === 3 && suit === 'NT') {\r\n      // 3NT\r\n      expectedHCP = 25;\r\n    } else if (level === 4 && (suit === '♥' || suit === '♠')) {\r\n      // 4 major\r\n      expectedHCP = 24;\r\n    } else if (level === 5 && (suit === '♣' || suit === '♦')) {\r\n      // 5 minor\r\n      expectedHCP = 27;\r\n    } else if (level === 6) {\r\n      // Small slam\r\n      expectedHCP = 30;\r\n    } else if (level === 7) {\r\n      // Grand slam\r\n      expectedHCP = 32;\r\n    } else {\r\n      // Other levels - formula based on level\r\n      expectedHCP = 21 + (level * 1.5);\r\n    }\r\n    \r\n    // Expected tricks calculations\r\n    const contractExpectedTricks = level + 6;\r\n    const handExpectedTricks = Math.min(13, 6 + Math.floor(totalHCP / 3) + Math.floor(distributionPoints / 4));\r\n    \r\n    // Calculate the raw score and steps for made contracts\r\n    let calculationSteps = {};\r\n    let nsPoints = 0;\r\n    let ewPoints = 0;\r\n    \r\n    if (madeContract) {\r\n      // Step 1: Raw score calculation\r\n      const rawScore = (currentDeal.rawScore || 0) / 20;\r\n      \r\n      // Step 2: HCP Adjustment\r\n      const hcpAdjustment = (totalHCP - expectedHCP) * 0.75;\r\n      const afterHcpAdjustment = totalHCP > expectedHCP \r\n        ? rawScore - hcpAdjustment \r\n        : rawScore + Math.abs(hcpAdjustment);\r\n      \r\n      // Step 3: Performance Assessment\r\n      const performanceVariance = currentDeal.result || 0;\r\n      let afterPerformanceAssessment = afterHcpAdjustment;\r\n      \r\n      if (performanceVariance > 0) {\r\n        // Add points for overtricks\r\n        afterPerformanceAssessment += (performanceVariance * 1.5);\r\n      }\r\n      \r\n      // Step 4: Contract Type Adjustment\r\n      let contractTypeAdjustment = 0;\r\n      let contractTypeDescription = \"\";\r\n      \r\n      // Check if it's a game contract\r\n      const isGameContract = \r\n        (level === 3 && suit === 'NT') ||\r\n        (level === 4 && (suit === '♥' || suit === '♠')) ||\r\n        (level === 5 && (suit === '♣' || suit === '♦')) ||\r\n        level >= 6;\r\n      \r\n      if (isGameContract) {\r\n        contractTypeAdjustment += 2;\r\n        contractTypeDescription = \"(Game)\";\r\n      }\r\n      \r\n      if (level === 6) {\r\n        contractTypeAdjustment += 4;\r\n        contractTypeDescription = \"(Small Slam)\";\r\n      } else if (level === 7) {\r\n        contractTypeAdjustment += 6;\r\n        contractTypeDescription = \"(Grand Slam)\";\r\n      }\r\n      \r\n      if (suit === 'NT') {\r\n        contractTypeAdjustment += 1;\r\n        contractTypeDescription += \" (NT)\";\r\n      }\r\n      \r\n      const afterContractAdjustments = afterPerformanceAssessment + contractTypeAdjustment;\r\n      \r\n      // Step 5: Distribution Adjustment\r\n      let distributionAdjustment = 0;\r\n      if (suit !== 'NT') {\r\n        if (distributionPoints >= 7) {\r\n          distributionAdjustment = -3;\r\n        } else if (distributionPoints >= 5) {\r\n          distributionAdjustment = -2;\r\n        } else if (distributionPoints >= 3) {\r\n          distributionAdjustment = -1;\r\n        }\r\n      }\r\n      \r\n      // Step 6: Calculate Defender Reward\r\n      let defenderReward = 0;\r\n      if (handExpectedTricks > contractExpectedTricks && currentDeal.result < (handExpectedTricks - contractExpectedTricks)) {\r\n        // Defender reward calculation\r\n        const trickDifference = handExpectedTricks - (contractExpectedTricks + currentDeal.result);\r\n        defenderReward = trickDifference * 2;\r\n        \r\n        // Extra reward if defending at disadvantage\r\n        if (advantageSide === \"declarer\") {\r\n          const extraReward = Math.min(3, hcpAdvantage / 10);\r\n          defenderReward += extraReward;\r\n        }\r\n      }\r\n      \r\n      // Final declarer points calculation\r\n      const declarerPoints = Math.max(1, Math.round(afterContractAdjustments + distributionAdjustment));\r\n      \r\n      // Final defender points\r\n      const defenderPoints = Math.round(defenderReward);\r\n      \r\n      // Assign points to the correct side\r\n      if (isNS) {\r\n        nsPoints = declarerPoints;\r\n        ewPoints = defenderPoints;\r\n      } else {\r\n        nsPoints = defenderPoints;\r\n        ewPoints = declarerPoints;\r\n      }\r\n      \r\n      // Store calculation steps for display\r\n      calculationSteps = {\r\n        rawScore,\r\n        hcpAdjustment,\r\n        afterHcpAdjustment,\r\n        performanceVariance,\r\n        afterPerformanceAssessment,\r\n        contractTypeAdjustment,\r\n        contractTypeDescription,\r\n        afterContractAdjustments,\r\n        distributionAdjustment,\r\n        defenderReward\r\n      };\r\n      \r\n    } else {\r\n      // Calculation for defeated contracts\r\n      // Base penalty\r\n      const basePenalty = Math.abs(currentDeal.rawScore || 0) / 10;\r\n      \r\n      // Contract level penalties\r\n      let levelPenalties = 0;\r\n      \r\n      // Check if it's a game contract\r\n      const isGameContract = \r\n        (level === 3 && suit === 'NT') ||\r\n        (level === 4 && (suit === '♥' || suit === '♠')) ||\r\n        (level === 5 && (suit === '♣' || suit === '♦')) ||\r\n        level >= 6;\r\n      \r\n      if (isGameContract) {\r\n        levelPenalties += 3;\r\n      }\r\n      \r\n      if (level === 6) {\r\n        levelPenalties += 5;\r\n      } else if (level === 7) {\r\n        levelPenalties += 7;\r\n      }\r\n      \r\n      // Defender performance bonus\r\n      let performanceBonus = 0;\r\n      \r\n      if (declarerHCPPercentage > 60) {\r\n        performanceBonus += (declarerHCPPercentage - 50) / 5;\r\n      }\r\n      \r\n      if (Math.abs(currentDeal.result) >= 2) {\r\n        performanceBonus += 2;\r\n        \r\n        if (Math.abs(currentDeal.result) >= 3) {\r\n          performanceBonus += 3;\r\n        }\r\n      }\r\n      \r\n      // Declarer consolation\r\n      let consolationPoints = 0;\r\n      \r\n      if (declarerHCPPercentage < 40) {\r\n        consolationPoints = (50 - declarerHCPPercentage) / 10;\r\n      }\r\n      \r\n      // Calculate final points\r\n      const defenderPoints = Math.max(3, Math.round(basePenalty + levelPenalties + performanceBonus));\r\n      const declarerPoints = Math.round(consolationPoints);\r\n      \r\n      // Assign points to the correct side\r\n      if (isNS) {\r\n        nsPoints = declarerPoints;\r\n        ewPoints = defenderPoints;\r\n      } else {\r\n        nsPoints = defenderPoints;\r\n        ewPoints = declarerPoints;\r\n      }\r\n      \r\n      // Store calculation steps for defeated contracts\r\n      calculationSteps = {\r\n        basePenalty,\r\n        levelPenalties,\r\n        performanceBonus,\r\n        consolationPoints\r\n      };\r\n    }\r\n    \r\n    // Return complete analysis data\r\n    return {\r\n      totalHCP,\r\n      singletons,\r\n      voids,\r\n      longSuits,\r\n      distributionPoints,\r\n      declarerHCPPercentage,\r\n      defenderHCPPercentage,\r\n      hcpAdvantage,\r\n      advantageSide,\r\n      expectedHCP,\r\n      contractExpectedTricks,\r\n      handExpectedTricks,\r\n      nsPoints,\r\n      ewPoints,\r\n      ...calculationSteps\r\n    };\r\n  };\r\n  \r\n  // Handle save button click\r\n  const handleSave = () => {\r\n    const analysisData = calculateFinalAnalysis();\r\n    if (analysisData) {\r\n      console.log('Calculated analysis data:', analysisData);\r\n      onSaveAdjustment(analysisData);\r\n    } else {\r\n      alert('Error calculating score. Please check your inputs.');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"score-adjustment\">\r\n      <header className=\"adjustment-header\">\r\n        <h1>Game Paused for Analysis</h1>\r\n        <p>Declarer and Dummy, please show your cards to all players.</p>\r\n      </header>\r\n      \r\n      <div className=\"adjustment-title\">\r\n        <h2>Bonus Bridge Score Adjustment</h2>\r\n        <button className=\"info-btn\">What is this?</button>\r\n      </div>\r\n      \r\n      <div className=\"contract-info\">\r\n        <h3>\r\n          Contract: {currentDeal.contract} {currentDeal.result >= 0 ? \r\n            `Made ${currentDeal.result > 0 ? '+' + currentDeal.result : 'exactly'}` : \r\n            `Down ${Math.abs(currentDeal.result)}`}\r\n        </h3>\r\n        <p>Raw score: {currentDeal.rawScore} points</p>\r\n      </div>\r\n      \r\n      <div className=\"input-sections\">\r\n        <div className=\"input-section\">\r\n          <h3>Combined HCP (Declarer + Dummy)</h3>\r\n          <div className=\"numeric-input\">\r\n            <button \r\n              className=\"decrement-btn\"\r\n              onClick={() => handleHCPChange(-1)}\r\n              disabled={totalHCP <= 0}\r\n            >\r\n              -\r\n            </button>\r\n            <div className=\"input-value\">{totalHCP}</div>\r\n            <button \r\n              className=\"increment-btn\"\r\n              onClick={() => handleHCPChange(1)}\r\n              disabled={totalHCP >= 40}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"input-section\">\r\n          <h3>Number of Singletons</h3>\r\n          <div className=\"numeric-input\">\r\n            <button \r\n              className=\"decrement-btn\"\r\n              onClick={() => handleSingletonChange(-1)}\r\n              disabled={singletons <= 0}\r\n            >\r\n              -\r\n            </button>\r\n            <div className=\"input-value\">{singletons}</div>\r\n            <button \r\n              className=\"increment-btn\"\r\n              onClick={() => handleSingletonChange(1)}\r\n              disabled={singletons >= 4}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"input-section\">\r\n          <h3>Number of Voids</h3>\r\n          <div className=\"numeric-input\">\r\n            <button \r\n              className=\"decrement-btn\"\r\n              onClick={() => handleVoidChange(-1)}\r\n              disabled={voids <= 0}\r\n            >\r\n              -\r\n            </button>\r\n            <div className=\"input-value\">{voids}</div>\r\n            <button \r\n              className=\"increment-btn\"\r\n              onClick={() => handleVoidChange(1)}\r\n              disabled={voids >= 4}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"input-section\">\r\n          <h3>Number of Long Suits (6+ cards)</h3>\r\n          <div className=\"numeric-input\">\r\n            <button \r\n              className=\"decrement-btn\"\r\n              onClick={() => handleLongSuitChange(-1)}\r\n              disabled={longSuits <= 0}\r\n            >\r\n              -\r\n            </button>\r\n            <div className=\"input-value\">{longSuits}</div>\r\n            <button \r\n              className=\"increment-btn\"\r\n              onClick={() => handleLongSuitChange(1)}\r\n              disabled={longSuits >= 4}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"action-buttons\">\r\n        <button \r\n          className=\"cancel-btn\"\r\n          onClick={onCancel}\r\n        >\r\n          Cancel\r\n        </button>\r\n        \r\n        <button \r\n          className=\"save-btn\"\r\n          onClick={handleSave}\r\n        >\r\n          Calculate Final Score\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScoreAdjustment;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}