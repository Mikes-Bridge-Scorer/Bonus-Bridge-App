{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikec\\\\MikesBridge\\\\bonusbridge\\\\src\\\\BridgeGameUI.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ScoreTracking from './components/scoreTracking';\nimport ContractInput from './components/ContractInput';\nimport TrickInput from './components/TrickInput';\nimport { requestWakeLock, releaseWakeLock, isWakeLockSupported } from './utils/wakeLock';\nimport { vulnerabilityDescription, calculateBridgeScore, parseContract, determineDealer } from './utils/scoring';\nimport './global.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BridgeGameUI = ({\n  gameState,\n  updateCurrentDeal,\n  onNextDeal,\n  onNewGame,\n  setGameState\n}) => {\n  _s();\n  // State to track which scoring method is selected\n  const [scoringMethod, setScoringMethod] = useState(null);\n\n  // Function to keep the device awake\n  const toggleKeepAwake = async () => {\n    const newAwakeState = !gameState.isAwake;\n\n    // Update state first for immediate UI feedback\n    setGameState(prev => ({\n      ...prev,\n      isAwake: newAwakeState\n    }));\n    if (newAwakeState) {\n      // Turn on wake lock\n      if (isWakeLockSupported()) {\n        const success = await requestWakeLock();\n        if (!success) {\n          // Wake lock request failed, revert state\n          setGameState(prev => ({\n            ...prev,\n            isAwake: false\n          }));\n        }\n      } else {\n        console.log('Wake Lock API not supported in this browser');\n      }\n    } else {\n      // Turn off wake lock\n      await releaseWakeLock();\n    }\n  };\n\n  // Show score popup\n  const showScorePopup = () => {\n    setGameState(prev => ({\n      ...prev,\n      showScorePopup: true\n    }));\n  };\n\n  // Hide score popup\n  const hideScorePopup = () => {\n    setGameState(prev => ({\n      ...prev,\n      showScorePopup: false\n    }));\n    // Reset scoring method when popup is closed\n    setScoringMethod(null);\n  };\n\n  // Handle contract input changes\n  const handleContractChange = contract => {\n    updateCurrentDeal({\n      contract\n    });\n  };\n\n  // Handle trick input changes\n  const handleTrickChange = (result, tricks) => {\n    updateCurrentDeal({\n      result,\n      tricks\n    });\n  };\n\n  // Handle choosing Bonus Bridge scoring\n  const handleChooseBonusBridge = () => {\n    setScoringMethod('bonus');\n    hideScorePopup();\n    // Navigate to score adjustment page\n    // For now, we'll just continue to next deal\n    onNextDeal();\n  };\n\n  // Handle choosing Party Bridge scoring\n  const handleChoosePartyBridge = () => {\n    setScoringMethod('party');\n    hideScorePopup();\n    // Skip adjustments and go straight to next deal\n    onNextDeal();\n  };\n\n  // Format contract for display\n  const formatContractForDisplay = (contract, vulnerable) => {\n    if (!contract) return \"\";\n    console.log(\"Formatting contract:\", contract); // Debug log\n\n    const contractMatch = contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\n    if (!contractMatch) {\n      console.log(\"Contract match failed\"); // Debug log\n      return contract;\n    }\n    const level = contractMatch[1];\n    const suit = contractMatch[2];\n    const declarer = contractMatch[3];\n    const doubled = contractMatch[4];\n    console.log(\"Parsed contract parts:\", level, suit, declarer, doubled); // Debug log\n\n    // Get full declarer name\n    let declarerName = \"\";\n    switch (declarer) {\n      case 'N':\n        declarerName = \"North\";\n        break;\n      case 'E':\n        declarerName = \"East\";\n        break;\n      case 'S':\n        declarerName = \"South\";\n        break;\n      case 'W':\n        declarerName = \"West\";\n        break;\n      default:\n        declarerName = declarer;\n    }\n\n    // Get vulnerability text\n    const isNS = declarer === 'N' || declarer === 'S';\n    const declarerVulnerable = isNS ? (vulnerable === null || vulnerable === void 0 ? void 0 : vulnerable.ns) || false : (vulnerable === null || vulnerable === void 0 ? void 0 : vulnerable.ew) || false;\n    const vulText = declarerVulnerable ? \"vul\" : \"not vul\";\n\n    // Format double/redouble\n    const doubleText = doubled === 'X' ? ' X' : doubled === 'XX' ? ' XX' : '';\n    const formattedContract = `${level}${suit} by ${declarerName}${doubleText} ${vulText}`;\n    console.log(\"Formatted contract:\", formattedContract); // Debug log\n\n    return formattedContract;\n  };\n\n  // Get a full description of the contract and result\n  const getFullContractDescription = currentDeal => {\n    var _currentDeal$vulnerab, _currentDeal$vulnerab2;\n    if (!currentDeal || !currentDeal.contract) return \"\";\n    const contractMatch = currentDeal.contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\n    if (!contractMatch) return \"\";\n    const level = contractMatch[1];\n    const suit = contractMatch[2];\n    const declarer = contractMatch[3];\n    const doubled = contractMatch[4];\n\n    // Determine declarer's full name\n    let declarerName = \"\";\n    switch (declarer) {\n      case 'N':\n        declarerName = \"North\";\n        break;\n      case 'E':\n        declarerName = \"East\";\n        break;\n      case 'S':\n        declarerName = \"South\";\n        break;\n      case 'W':\n        declarerName = \"West\";\n        break;\n      default:\n        declarerName = declarer;\n    }\n\n    // Calculate required tricks\n    const requiredTricks = parseInt(level) + 6;\n\n    // Calculate actual tricks\n    let actualTricks = requiredTricks + (currentDeal.result || 0);\n\n    // Determine if the contract was made or went down\n    const madeContract = currentDeal.result >= 0;\n\n    // Get vulnerability text\n    const isNS = declarer === 'N' || declarer === 'S';\n    const declarerVulnerable = isNS ? ((_currentDeal$vulnerab = currentDeal.vulnerable) === null || _currentDeal$vulnerab === void 0 ? void 0 : _currentDeal$vulnerab.ns) || false : ((_currentDeal$vulnerab2 = currentDeal.vulnerable) === null || _currentDeal$vulnerab2 === void 0 ? void 0 : _currentDeal$vulnerab2.ew) || false;\n    const vulText = declarerVulnerable ? \"vul\" : \"not vul\";\n\n    // Determine which side scores\n    const scoringSide = isNS ? 'NS' : 'EW';\n\n    // Calculate standard bridge score\n    const contractDetails = parseContract(currentDeal.contract, currentDeal.result, currentDeal.vulnerable);\n    const score = calculateBridgeScore(contractDetails);\n\n    // Determine which side gets the score\n    let scoreValue = 0;\n    let scoringSideDisplay = '';\n    if (madeContract) {\n      // If contract was made, declarer's side gets the score\n      scoreValue = isNS ? score.nsPoints : score.ewPoints;\n      scoringSideDisplay = scoringSide;\n    } else {\n      // If contract was defeated, defenders get the score\n      scoreValue = isNS ? score.ewPoints : score.nsPoints;\n      scoringSideDisplay = isNS ? 'EW' : 'NS';\n    }\n\n    // Make sure score is positive for display\n    const scoreDisplay = Math.abs(scoreValue);\n\n    // Format doubling\n    const doubleText = doubled === 'X' ? ' X' : doubled === 'XX' ? ' XX' : '';\n\n    // Result description\n    const resultDesc = madeContract ? currentDeal.result > 0 ? `making ${actualTricks} tricks (+${currentDeal.result})` : `making ${actualTricks} tricks (just made)` : `making ${actualTricks} tricks (down ${Math.abs(currentDeal.result)})`;\n\n    // Create the full description\n    const description = `${level}${suit} by ${declarerName}${doubleText} ${vulText} ${resultDesc} scoring ${scoreDisplay} for ${scoringSideDisplay}`;\n    return description;\n  };\n\n  // Reset the game state when component mounts or when a new game starts\n  useEffect(() => {\n    if (gameState.dealNumber === 1) {\n      // Clear any previously selected inputs\n      updateCurrentDeal({\n        contract: '',\n        declarer: '',\n        result: null,\n        tricks: null\n      });\n    }\n    // Important: Add gameState.dealNumber to dependencies but NOT updateCurrentDeal\n    // This prevents the infinite loop\n  }, [gameState.dealNumber, gameState.gameNumber]); // Remove updateCurrentDeal from dependencies\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bridge-game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"game-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info-left\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Game #\", gameState.gameNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Bonus Bridge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info-right\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Deal #\", gameState.dealNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vulnerability-info\",\n        children: vulnerabilityDescription(gameState.currentDeal.vulnerable)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-position\",\n        children: [\"Dealer: \", determineDealer(gameState.dealNumber)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contract-input-container\",\n        children: /*#__PURE__*/_jsxDEV(ContractInput, {\n          onContractChange: handleContractChange,\n          initialContract: gameState.currentDeal.contract\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), gameState.currentDeal.contract && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-contract-display\",\n        children: [\"CONTRACT: \", formatContractForDisplay(gameState.currentDeal.contract, gameState.currentDeal.vulnerable)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trick-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tricks-label\",\n          children: \"Tricks Taken:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TrickInput, {\n          onTrickChange: handleTrickChange,\n          initialResult: gameState.currentDeal.result,\n          contract: gameState.currentDeal.contract\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), gameState.currentDeal.contract && gameState.currentDeal.result !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-display\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-text\",\n          children: getFullContractDescription(gameState.currentDeal)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"game-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keep-awake-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `keep-awake-btn ${gameState.isAwake ? 'active' : ''}`,\n          onClick: toggleKeepAwake,\n          children: [\"Keep Awake: \", gameState.isAwake ? 'ON' : 'OFF']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"score-btn\",\n          onClick: showScorePopup,\n          children: \"Show Scores\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next-deal-btn\",\n          onClick: onNextDeal,\n          disabled: !gameState.currentDeal.contract || gameState.currentDeal.result === null,\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-game-btn\",\n          onClick: onNewGame,\n          children: \"New Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), gameState.showScorePopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Current Scores\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ScoreTracking, {\n          scores: gameState.scores,\n          currentDeal: gameState.currentDeal,\n          onChooseBonusBridge: handleChooseBonusBridge,\n          onChoosePartyBridge: handleChoosePartyBridge\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: hideScorePopup,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n};\n_s(BridgeGameUI, \"qbao1nyzDeIG7uSlVfDGvGVD+ec=\");\n_c = BridgeGameUI;\nexport default BridgeGameUI;\nvar _c;\n$RefreshReg$(_c, \"BridgeGameUI\");","map":{"version":3,"names":["React","useState","useEffect","ScoreTracking","ContractInput","TrickInput","requestWakeLock","releaseWakeLock","isWakeLockSupported","vulnerabilityDescription","calculateBridgeScore","parseContract","determineDealer","jsxDEV","_jsxDEV","BridgeGameUI","gameState","updateCurrentDeal","onNextDeal","onNewGame","setGameState","_s","scoringMethod","setScoringMethod","toggleKeepAwake","newAwakeState","isAwake","prev","success","console","log","showScorePopup","hideScorePopup","handleContractChange","contract","handleTrickChange","result","tricks","handleChooseBonusBridge","handleChoosePartyBridge","formatContractForDisplay","vulnerable","contractMatch","match","level","suit","declarer","doubled","declarerName","isNS","declarerVulnerable","ns","ew","vulText","doubleText","formattedContract","getFullContractDescription","currentDeal","_currentDeal$vulnerab","_currentDeal$vulnerab2","requiredTricks","parseInt","actualTricks","madeContract","scoringSide","contractDetails","score","scoreValue","scoringSideDisplay","nsPoints","ewPoints","scoreDisplay","Math","abs","resultDesc","description","dealNumber","gameNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onContractChange","initialContract","onTrickChange","initialResult","onClick","disabled","scores","onChooseBonusBridge","onChoosePartyBridge","_c","$RefreshReg$"],"sources":["C:/Users/mikec/MikesBridge/bonusbridge/src/BridgeGameUI.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ScoreTracking from './components/scoreTracking';\r\nimport ContractInput from './components/ContractInput';\r\nimport TrickInput from './components/TrickInput';\r\nimport { \r\n  requestWakeLock, \r\n  releaseWakeLock, \r\n  isWakeLockSupported \r\n} from './utils/wakeLock';\r\nimport { \r\n  vulnerabilityDescription, \r\n  calculateBridgeScore,\r\n  parseContract,\r\n  determineDealer\r\n} from './utils/scoring';\r\nimport './global.css';\r\n\r\nconst BridgeGameUI = ({ gameState, updateCurrentDeal, onNextDeal, onNewGame, setGameState }) => {\r\n  // State to track which scoring method is selected\r\n  const [scoringMethod, setScoringMethod] = useState(null);\r\n\r\n  // Function to keep the device awake\r\n  const toggleKeepAwake = async () => {\r\n    const newAwakeState = !gameState.isAwake;\r\n    \r\n    // Update state first for immediate UI feedback\r\n    setGameState(prev => ({\r\n      ...prev,\r\n      isAwake: newAwakeState\r\n    }));\r\n    \r\n    if (newAwakeState) {\r\n      // Turn on wake lock\r\n      if (isWakeLockSupported()) {\r\n        const success = await requestWakeLock();\r\n        if (!success) {\r\n          // Wake lock request failed, revert state\r\n          setGameState(prev => ({\r\n            ...prev,\r\n            isAwake: false\r\n          }));\r\n        }\r\n      } else {\r\n        console.log('Wake Lock API not supported in this browser');\r\n      }\r\n    } else {\r\n      // Turn off wake lock\r\n      await releaseWakeLock();\r\n    }\r\n  };\r\n\r\n  // Show score popup\r\n  const showScorePopup = () => {\r\n    setGameState(prev => ({\r\n      ...prev,\r\n      showScorePopup: true\r\n    }));\r\n  };\r\n\r\n  // Hide score popup\r\n  const hideScorePopup = () => {\r\n    setGameState(prev => ({\r\n      ...prev,\r\n      showScorePopup: false\r\n    }));\r\n    // Reset scoring method when popup is closed\r\n    setScoringMethod(null);\r\n  };\r\n\r\n  // Handle contract input changes\r\n  const handleContractChange = (contract) => {\r\n    updateCurrentDeal({ contract });\r\n  };\r\n\r\n  // Handle trick input changes\r\n  const handleTrickChange = (result, tricks) => {\r\n    updateCurrentDeal({ result, tricks });\r\n  };\r\n  \r\n  // Handle choosing Bonus Bridge scoring\r\n  const handleChooseBonusBridge = () => {\r\n    setScoringMethod('bonus');\r\n    hideScorePopup();\r\n    // Navigate to score adjustment page\r\n    // For now, we'll just continue to next deal\r\n    onNextDeal();\r\n  };\r\n  \r\n  // Handle choosing Party Bridge scoring\r\n  const handleChoosePartyBridge = () => {\r\n    setScoringMethod('party');\r\n    hideScorePopup();\r\n    // Skip adjustments and go straight to next deal\r\n    onNextDeal();\r\n  };\r\n  \r\n  // Format contract for display\r\n  const formatContractForDisplay = (contract, vulnerable) => {\r\n    if (!contract) return \"\";\r\n    \r\n    console.log(\"Formatting contract:\", contract); // Debug log\r\n    \r\n    const contractMatch = contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\r\n    if (!contractMatch) {\r\n      console.log(\"Contract match failed\"); // Debug log\r\n      return contract;\r\n    }\r\n    \r\n    const level = contractMatch[1];\r\n    const suit = contractMatch[2];\r\n    const declarer = contractMatch[3];\r\n    const doubled = contractMatch[4];\r\n    \r\n    console.log(\"Parsed contract parts:\", level, suit, declarer, doubled); // Debug log\r\n    \r\n    // Get full declarer name\r\n    let declarerName = \"\";\r\n    switch (declarer) {\r\n      case 'N': declarerName = \"North\"; break;\r\n      case 'E': declarerName = \"East\"; break;\r\n      case 'S': declarerName = \"South\"; break;\r\n      case 'W': declarerName = \"West\"; break;\r\n      default: declarerName = declarer;\r\n    }\r\n    \r\n    // Get vulnerability text\r\n    const isNS = declarer === 'N' || declarer === 'S';\r\n    const declarerVulnerable = isNS ? \r\n      (vulnerable?.ns || false) : \r\n      (vulnerable?.ew || false);\r\n    \r\n    const vulText = declarerVulnerable ? \"vul\" : \"not vul\";\r\n    \r\n    // Format double/redouble\r\n    const doubleText = doubled === 'X' ? ' X' : doubled === 'XX' ? ' XX' : '';\r\n    \r\n    const formattedContract = `${level}${suit} by ${declarerName}${doubleText} ${vulText}`;\r\n    console.log(\"Formatted contract:\", formattedContract); // Debug log\r\n    \r\n    return formattedContract;\r\n  };\r\n  \r\n  // Get a full description of the contract and result\r\n  const getFullContractDescription = (currentDeal) => {\r\n    if (!currentDeal || !currentDeal.contract) return \"\";\r\n    \r\n    const contractMatch = currentDeal.contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\r\n    if (!contractMatch) return \"\";\r\n    \r\n    const level = contractMatch[1];\r\n    const suit = contractMatch[2];\r\n    const declarer = contractMatch[3];\r\n    const doubled = contractMatch[4];\r\n    \r\n    // Determine declarer's full name\r\n    let declarerName = \"\";\r\n    switch (declarer) {\r\n      case 'N': declarerName = \"North\"; break;\r\n      case 'E': declarerName = \"East\"; break;\r\n      case 'S': declarerName = \"South\"; break;\r\n      case 'W': declarerName = \"West\"; break;\r\n      default: declarerName = declarer;\r\n    }\r\n    \r\n    // Calculate required tricks\r\n    const requiredTricks = parseInt(level) + 6;\r\n    \r\n    // Calculate actual tricks\r\n    let actualTricks = requiredTricks + (currentDeal.result || 0);\r\n    \r\n    // Determine if the contract was made or went down\r\n    const madeContract = currentDeal.result >= 0;\r\n    \r\n    // Get vulnerability text\r\n    const isNS = declarer === 'N' || declarer === 'S';\r\n    const declarerVulnerable = isNS ? \r\n      (currentDeal.vulnerable?.ns || false) : \r\n      (currentDeal.vulnerable?.ew || false);\r\n    \r\n    const vulText = declarerVulnerable ? \"vul\" : \"not vul\";\r\n    \r\n    // Determine which side scores\r\n    const scoringSide = isNS ? 'NS' : 'EW';\r\n    \r\n    // Calculate standard bridge score\r\n    const contractDetails = parseContract(currentDeal.contract, currentDeal.result, currentDeal.vulnerable);\r\n    const score = calculateBridgeScore(contractDetails);\r\n    \r\n    // Determine which side gets the score\r\n    let scoreValue = 0;\r\n    let scoringSideDisplay = '';\r\n    \r\n    if (madeContract) {\r\n      // If contract was made, declarer's side gets the score\r\n      scoreValue = isNS ? score.nsPoints : score.ewPoints;\r\n      scoringSideDisplay = scoringSide;\r\n    } else {\r\n      // If contract was defeated, defenders get the score\r\n      scoreValue = isNS ? score.ewPoints : score.nsPoints;\r\n      scoringSideDisplay = isNS ? 'EW' : 'NS';\r\n    }\r\n    \r\n    // Make sure score is positive for display\r\n    const scoreDisplay = Math.abs(scoreValue);\r\n    \r\n    // Format doubling\r\n    const doubleText = doubled === 'X' ? ' X' : doubled === 'XX' ? ' XX' : '';\r\n    \r\n    // Result description\r\n    const resultDesc = madeContract ? \r\n      (currentDeal.result > 0 ? \r\n        `making ${actualTricks} tricks (+${currentDeal.result})` : \r\n        `making ${actualTricks} tricks (just made)`) : \r\n      `making ${actualTricks} tricks (down ${Math.abs(currentDeal.result)})`;\r\n    \r\n    // Create the full description\r\n    const description = `${level}${suit} by ${declarerName}${doubleText} ${vulText} ${resultDesc} scoring ${scoreDisplay} for ${scoringSideDisplay}`;\r\n    \r\n    return description;\r\n  };\r\n\r\n  // Reset the game state when component mounts or when a new game starts\r\n  useEffect(() => {\r\n    if (gameState.dealNumber === 1) {\r\n      // Clear any previously selected inputs\r\n      updateCurrentDeal({\r\n        contract: '',\r\n        declarer: '',\r\n        result: null,\r\n        tricks: null\r\n      });\r\n    }\r\n  // Important: Add gameState.dealNumber to dependencies but NOT updateCurrentDeal\r\n  // This prevents the infinite loop\r\n  }, [gameState.dealNumber, gameState.gameNumber]); // Remove updateCurrentDeal from dependencies\r\n\r\n  return (\r\n    <div className=\"bridge-game-container\">\r\n      <header className=\"game-header\">\r\n        <div className=\"game-info-left\">\r\n          <span>Game #{gameState.gameNumber}</span>\r\n        </div>\r\n        <div className=\"game-title\">\r\n          <h1>Bonus Bridge</h1>\r\n        </div>\r\n        <div className=\"game-info-right\">\r\n          <span>Deal #{gameState.dealNumber}</span>\r\n        </div>\r\n        <div className=\"vulnerability-info\">\r\n          {vulnerabilityDescription(gameState.currentDeal.vulnerable)}\r\n        </div>\r\n      </header>\r\n      \r\n      <div className=\"game-board\">\r\n        <div className=\"player-position\">\r\n          Dealer: {determineDealer(gameState.dealNumber)}\r\n        </div>\r\n        \r\n        <div className=\"contract-input-container\">\r\n          <ContractInput \r\n            onContractChange={handleContractChange}\r\n            initialContract={gameState.currentDeal.contract}\r\n          />\r\n        </div>\r\n        \r\n       {gameState.currentDeal.contract && (\r\n          <div className=\"current-contract-display\">\r\n            CONTRACT: {formatContractForDisplay(gameState.currentDeal.contract, gameState.currentDeal.vulnerable)}\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"trick-input-container\">\r\n          <div className=\"tricks-label\">Tricks Taken:</div>\r\n          <TrickInput \r\n            onTrickChange={handleTrickChange}\r\n            initialResult={gameState.currentDeal.result}\r\n            contract={gameState.currentDeal.contract}\r\n          />\r\n        </div>\r\n        \r\n        {gameState.currentDeal.contract && gameState.currentDeal.result !== null && (\r\n          <div className=\"result-display\">\r\n            <div className=\"result-text\">\r\n              {getFullContractDescription(gameState.currentDeal)}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <footer className=\"game-controls\">\r\n        <div className=\"keep-awake-container\">\r\n          <button \r\n            className={`keep-awake-btn ${gameState.isAwake ? 'active' : ''}`}\r\n            onClick={toggleKeepAwake}\r\n          >\r\n            Keep Awake: {gameState.isAwake ? 'ON' : 'OFF'}\r\n          </button>\r\n          \r\n          <button \r\n            className=\"score-btn\"\r\n            onClick={showScorePopup}\r\n          >\r\n            Show Scores\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"game-actions\">\r\n          <button \r\n            className=\"next-deal-btn\"\r\n            onClick={onNextDeal}\r\n            disabled={!gameState.currentDeal.contract || gameState.currentDeal.result === null}\r\n          >\r\n            Continue\r\n          </button>\r\n          \r\n          <button \r\n            className=\"new-game-btn\"\r\n            onClick={onNewGame}\r\n          >\r\n            New Game\r\n          </button>\r\n        </div>\r\n      </footer>\r\n      \r\n      {gameState.showScorePopup && (\r\n        <div className=\"score-popup\">\r\n          <div className=\"score-popup-content\">\r\n            <h2>Current Scores</h2>\r\n            <ScoreTracking \r\n              scores={gameState.scores} \r\n              currentDeal={gameState.currentDeal}\r\n              onChooseBonusBridge={handleChooseBonusBridge}\r\n              onChoosePartyBridge={handleChoosePartyBridge}\r\n            />\r\n            <button className=\"close-btn\" onClick={hideScorePopup}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BridgeGameUI;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}