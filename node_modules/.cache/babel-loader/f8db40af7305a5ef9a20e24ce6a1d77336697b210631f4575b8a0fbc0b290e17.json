{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikec\\\\MikesBridge\\\\bonusbridge\\\\src\\\\components\\\\TrickInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n/**\r\n * TrickInput - Redesigned with larger, more touch-friendly buttons\r\n * @param {Object} props - Component props\r\n * @param {Function} props.onTrickChange - Function to call when trick selection changes\r\n * @param {Number} props.initialResult - Initial result if any\r\n * @param {String} props.contract - Current contract\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrickInput = ({\n  onTrickChange,\n  initialResult = null,\n  contract = ''\n}) => {\n  _s();\n  // State for selected trick button\n  const [selectedTrick, setSelectedTrick] = useState(null);\n  // State for required tricks (based on contract level)\n  const [requiredTricks, setRequiredTricks] = useState(7);\n\n  // Calculate required tricks when contract changes\n  useEffect(() => {\n    if (contract) {\n      const contractMatch = contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\n      if (contractMatch) {\n        const level = parseInt(contractMatch[1]);\n        setRequiredTricks(level + 6);\n      }\n    }\n  }, [contract]);\n\n  // Set selected trick from initialResult if provided\n  useEffect(() => {\n    if (initialResult !== null && requiredTricks) {\n      // Calculate actual tricks from result\n      const actualTricks = requiredTricks + initialResult;\n      setSelectedTrick(actualTricks);\n    }\n  }, [initialResult, requiredTricks]);\n\n  // Handle trick button click\n  const handleTrickClick = numTricks => {\n    setSelectedTrick(numTricks);\n\n    // Calculate result based on tricks and required tricks\n    const result = numTricks - requiredTricks;\n    onTrickChange(result, numTricks);\n  };\n\n  // Generate array of possible trick values (0-13)\n  const trickOptions = Array.from({\n    length: 14\n  }, (_, i) => i);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trick-input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"required-tricks-banner\",\n      children: [\"Required tricks: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"required-value\",\n        children: requiredTricks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tricks-grid\",\n      children: trickOptions.map(numTricks => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `trick-btn ${selectedTrick === numTricks ? 'selected' : ''} ${numTricks === requiredTricks ? 'exact' : numTricks > requiredTricks ? 'made' : 'down'}`,\n        onClick: () => handleTrickClick(numTricks),\n        children: numTricks\n      }, `trick-${numTricks}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(TrickInput, \"/QmD/W+wxqgdg5tWOmifM1V76DQ=\");\n_c = TrickInput;\nexport default TrickInput;\nvar _c;\n$RefreshReg$(_c, \"TrickInput\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TrickInput","onTrickChange","initialResult","contract","_s","selectedTrick","setSelectedTrick","requiredTricks","setRequiredTricks","contractMatch","match","level","parseInt","actualTricks","handleTrickClick","numTricks","result","trickOptions","Array","from","length","_","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mikec/MikesBridge/bonusbridge/src/components/TrickInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n/**\r\n * TrickInput - Redesigned with larger, more touch-friendly buttons\r\n * @param {Object} props - Component props\r\n * @param {Function} props.onTrickChange - Function to call when trick selection changes\r\n * @param {Number} props.initialResult - Initial result if any\r\n * @param {String} props.contract - Current contract\r\n */\r\nconst TrickInput = ({ onTrickChange, initialResult = null, contract = '' }) => {\r\n  // State for selected trick button\r\n  const [selectedTrick, setSelectedTrick] = useState(null);\r\n  // State for required tricks (based on contract level)\r\n  const [requiredTricks, setRequiredTricks] = useState(7);\r\n  \r\n  // Calculate required tricks when contract changes\r\n  useEffect(() => {\r\n    if (contract) {\r\n      const contractMatch = contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\r\n      if (contractMatch) {\r\n        const level = parseInt(contractMatch[1]);\r\n        setRequiredTricks(level + 6);\r\n      }\r\n    }\r\n  }, [contract]);\r\n  \r\n  // Set selected trick from initialResult if provided\r\n  useEffect(() => {\r\n    if (initialResult !== null && requiredTricks) {\r\n      // Calculate actual tricks from result\r\n      const actualTricks = requiredTricks + initialResult;\r\n      setSelectedTrick(actualTricks);\r\n    }\r\n  }, [initialResult, requiredTricks]);\r\n  \r\n  // Handle trick button click\r\n  const handleTrickClick = (numTricks) => {\r\n    setSelectedTrick(numTricks);\r\n    \r\n    // Calculate result based on tricks and required tricks\r\n    const result = numTricks - requiredTricks;\r\n    onTrickChange(result, numTricks);\r\n  };\r\n  \r\n  // Generate array of possible trick values (0-13)\r\n  const trickOptions = Array.from({ length: 14 }, (_, i) => i);\r\n  \r\n  return (\r\n    <div className=\"trick-input-container\">\r\n      <div className=\"required-tricks-banner\">\r\n        Required tricks: <span className=\"required-value\">{requiredTricks}</span>\r\n      </div>\r\n      \r\n      <div className=\"tricks-grid\">\r\n        {trickOptions.map(numTricks => (\r\n          <button\r\n            key={`trick-${numTricks}`}\r\n            className={`trick-btn ${selectedTrick === numTricks ? 'selected' : ''} ${\r\n              numTricks === requiredTricks ? 'exact' : \r\n              numTricks > requiredTricks ? 'made' : 'down'\r\n            }`}\r\n            onClick={() => handleTrickClick(numTricks)}\r\n          >\r\n            {numTricks}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrickInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}