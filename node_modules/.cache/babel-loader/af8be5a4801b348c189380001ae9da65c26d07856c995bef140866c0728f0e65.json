{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikec\\\\MikesBridge\\\\bonusbridge\\\\src\\\\BridgeGameUI.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ScoreTracking from './components/ScoreTracking';\nimport ContractInput from './components/ContractInput';\nimport TrickInput from './components/TrickInput';\nimport { requestWakeLock, releaseWakeLock, isWakeLockSupported } from './utils/wakeLock';\nimport { vulnerabilityDescription, parseContract, determineDealer } from './utils/scoring';\nimport './global.css';\nimport './styles/BridgeGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BridgeGameUI = ({\n  gameState,\n  updateCurrentDeal,\n  onNextDeal,\n  onNewGame,\n  setGameState,\n  onChooseBonusBridge,\n  onChoosePartyBridge\n}) => {\n  _s();\n  // State for quit confirmation\n  const [showQuitConfirm, setShowQuitConfirm] = useState(false);\n\n  // Function to keep the device awake\n  const toggleKeepAwake = async () => {\n    const newAwakeState = !gameState.isAwake;\n\n    // Update state first for immediate UI feedback\n    setGameState(prev => ({\n      ...prev,\n      isAwake: newAwakeState\n    }));\n    if (newAwakeState) {\n      // Turn on wake lock\n      if (isWakeLockSupported()) {\n        const success = await requestWakeLock();\n        if (!success) {\n          // Wake lock request failed, revert state\n          setGameState(prev => ({\n            ...prev,\n            isAwake: false\n          }));\n        }\n      } else {\n        console.log('Wake Lock API not supported in this browser');\n      }\n    } else {\n      // Turn off wake lock\n      await releaseWakeLock();\n    }\n  };\n\n  // Show score popup\n  const showScorePopup = () => {\n    console.log('Showing score popup with current deal:', gameState.currentDeal);\n    console.log('Current scores:', gameState.scores);\n    setGameState(prev => ({\n      ...prev,\n      showScorePopup: true\n    }));\n  };\n\n  // Hide score popup\n  const hideScorePopup = () => {\n    console.log(\"Hiding score popup\");\n    setGameState(prev => ({\n      ...prev,\n      showScorePopup: false\n    }));\n  };\n\n  // Show quit confirmation\n  const showQuitConfirmation = () => {\n    setShowQuitConfirm(true);\n  };\n\n  // Hide quit confirmation\n  const hideQuitConfirmation = () => {\n    setShowQuitConfirm(false);\n  };\n\n  // Handle quitting the app\n  const handleQuit = () => {\n    // This would actually close the app in a native environment\n    // For web, we'll just show an alert\n    alert('App would close here in the final version');\n    // You would add your native app closing code here\n  };\n\n  // Handle contract input changes\n  const handleContractChange = contract => {\n    updateCurrentDeal({\n      contract\n    });\n  };\n\n  // Handle trick input changes\n  const handleTrickChange = (result, tricks) => {\n    updateCurrentDeal({\n      result,\n      tricks\n    });\n  };\n\n  // Format contract for display\n  const formatContractForDisplay = (contract, vulnerable) => {\n    if (!contract) return \"\";\n    console.log(\"Formatting contract:\", contract); // Debug log\n\n    const contractMatch = contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\n    if (!contractMatch) {\n      console.log(\"Contract match failed\"); // Debug log\n      return contract;\n    }\n    const level = contractMatch[1];\n    const suit = contractMatch[2];\n    const declarer = contractMatch[3];\n    const doubled = contractMatch[4];\n    console.log(\"Parsed contract parts:\", level, suit, declarer, doubled); // Debug log\n\n    // Get full declarer name\n    let declarerName = \"\";\n    switch (declarer) {\n      case 'N':\n        declarerName = \"North\";\n        break;\n      case 'E':\n        declarerName = \"East\";\n        break;\n      case 'S':\n        declarerName = \"South\";\n        break;\n      case 'W':\n        declarerName = \"West\";\n        break;\n      default:\n        declarerName = declarer;\n    }\n\n    // Format doubled status\n    let doubledText = \"\";\n    if (doubled === \"X\") {\n      doubledText = \" Doubled\";\n    } else if (doubled === \"XX\") {\n      doubledText = \" Redoubled\";\n    }\n\n    // Get vulnerability text\n    const isNS = declarer === 'N' || declarer === 'S';\n    const declarerVulnerable = isNS ? (vulnerable === null || vulnerable === void 0 ? void 0 : vulnerable.ns) || false : (vulnerable === null || vulnerable === void 0 ? void 0 : vulnerable.ew) || false;\n    const vulText = declarerVulnerable ? \"vul\" : \"not vul\";\n    const formattedContract = `${level}${suit} by ${declarerName}${doubledText} ${vulText}`;\n    console.log(\"Formatted contract:\", formattedContract); // Debug log\n\n    return formattedContract;\n  };\n\n  // Get a full description of the contract and result\n  const getFullContractDescription = currentDeal => {\n    var _currentDeal$vulnerab, _currentDeal$vulnerab2;\n    if (!currentDeal || !currentDeal.contract) return \"\";\n    const contractMatch = currentDeal.contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\n    if (!contractMatch) return \"\";\n    const level = contractMatch[1];\n    const suit = contractMatch[2];\n    const declarer = contractMatch[3];\n    const doubled = contractMatch[4];\n\n    // Determine declarer's full name\n    let declarerName = \"\";\n    switch (declarer) {\n      case 'N':\n        declarerName = \"North\";\n        break;\n      case 'E':\n        declarerName = \"East\";\n        break;\n      case 'S':\n        declarerName = \"South\";\n        break;\n      case 'W':\n        declarerName = \"West\";\n        break;\n      default:\n        declarerName = declarer;\n    }\n\n    // Format doubled status\n    let doubledText = \"\";\n    if (doubled === \"X\") {\n      doubledText = \" Doubled\";\n    } else if (doubled === \"XX\") {\n      doubledText = \" Redoubled\";\n    }\n\n    // Calculate required tricks\n    const requiredTricks = parseInt(level) + 6;\n\n    // Calculate actual tricks\n    let actualTricks = requiredTricks + (currentDeal.result || 0);\n\n    // Determine if the contract was made or went down\n    const madeContract = currentDeal.result >= 0;\n\n    // Get vulnerability text\n    const isNS = declarer === 'N' || declarer === 'S';\n    const declarerVulnerable = isNS ? ((_currentDeal$vulnerab = currentDeal.vulnerable) === null || _currentDeal$vulnerab === void 0 ? void 0 : _currentDeal$vulnerab.ns) || false : ((_currentDeal$vulnerab2 = currentDeal.vulnerable) === null || _currentDeal$vulnerab2 === void 0 ? void 0 : _currentDeal$vulnerab2.ew) || false;\n    const vulText = declarerVulnerable ? \"vul\" : \"not vul\";\n\n    // Determine which side scores\n    const scoringSide = isNS ? 'NS' : 'EW';\n\n    // Calculate standard bridge score\n    const contractDetails = parseContract(currentDeal.contract, currentDeal.result, currentDeal.vulnerable);\n    const score = currentDeal.rawScore || 0;\n\n    // Determine which side gets the score\n    let scoreValue = 0;\n    let scoringSideDisplay = '';\n    if (madeContract) {\n      // If contract was made, declarer's side gets the score\n      scoreValue = isNS ? currentDeal.nsPoints : currentDeal.ewPoints;\n      scoringSideDisplay = scoringSide;\n    } else {\n      // If contract was defeated, defenders get the score\n      scoreValue = isNS ? currentDeal.ewPoints : currentDeal.nsPoints;\n      scoringSideDisplay = isNS ? 'EW' : 'NS';\n    }\n\n    // Result description\n    const resultDesc = madeContract ? currentDeal.result > 0 ? `making ${actualTricks} tricks (+${currentDeal.result})` : `making ${actualTricks} tricks (just made)` : `making ${actualTricks} tricks (down ${Math.abs(currentDeal.result)})`;\n\n    // Create the full description\n    const description = `${level}${suit} by ${declarerName}${doubledText} ${vulText} ${resultDesc} scoring ${scoreValue} for ${scoringSideDisplay}`;\n    return description;\n  };\n\n  // Reset the game state when component mounts or when a new game starts\n  useEffect(() => {\n    if (gameState.dealNumber === 1) {\n      // Clear any previously selected inputs\n      updateCurrentDeal({\n        contract: '',\n        declarer: '',\n        result: null,\n        tricks: null\n      });\n    }\n    // Important: Add gameState.dealNumber to dependencies but NOT updateCurrentDeal\n    // This prevents the infinite loop\n  }, [gameState.dealNumber, gameState.gameNumber]); // Remove updateCurrentDeal from dependencies\n\n  // NEW EFFECT: Ensure score popup is closed when deal changes or contract is reset\n  useEffect(() => {\n    // This ensures the showScorePopup state is properly reset when the deal changes\n    if (gameState.showScorePopup && gameState.currentDeal.contract === '') {\n      // If we're showing a score popup but have no contract, we probably just moved to a new deal\n      console.log('Automatically closing score popup on new deal');\n      setGameState(prev => ({\n        ...prev,\n        showScorePopup: false\n      }));\n    }\n  }, [gameState.dealNumber, gameState.currentDeal.contract, setGameState]);\n\n  // Styles for quit confirmation\n  const quitConfirmStyles = {\n    overlay: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'rgba(0, 0, 0, 0.7)',\n      zIndex: 1000,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    container: {\n      backgroundColor: '#fff',\n      borderRadius: '8px',\n      padding: '20px',\n      width: '80%',\n      maxWidth: '350px',\n      boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)'\n    },\n    title: {\n      fontSize: '18px',\n      fontWeight: 'bold',\n      marginBottom: '15px',\n      textAlign: 'center',\n      color: '#1e5c8b'\n    },\n    message: {\n      marginBottom: '20px',\n      lineHeight: '1.5',\n      textAlign: 'center'\n    },\n    buttonContainer: {\n      display: 'flex',\n      justifyContent: 'space-around'\n    },\n    button: {\n      padding: '10px 20px',\n      borderRadius: '5px',\n      border: 'none',\n      color: '#fff',\n      fontWeight: 'bold',\n      cursor: 'pointer'\n    },\n    cancelButton: {\n      backgroundColor: '#1e5c8b'\n    },\n    confirmButton: {\n      backgroundColor: '#e74c3c'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bridge-game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"game-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-header-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-info-left\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Game #\", gameState.gameNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-title\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Bonus Bridge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-info-right\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Deal #\", gameState.dealNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vulnerability-info\",\n        children: [\"Dealer: \", determineDealer(gameState.dealNumber), \" - \", vulnerabilityDescription(gameState.currentDeal.vulnerable)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: [/*#__PURE__*/_jsxDEV(ContractInput, {\n        onContractChange: handleContractChange,\n        initialContract: gameState.currentDeal.contract\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), gameState.currentDeal.contract && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-contract-display\",\n        children: [\"CONTRACT: \", formatContractForDisplay(gameState.currentDeal.contract, gameState.currentDeal.vulnerable)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trick-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tricks-label\",\n          children: \"Tricks Taken:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TrickInput, {\n          onTrickChange: handleTrickChange,\n          initialResult: gameState.currentDeal.result,\n          contract: gameState.currentDeal.contract\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), gameState.currentDeal.contract && gameState.currentDeal.result !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-display\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-text\",\n          children: getFullContractDescription(gameState.currentDeal)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"game-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keep-awake-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `keep-awake-btn ${gameState.isAwake ? 'active' : ''}`,\n          onClick: toggleKeepAwake,\n          children: [\"Keep Awake: \", gameState.isAwake ? 'ON' : 'OFF']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"score-btn\",\n          onClick: showScorePopup,\n          children: \"Show Scores\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"quit-btn\",\n          onClick: showQuitConfirmation,\n          children: \"Quit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-game-btn\",\n          onClick: onNewGame,\n          children: \"New Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this), gameState.showScorePopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Current Scores\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ScoreTracking, {\n          scores: {\n            nsPoints: gameState.currentDeal.nsPoints || 0,\n            ewPoints: gameState.currentDeal.ewPoints || 0,\n            nsTotal: gameState.scores.nsTotal || 0,\n            ewTotal: gameState.scores.ewTotal || 0,\n            currentDealNumber: gameState.dealNumber // Add this to track current deal number\n          },\n          currentDeal: gameState.currentDeal,\n          onChooseBonusBridge: onChooseBonusBridge,\n          onChoosePartyBridge: onChoosePartyBridge\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: hideScorePopup,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 9\n    }, this), showQuitConfirm && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: quitConfirmStyles.overlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: quitConfirmStyles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: quitConfirmStyles.title,\n          children: \"Confirm Quit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: quitConfirmStyles.message,\n          children: \"Are you sure you want to quit? This will close the app and all unsaved data will be lost.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: quitConfirmStyles.buttonContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              ...quitConfirmStyles.button,\n              ...quitConfirmStyles.cancelButton\n            },\n            onClick: hideQuitConfirmation,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              ...quitConfirmStyles.button,\n              ...quitConfirmStyles.confirmButton\n            },\n            onClick: handleQuit,\n            children: \"Quit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 323,\n    columnNumber: 5\n  }, this);\n};\n_s(BridgeGameUI, \"eDhqpXvpgJUG52+I6gfA5qIH3rQ=\");\n_c = BridgeGameUI;\nexport default BridgeGameUI;\nvar _c;\n$RefreshReg$(_c, \"BridgeGameUI\");","map":{"version":3,"names":["React","useState","useEffect","ScoreTracking","ContractInput","TrickInput","requestWakeLock","releaseWakeLock","isWakeLockSupported","vulnerabilityDescription","parseContract","determineDealer","jsxDEV","_jsxDEV","BridgeGameUI","gameState","updateCurrentDeal","onNextDeal","onNewGame","setGameState","onChooseBonusBridge","onChoosePartyBridge","_s","showQuitConfirm","setShowQuitConfirm","toggleKeepAwake","newAwakeState","isAwake","prev","success","console","log","showScorePopup","currentDeal","scores","hideScorePopup","showQuitConfirmation","hideQuitConfirmation","handleQuit","alert","handleContractChange","contract","handleTrickChange","result","tricks","formatContractForDisplay","vulnerable","contractMatch","match","level","suit","declarer","doubled","declarerName","doubledText","isNS","declarerVulnerable","ns","ew","vulText","formattedContract","getFullContractDescription","_currentDeal$vulnerab","_currentDeal$vulnerab2","requiredTricks","parseInt","actualTricks","madeContract","scoringSide","contractDetails","score","rawScore","scoreValue","scoringSideDisplay","nsPoints","ewPoints","resultDesc","Math","abs","description","dealNumber","gameNumber","quitConfirmStyles","overlay","position","top","left","right","bottom","backgroundColor","zIndex","display","justifyContent","alignItems","container","borderRadius","padding","width","maxWidth","boxShadow","title","fontSize","fontWeight","marginBottom","textAlign","color","message","lineHeight","buttonContainer","button","border","cursor","cancelButton","confirmButton","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onContractChange","initialContract","onTrickChange","initialResult","onClick","nsTotal","ewTotal","currentDealNumber","style","_c","$RefreshReg$"],"sources":["C:/Users/mikec/MikesBridge/bonusbridge/src/BridgeGameUI.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ScoreTracking from './components/ScoreTracking';\r\nimport ContractInput from './components/ContractInput';\r\nimport TrickInput from './components/TrickInput';\r\nimport { \r\n  requestWakeLock, \r\n  releaseWakeLock, \r\n  isWakeLockSupported \r\n} from './utils/wakeLock';\r\nimport { \r\n  vulnerabilityDescription, \r\n  parseContract,\r\n  determineDealer\r\n} from './utils/scoring';\r\nimport './global.css';\r\nimport './styles/BridgeGame.css';\r\n\r\nconst BridgeGameUI = ({ \r\n  gameState, \r\n  updateCurrentDeal, \r\n  onNextDeal, \r\n  onNewGame, \r\n  setGameState,\r\n  onChooseBonusBridge,\r\n  onChoosePartyBridge\r\n}) => {\r\n  // State for quit confirmation\r\n  const [showQuitConfirm, setShowQuitConfirm] = useState(false);\r\n  \r\n  // Function to keep the device awake\r\n  const toggleKeepAwake = async () => {\r\n    const newAwakeState = !gameState.isAwake;\r\n    \r\n    // Update state first for immediate UI feedback\r\n    setGameState(prev => ({\r\n      ...prev,\r\n      isAwake: newAwakeState\r\n    }));\r\n    \r\n    if (newAwakeState) {\r\n      // Turn on wake lock\r\n      if (isWakeLockSupported()) {\r\n        const success = await requestWakeLock();\r\n        if (!success) {\r\n          // Wake lock request failed, revert state\r\n          setGameState(prev => ({\r\n            ...prev,\r\n            isAwake: false\r\n          }));\r\n        }\r\n      } else {\r\n        console.log('Wake Lock API not supported in this browser');\r\n      }\r\n    } else {\r\n      // Turn off wake lock\r\n      await releaseWakeLock();\r\n    }\r\n  };\r\n\r\n  // Show score popup\r\n  const showScorePopup = () => {\r\n    console.log('Showing score popup with current deal:', gameState.currentDeal);\r\n    console.log('Current scores:', gameState.scores);\r\n    \r\n    setGameState(prev => ({\r\n      ...prev,\r\n      showScorePopup: true\r\n    }));\r\n  };\r\n\r\n  // Hide score popup\r\n  const hideScorePopup = () => {\r\n    console.log(\"Hiding score popup\");\r\n    setGameState(prev => ({\r\n      ...prev,\r\n      showScorePopup: false\r\n    }));\r\n  };\r\n\r\n  // Show quit confirmation\r\n  const showQuitConfirmation = () => {\r\n    setShowQuitConfirm(true);\r\n  };\r\n\r\n  // Hide quit confirmation\r\n  const hideQuitConfirmation = () => {\r\n    setShowQuitConfirm(false);\r\n  };\r\n\r\n  // Handle quitting the app\r\n  const handleQuit = () => {\r\n    // This would actually close the app in a native environment\r\n    // For web, we'll just show an alert\r\n    alert('App would close here in the final version');\r\n    // You would add your native app closing code here\r\n  };\r\n\r\n  // Handle contract input changes\r\n  const handleContractChange = (contract) => {\r\n    updateCurrentDeal({ contract });\r\n  };\r\n\r\n  // Handle trick input changes\r\n  const handleTrickChange = (result, tricks) => {\r\n    updateCurrentDeal({ result, tricks });\r\n  };\r\n  \r\n  // Format contract for display\r\n  const formatContractForDisplay = (contract, vulnerable) => {\r\n    if (!contract) return \"\";\r\n    \r\n    console.log(\"Formatting contract:\", contract); // Debug log\r\n    \r\n    const contractMatch = contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\r\n    if (!contractMatch) {\r\n      console.log(\"Contract match failed\"); // Debug log\r\n      return contract;\r\n    }\r\n    \r\n    const level = contractMatch[1];\r\n    const suit = contractMatch[2];\r\n    const declarer = contractMatch[3];\r\n    const doubled = contractMatch[4];\r\n    \r\n    console.log(\"Parsed contract parts:\", level, suit, declarer, doubled); // Debug log\r\n    \r\n    // Get full declarer name\r\n    let declarerName = \"\";\r\n    switch (declarer) {\r\n      case 'N': declarerName = \"North\"; break;\r\n      case 'E': declarerName = \"East\"; break;\r\n      case 'S': declarerName = \"South\"; break;\r\n      case 'W': declarerName = \"West\"; break;\r\n      default: declarerName = declarer;\r\n    }\r\n    \r\n    // Format doubled status\r\n    let doubledText = \"\";\r\n    if (doubled === \"X\") {\r\n      doubledText = \" Doubled\";\r\n    } else if (doubled === \"XX\") {\r\n      doubledText = \" Redoubled\";\r\n    }\r\n    \r\n    // Get vulnerability text\r\n    const isNS = declarer === 'N' || declarer === 'S';\r\n    const declarerVulnerable = isNS ? \r\n      (vulnerable?.ns || false) : \r\n      (vulnerable?.ew || false);\r\n    \r\n    const vulText = declarerVulnerable ? \"vul\" : \"not vul\";\r\n    \r\n    const formattedContract = `${level}${suit} by ${declarerName}${doubledText} ${vulText}`;\r\n    console.log(\"Formatted contract:\", formattedContract); // Debug log\r\n    \r\n    return formattedContract;\r\n  };\r\n  \r\n  // Get a full description of the contract and result\r\n  const getFullContractDescription = (currentDeal) => {\r\n    if (!currentDeal || !currentDeal.contract) return \"\";\r\n    \r\n    const contractMatch = currentDeal.contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\r\n    if (!contractMatch) return \"\";\r\n    \r\n    const level = contractMatch[1];\r\n    const suit = contractMatch[2];\r\n    const declarer = contractMatch[3];\r\n    const doubled = contractMatch[4];\r\n    \r\n    // Determine declarer's full name\r\n    let declarerName = \"\";\r\n    switch (declarer) {\r\n      case 'N': declarerName = \"North\"; break;\r\n      case 'E': declarerName = \"East\"; break;\r\n      case 'S': declarerName = \"South\"; break;\r\n      case 'W': declarerName = \"West\"; break;\r\n      default: declarerName = declarer;\r\n    }\r\n    \r\n    // Format doubled status\r\n    let doubledText = \"\";\r\n    if (doubled === \"X\") {\r\n      doubledText = \" Doubled\";\r\n    } else if (doubled === \"XX\") {\r\n      doubledText = \" Redoubled\";\r\n    }\r\n    \r\n    // Calculate required tricks\r\n    const requiredTricks = parseInt(level) + 6;\r\n    \r\n    // Calculate actual tricks\r\n    let actualTricks = requiredTricks + (currentDeal.result || 0);\r\n    \r\n    // Determine if the contract was made or went down\r\n    const madeContract = currentDeal.result >= 0;\r\n    \r\n    // Get vulnerability text\r\n    const isNS = declarer === 'N' || declarer === 'S';\r\n    const declarerVulnerable = isNS ? \r\n      (currentDeal.vulnerable?.ns || false) : \r\n      (currentDeal.vulnerable?.ew || false);\r\n    \r\n    const vulText = declarerVulnerable ? \"vul\" : \"not vul\";\r\n    \r\n    // Determine which side scores\r\n    const scoringSide = isNS ? 'NS' : 'EW';\r\n    \r\n    // Calculate standard bridge score\r\n    const contractDetails = parseContract(currentDeal.contract, currentDeal.result, currentDeal.vulnerable);\r\n    const score = currentDeal.rawScore || 0;\r\n    \r\n    // Determine which side gets the score\r\n    let scoreValue = 0;\r\n    let scoringSideDisplay = '';\r\n    \r\n    if (madeContract) {\r\n      // If contract was made, declarer's side gets the score\r\n      scoreValue = isNS ? currentDeal.nsPoints : currentDeal.ewPoints;\r\n      scoringSideDisplay = scoringSide;\r\n    } else {\r\n      // If contract was defeated, defenders get the score\r\n      scoreValue = isNS ? currentDeal.ewPoints : currentDeal.nsPoints;\r\n      scoringSideDisplay = isNS ? 'EW' : 'NS';\r\n    }\r\n    \r\n    // Result description\r\n    const resultDesc = madeContract ? \r\n      (currentDeal.result > 0 ? \r\n        `making ${actualTricks} tricks (+${currentDeal.result})` : \r\n        `making ${actualTricks} tricks (just made)`) : \r\n      `making ${actualTricks} tricks (down ${Math.abs(currentDeal.result)})`;\r\n    \r\n    // Create the full description\r\n    const description = `${level}${suit} by ${declarerName}${doubledText} ${vulText} ${resultDesc} scoring ${scoreValue} for ${scoringSideDisplay}`;\r\n    \r\n    return description;\r\n  };\r\n\r\n  // Reset the game state when component mounts or when a new game starts\r\n  useEffect(() => {\r\n    if (gameState.dealNumber === 1) {\r\n      // Clear any previously selected inputs\r\n      updateCurrentDeal({\r\n        contract: '',\r\n        declarer: '',\r\n        result: null,\r\n        tricks: null\r\n      });\r\n    }\r\n  // Important: Add gameState.dealNumber to dependencies but NOT updateCurrentDeal\r\n  // This prevents the infinite loop\r\n  }, [gameState.dealNumber, gameState.gameNumber]); // Remove updateCurrentDeal from dependencies\r\n\r\n  // NEW EFFECT: Ensure score popup is closed when deal changes or contract is reset\r\n  useEffect(() => {\r\n    // This ensures the showScorePopup state is properly reset when the deal changes\r\n    if (gameState.showScorePopup && gameState.currentDeal.contract === '') {\r\n      // If we're showing a score popup but have no contract, we probably just moved to a new deal\r\n      console.log('Automatically closing score popup on new deal');\r\n      setGameState(prev => ({\r\n        ...prev,\r\n        showScorePopup: false\r\n      }));\r\n    }\r\n  }, [gameState.dealNumber, gameState.currentDeal.contract, setGameState]);\r\n\r\n  // Styles for quit confirmation\r\n  const quitConfirmStyles = {\r\n    overlay: {\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n      zIndex: 1000,\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    },\r\n    container: {\r\n      backgroundColor: '#fff',\r\n      borderRadius: '8px',\r\n      padding: '20px',\r\n      width: '80%',\r\n      maxWidth: '350px',\r\n      boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)'\r\n    },\r\n    title: {\r\n      fontSize: '18px',\r\n      fontWeight: 'bold',\r\n      marginBottom: '15px',\r\n      textAlign: 'center',\r\n      color: '#1e5c8b'\r\n    },\r\n    message: {\r\n      marginBottom: '20px',\r\n      lineHeight: '1.5',\r\n      textAlign: 'center'\r\n    },\r\n    buttonContainer: {\r\n      display: 'flex',\r\n      justifyContent: 'space-around'\r\n    },\r\n    button: {\r\n      padding: '10px 20px',\r\n      borderRadius: '5px',\r\n      border: 'none',\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n      cursor: 'pointer'\r\n    },\r\n    cancelButton: {\r\n      backgroundColor: '#1e5c8b'\r\n    },\r\n    confirmButton: {\r\n      backgroundColor: '#e74c3c'\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bridge-game-container\">\r\n      <header className=\"game-header\">\r\n        {/* Fix for overprint issue - restructuring the header */}\r\n        <div className=\"game-header-top\">\r\n          <div className=\"game-info-left\">\r\n            <span>Game #{gameState.gameNumber}</span>\r\n          </div>\r\n          <div className=\"game-title\">\r\n            <h1>Bonus Bridge</h1>\r\n          </div>\r\n          <div className=\"game-info-right\">\r\n            <span>Deal #{gameState.dealNumber}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"vulnerability-info\">\r\n          Dealer: {determineDealer(gameState.dealNumber)} - {vulnerabilityDescription(gameState.currentDeal.vulnerable)}\r\n        </div>\r\n      </header>\r\n      \r\n      <div className=\"game-board\">\r\n        <ContractInput \r\n          onContractChange={handleContractChange}\r\n          initialContract={gameState.currentDeal.contract}\r\n        />\r\n        \r\n       {gameState.currentDeal.contract && (\r\n          <div className=\"current-contract-display\">\r\n            CONTRACT: {formatContractForDisplay(gameState.currentDeal.contract, gameState.currentDeal.vulnerable)}\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"trick-input-container\">\r\n          <div className=\"tricks-label\">Tricks Taken:</div>\r\n          <TrickInput \r\n            onTrickChange={handleTrickChange}\r\n            initialResult={gameState.currentDeal.result}\r\n            contract={gameState.currentDeal.contract}\r\n          />\r\n        </div>\r\n        \r\n        {gameState.currentDeal.contract && gameState.currentDeal.result !== null && (\r\n          <div className=\"result-display\">\r\n            <div className=\"result-text\">\r\n              {getFullContractDescription(gameState.currentDeal)}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <footer className=\"game-controls\">\r\n        <div className=\"keep-awake-container\">\r\n          <button \r\n            className={`keep-awake-btn ${gameState.isAwake ? 'active' : ''}`}\r\n            onClick={toggleKeepAwake}\r\n          >\r\n            Keep Awake: {gameState.isAwake ? 'ON' : 'OFF'}\r\n          </button>\r\n          \r\n          <button \r\n            className=\"score-btn\"\r\n            onClick={showScorePopup}\r\n          >\r\n            Show Scores\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"game-actions\">\r\n          <button \r\n            className=\"quit-btn\"\r\n            onClick={showQuitConfirmation}\r\n          >\r\n            Quit\r\n          </button>\r\n          \r\n          <button \r\n            className=\"new-game-btn\"\r\n            onClick={onNewGame}\r\n          >\r\n            New Game\r\n          </button>\r\n        </div>\r\n      </footer>\r\n      \r\n      {gameState.showScorePopup && (\r\n        <div className=\"score-popup\">\r\n          <div className=\"score-popup-content\">\r\n            <h2>Current Scores</h2>\r\n            <ScoreTracking \r\n              scores={{\r\n                nsPoints: gameState.currentDeal.nsPoints || 0,\r\n                ewPoints: gameState.currentDeal.ewPoints || 0,\r\n                nsTotal: gameState.scores.nsTotal || 0,\r\n                ewTotal: gameState.scores.ewTotal || 0,\r\n                currentDealNumber: gameState.dealNumber // Add this to track current deal number\r\n              }}\r\n              currentDeal={gameState.currentDeal}\r\n              onChooseBonusBridge={onChooseBonusBridge}\r\n              onChoosePartyBridge={onChoosePartyBridge}\r\n            />\r\n            <button className=\"close-btn\" onClick={hideScorePopup}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Quit Confirmation Popup */}\r\n      {showQuitConfirm && (\r\n        <div style={quitConfirmStyles.overlay}>\r\n          <div style={quitConfirmStyles.container}>\r\n            <h2 style={quitConfirmStyles.title}>Confirm Quit</h2>\r\n            <p style={quitConfirmStyles.message}>\r\n              Are you sure you want to quit? This will close the app and all unsaved data will be lost.\r\n            </p>\r\n            <div style={quitConfirmStyles.buttonContainer}>\r\n              <button \r\n                style={{...quitConfirmStyles.button, ...quitConfirmStyles.cancelButton}}\r\n                onClick={hideQuitConfirmation}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button \r\n                style={{...quitConfirmStyles.button, ...quitConfirmStyles.confirmButton}}\r\n                onClick={handleQuit}\r\n              >\r\n                Quit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BridgeGameUI;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}