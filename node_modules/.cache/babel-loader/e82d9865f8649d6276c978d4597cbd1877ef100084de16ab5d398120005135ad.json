{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikec\\\\MikesBridge\\\\bonusbridge\\\\src\\\\components\\\\TrickInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './TrickInput.css';\n\n/**\r\n * TrickInput Component for Bridge Game\r\n * Allows selecting the number of tricks taken by declarer\r\n * Updated for larger buttons and better touch interaction\r\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TrickInput = ({\n  onTrickChange,\n  initialResult,\n  contract\n}) => {\n  _s();\n  // State for selected tricks\n  const [selectedTricks, setSelectedTricks] = useState(null);\n\n  // Calculate required tricks based on contract\n  const getRequiredTricks = () => {\n    if (!contract) return 0;\n    const contractMatch = contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\n    if (!contractMatch) return 0;\n    const level = parseInt(contractMatch[1]);\n    return level + 6; // Required tricks = level + 6\n  };\n\n  // Reset trick selection when contract changes\n  useEffect(() => {\n    setSelectedTricks(null);\n  }, [contract]);\n\n  // Set initial value if provided\n  useEffect(() => {\n    if (initialResult !== null && contract) {\n      const requiredTricks = getRequiredTricks();\n      const actualTricks = requiredTricks + initialResult;\n      setSelectedTricks(actualTricks);\n    }\n  }, [initialResult, contract]);\n\n  // Handle trick selection\n  const handleTrickSelect = tricks => {\n    setSelectedTricks(tricks);\n\n    // Calculate result based on required tricks\n    const requiredTricks = getRequiredTricks();\n    const result = tricks - requiredTricks;\n\n    // Notify parent component\n    onTrickChange(result, tricks);\n  };\n\n  // Generate trick buttons (0-13) with custom inline styles for larger touch targets\n  const renderTrickButtons = () => {\n    const requiredTricks = getRequiredTricks();\n    const buttons = [];\n\n    // Custom styles for larger buttons\n    const buttonStyle = {\n      height: '50px',\n      fontSize: '18px',\n      fontWeight: 'bold',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      border: '1px solid #ddd',\n      borderRadius: '6px',\n      backgroundColor: '#f8f8f8',\n      cursor: 'pointer',\n      margin: '4px',\n      width: '100%'\n    };\n    const selectedStyle = {\n      ...buttonStyle,\n      backgroundColor: '#2e8bc0',\n      color: 'white',\n      border: '1px solid #1e5c8b',\n      boxShadow: '0 0 0 2px rgba(46, 139, 192, 0.4)'\n    };\n    const belowRequiredStyle = {\n      ...buttonStyle,\n      backgroundColor: '#ffe0e0',\n      border: '1px solid #ffb0b0'\n    };\n    const disabledStyle = {\n      ...buttonStyle,\n      opacity: 0.6,\n      cursor: 'not-allowed'\n    };\n\n    // Group buttons in rows of 3 for better touch targets\n    for (let i = 0; i <= 13; i++) {\n      // Determine button style based on relationship to required tricks\n      let currentStyle = buttonStyle;\n      if (selectedTricks === i) {\n        currentStyle = selectedStyle;\n      } else if (i < requiredTricks) {\n        currentStyle = belowRequiredStyle;\n      }\n      if (!contract) {\n        currentStyle = disabledStyle;\n      }\n      buttons.push(/*#__PURE__*/_jsxDEV(\"button\", {\n        style: currentStyle,\n        onClick: () => handleTrickSelect(i),\n        disabled: !contract,\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this));\n    }\n    return buttons;\n  };\n  const requiredTricks = getRequiredTricks();\n\n  // Custom container style for 3-column grid\n  const gridStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 1fr)',\n    gap: '4px',\n    padding: '5px',\n    marginBottom: '20px'\n  };\n\n  // Custom style for required tricks label\n  const requiredTricksStyle = {\n    display: 'inline-block',\n    fontSize: '14px',\n    color: '#1e5c8b',\n    marginBottom: '10px',\n    fontWeight: 'bold',\n    backgroundColor: '#f2f8ff',\n    padding: '6px 10px',\n    borderRadius: '4px',\n    border: '1px solid #d0e1f9'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trick-input\",\n    children: contract ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: requiredTricksStyle,\n        children: [\"Required tricks: \", requiredTricks]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: gridStyle,\n        children: renderTrickButtons()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"please-select\",\n      children: [\"Please select\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 24\n      }, this), \"a contract\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 40\n      }, this), \"first\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(TrickInput, \"VNL+SogF4VMa80Azjgb5rnO6UTU=\");\n_c = TrickInput;\nexport default TrickInput;\nvar _c;\n$RefreshReg$(_c, \"TrickInput\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","TrickInput","onTrickChange","initialResult","contract","_s","selectedTricks","setSelectedTricks","getRequiredTricks","contractMatch","match","level","parseInt","requiredTricks","actualTricks","handleTrickSelect","tricks","result","renderTrickButtons","buttons","buttonStyle","height","fontSize","fontWeight","display","justifyContent","alignItems","border","borderRadius","backgroundColor","cursor","margin","width","selectedStyle","color","boxShadow","belowRequiredStyle","disabledStyle","opacity","i","currentStyle","push","style","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","gridStyle","gridTemplateColumns","gap","padding","marginBottom","requiredTricksStyle","className","_c","$RefreshReg$"],"sources":["C:/Users/mikec/MikesBridge/bonusbridge/src/components/TrickInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './TrickInput.css';\r\n\r\n/**\r\n * TrickInput Component for Bridge Game\r\n * Allows selecting the number of tricks taken by declarer\r\n * Updated for larger buttons and better touch interaction\r\n */\r\nconst TrickInput = ({ onTrickChange, initialResult, contract }) => {\r\n  // State for selected tricks\r\n  const [selectedTricks, setSelectedTricks] = useState(null);\r\n  \r\n  // Calculate required tricks based on contract\r\n  const getRequiredTricks = () => {\r\n    if (!contract) return 0;\r\n    \r\n    const contractMatch = contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\r\n    if (!contractMatch) return 0;\r\n    \r\n    const level = parseInt(contractMatch[1]);\r\n    return level + 6; // Required tricks = level + 6\r\n  };\r\n  \r\n  // Reset trick selection when contract changes\r\n  useEffect(() => {\r\n    setSelectedTricks(null);\r\n  }, [contract]);\r\n  \r\n  // Set initial value if provided\r\n  useEffect(() => {\r\n    if (initialResult !== null && contract) {\r\n      const requiredTricks = getRequiredTricks();\r\n      const actualTricks = requiredTricks + initialResult;\r\n      setSelectedTricks(actualTricks);\r\n    }\r\n  }, [initialResult, contract]);\r\n  \r\n  // Handle trick selection\r\n  const handleTrickSelect = (tricks) => {\r\n    setSelectedTricks(tricks);\r\n    \r\n    // Calculate result based on required tricks\r\n    const requiredTricks = getRequiredTricks();\r\n    const result = tricks - requiredTricks;\r\n    \r\n    // Notify parent component\r\n    onTrickChange(result, tricks);\r\n  };\r\n  \r\n  // Generate trick buttons (0-13) with custom inline styles for larger touch targets\r\n  const renderTrickButtons = () => {\r\n    const requiredTricks = getRequiredTricks();\r\n    const buttons = [];\r\n    \r\n    // Custom styles for larger buttons\r\n    const buttonStyle = {\r\n      height: '50px',\r\n      fontSize: '18px',\r\n      fontWeight: 'bold',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      border: '1px solid #ddd',\r\n      borderRadius: '6px',\r\n      backgroundColor: '#f8f8f8',\r\n      cursor: 'pointer',\r\n      margin: '4px',\r\n      width: '100%'\r\n    };\r\n    \r\n    const selectedStyle = {\r\n      ...buttonStyle,\r\n      backgroundColor: '#2e8bc0',\r\n      color: 'white',\r\n      border: '1px solid #1e5c8b',\r\n      boxShadow: '0 0 0 2px rgba(46, 139, 192, 0.4)'\r\n    };\r\n    \r\n    const belowRequiredStyle = {\r\n      ...buttonStyle,\r\n      backgroundColor: '#ffe0e0',\r\n      border: '1px solid #ffb0b0'\r\n    };\r\n    \r\n    const disabledStyle = {\r\n      ...buttonStyle,\r\n      opacity: 0.6,\r\n      cursor: 'not-allowed'\r\n    };\r\n    \r\n    // Group buttons in rows of 3 for better touch targets\r\n    for (let i = 0; i <= 13; i++) {\r\n      // Determine button style based on relationship to required tricks\r\n      let currentStyle = buttonStyle;\r\n      \r\n      if (selectedTricks === i) {\r\n        currentStyle = selectedStyle;\r\n      } else if (i < requiredTricks) {\r\n        currentStyle = belowRequiredStyle;\r\n      }\r\n      \r\n      if (!contract) {\r\n        currentStyle = disabledStyle;\r\n      }\r\n      \r\n      buttons.push(\r\n        <button\r\n          key={i}\r\n          style={currentStyle}\r\n          onClick={() => handleTrickSelect(i)}\r\n          disabled={!contract}\r\n        >\r\n          {i}\r\n        </button>\r\n      );\r\n    }\r\n    \r\n    return buttons;\r\n  };\r\n  \r\n  const requiredTricks = getRequiredTricks();\r\n  \r\n  // Custom container style for 3-column grid\r\n  const gridStyle = {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(3, 1fr)',\r\n    gap: '4px',\r\n    padding: '5px',\r\n    marginBottom: '20px'\r\n  };\r\n  \r\n  // Custom style for required tricks label\r\n  const requiredTricksStyle = {\r\n    display: 'inline-block',\r\n    fontSize: '14px',\r\n    color: '#1e5c8b',\r\n    marginBottom: '10px',\r\n    fontWeight: 'bold',\r\n    backgroundColor: '#f2f8ff',\r\n    padding: '6px 10px',\r\n    borderRadius: '4px',\r\n    border: '1px solid #d0e1f9'\r\n  };\r\n  \r\n  return (\r\n    <div className=\"trick-input\">\r\n      {contract ? (\r\n        <>\r\n          <div style={requiredTricksStyle}>\r\n            Required tricks: {requiredTricks}\r\n          </div>\r\n          <div style={gridStyle}>\r\n            {renderTrickButtons()}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"please-select\">\r\n          Please select<br />a contract<br />first\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrickInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}