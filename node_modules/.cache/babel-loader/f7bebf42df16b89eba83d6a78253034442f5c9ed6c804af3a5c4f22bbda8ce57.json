{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikec\\\\MikesBridge\\\\bonusbridge\\\\src\\\\components\\\\TrickInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrickInput = ({\n  onTrickChange,\n  initialResult = null,\n  contract = '',\n  onChangeContract\n}) => {\n  _s();\n  // State for selected trick button\n  const [selectedTrick, setSelectedTrick] = useState(null);\n  // State for required tricks (based on contract level)\n  const [requiredTricks, setRequiredTricks] = useState(7);\n\n  // Calculate required tricks when contract changes\n  useEffect(() => {\n    if (contract) {\n      const contractMatch = contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\n      if (contractMatch) {\n        const level = parseInt(contractMatch[1]);\n        setRequiredTricks(level + 6);\n      }\n    }\n  }, [contract]);\n\n  // Set selected trick from initialResult if provided\n  useEffect(() => {\n    if (initialResult !== null && requiredTricks) {\n      // Calculate actual tricks from result\n      const actualTricks = requiredTricks + initialResult;\n      setSelectedTrick(actualTricks);\n    }\n  }, [initialResult, requiredTricks]);\n\n  // Handle trick button click\n  const handleTrickClick = numTricks => {\n    setSelectedTrick(numTricks);\n\n    // Calculate result based on tricks and required tricks\n    const result = numTricks - requiredTricks;\n    onTrickChange(result, numTricks);\n  };\n\n  // Style for trick button\n  const getTrickButtonStyle = trickNum => {\n    // Determine button state\n    const isSelected = selectedTrick === trickNum;\n    const isExact = trickNum === requiredTricks;\n    const isMade = trickNum > requiredTricks;\n    const isDown = trickNum < requiredTricks;\n\n    // Base style\n    let style = {\n      flex: 1,\n      height: '55px',\n      minWidth: '48px',\n      border: '1px solid #ddd',\n      borderRadius: '8px',\n      fontSize: '20px',\n      fontWeight: 'bold',\n      cursor: 'pointer',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\n    };\n\n    // Add color based on state\n    if (isSelected) {\n      if (isExact) {\n        style.backgroundColor = '#ff9800';\n        style.borderColor = '#ff9800';\n        style.color = 'white';\n      } else if (isMade) {\n        style.backgroundColor = '#4caf50';\n        style.borderColor = '#4caf50';\n        style.color = 'white';\n      } else if (isDown) {\n        style.backgroundColor = '#f44336';\n        style.borderColor = '#f44336';\n        style.color = 'white';\n      }\n    } else {\n      if (isExact) {\n        style.backgroundColor = '#fff3e0';\n        style.borderColor = '#ffe0b2';\n      } else if (isMade) {\n        style.backgroundColor = '#e8f5e9';\n        style.borderColor = '#c8e6c9';\n      } else if (isDown) {\n        style.backgroundColor = '#ffebee';\n        style.borderColor = '#ffcdd2';\n      }\n    }\n    return style;\n  };\n\n  // Create trick buttons\n  const renderTrickButtons = () => {\n    const buttons = [];\n\n    // Create rows with 4 buttons each\n    for (let row = 0; row < 4; row++) {\n      const rowButtons = [];\n      for (let col = 0; col < 4; col++) {\n        const trickNum = row * 4 + col;\n        if (trickNum <= 13) {\n          rowButtons.push(/*#__PURE__*/_jsxDEV(\"button\", {\n            style: getTrickButtonStyle(trickNum),\n            onClick: () => handleTrickClick(trickNum),\n            children: trickNum\n          }, `trick-${trickNum}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this));\n        }\n      }\n      buttons.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '8px',\n          marginBottom: '8px'\n        },\n        children: rowButtons\n      }, `row-${row}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this));\n    }\n    return buttons;\n  };\n\n  // Handle change contract button click\n  const handleChangeContract = () => {\n    if (onChangeContract && typeof onChangeContract === 'function') {\n      onChangeContract();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '12px',\n      marginTop: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#f0f3f8',\n        padding: '10px',\n        borderRadius: '8px',\n        textAlign: 'center',\n        fontSize: '15px',\n        fontWeight: 'bold',\n        color: '#2c3e50',\n        border: '1px solid #dfe6e9',\n        marginBottom: '5px'\n      },\n      children: [\"Required tricks: \", requiredTricks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '8px'\n      },\n      children: renderTrickButtons()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        width: '100%',\n        height: '48px',\n        marginTop: '10px',\n        border: '1px solid #ddd',\n        borderRadius: '8px',\n        backgroundColor: '#f5f5f5',\n        color: '#2c3e50',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        cursor: 'pointer'\n      },\n      onClick: handleChangeContract,\n      children: \"Change Contract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(TrickInput, \"/QmD/W+wxqgdg5tWOmifM1V76DQ=\");\n_c = TrickInput;\nexport default TrickInput;\nvar _c;\n$RefreshReg$(_c, \"TrickInput\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TrickInput","onTrickChange","initialResult","contract","onChangeContract","_s","selectedTrick","setSelectedTrick","requiredTricks","setRequiredTricks","contractMatch","match","level","parseInt","actualTricks","handleTrickClick","numTricks","result","getTrickButtonStyle","trickNum","isSelected","isExact","isMade","isDown","style","flex","height","minWidth","border","borderRadius","fontSize","fontWeight","cursor","display","alignItems","justifyContent","boxShadow","backgroundColor","borderColor","color","renderTrickButtons","buttons","row","rowButtons","col","push","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","gap","marginBottom","handleChangeContract","flexDirection","marginTop","padding","textAlign","width","_c","$RefreshReg$"],"sources":["C:/Users/mikec/MikesBridge/bonusbridge/src/components/TrickInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst TrickInput = ({ onTrickChange, initialResult = null, contract = '', onChangeContract }) => {\r\n  // State for selected trick button\r\n  const [selectedTrick, setSelectedTrick] = useState(null);\r\n  // State for required tricks (based on contract level)\r\n  const [requiredTricks, setRequiredTricks] = useState(7);\r\n  \r\n  // Calculate required tricks when contract changes\r\n  useEffect(() => {\r\n    if (contract) {\r\n      const contractMatch = contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\r\n      if (contractMatch) {\r\n        const level = parseInt(contractMatch[1]);\r\n        setRequiredTricks(level + 6);\r\n      }\r\n    }\r\n  }, [contract]);\r\n  \r\n  // Set selected trick from initialResult if provided\r\n  useEffect(() => {\r\n    if (initialResult !== null && requiredTricks) {\r\n      // Calculate actual tricks from result\r\n      const actualTricks = requiredTricks + initialResult;\r\n      setSelectedTrick(actualTricks);\r\n    }\r\n  }, [initialResult, requiredTricks]);\r\n  \r\n  // Handle trick button click\r\n  const handleTrickClick = (numTricks) => {\r\n    setSelectedTrick(numTricks);\r\n    \r\n    // Calculate result based on tricks and required tricks\r\n    const result = numTricks - requiredTricks;\r\n    onTrickChange(result, numTricks);\r\n  };\r\n  \r\n  // Style for trick button\r\n  const getTrickButtonStyle = (trickNum) => {\r\n    // Determine button state\r\n    const isSelected = selectedTrick === trickNum;\r\n    const isExact = trickNum === requiredTricks;\r\n    const isMade = trickNum > requiredTricks;\r\n    const isDown = trickNum < requiredTricks;\r\n    \r\n    // Base style\r\n    let style = {\r\n      flex: 1,\r\n      height: '55px',\r\n      minWidth: '48px',\r\n      border: '1px solid #ddd',\r\n      borderRadius: '8px',\r\n      fontSize: '20px',\r\n      fontWeight: 'bold',\r\n      cursor: 'pointer',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\r\n    };\r\n    \r\n    // Add color based on state\r\n    if (isSelected) {\r\n      if (isExact) {\r\n        style.backgroundColor = '#ff9800';\r\n        style.borderColor = '#ff9800';\r\n        style.color = 'white';\r\n      } else if (isMade) {\r\n        style.backgroundColor = '#4caf50';\r\n        style.borderColor = '#4caf50';\r\n        style.color = 'white';\r\n      } else if (isDown) {\r\n        style.backgroundColor = '#f44336';\r\n        style.borderColor = '#f44336';\r\n        style.color = 'white';\r\n      }\r\n    } else {\r\n      if (isExact) {\r\n        style.backgroundColor = '#fff3e0';\r\n        style.borderColor = '#ffe0b2';\r\n      } else if (isMade) {\r\n        style.backgroundColor = '#e8f5e9';\r\n        style.borderColor = '#c8e6c9';\r\n      } else if (isDown) {\r\n        style.backgroundColor = '#ffebee';\r\n        style.borderColor = '#ffcdd2';\r\n      }\r\n    }\r\n    \r\n    return style;\r\n  };\r\n  \r\n  // Create trick buttons\r\n  const renderTrickButtons = () => {\r\n    const buttons = [];\r\n    \r\n    // Create rows with 4 buttons each\r\n    for (let row = 0; row < 4; row++) {\r\n      const rowButtons = [];\r\n      for (let col = 0; col < 4; col++) {\r\n        const trickNum = row * 4 + col;\r\n        if (trickNum <= 13) {\r\n          rowButtons.push(\r\n            <button\r\n              key={`trick-${trickNum}`}\r\n              style={getTrickButtonStyle(trickNum)}\r\n              onClick={() => handleTrickClick(trickNum)}\r\n            >\r\n              {trickNum}\r\n            </button>\r\n          );\r\n        }\r\n      }\r\n      buttons.push(\r\n        <div key={`row-${row}`} style={{ display: 'flex', gap: '8px', marginBottom: '8px' }}>\r\n          {rowButtons}\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    return buttons;\r\n  };\r\n  \r\n  // Handle change contract button click\r\n  const handleChangeContract = () => {\r\n    if (onChangeContract && typeof onChangeContract === 'function') {\r\n      onChangeContract();\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column', gap: '12px', marginTop: 0 }}>\r\n      <div style={{\r\n        backgroundColor: '#f0f3f8', \r\n        padding: '10px',\r\n        borderRadius: '8px',\r\n        textAlign: 'center',\r\n        fontSize: '15px',\r\n        fontWeight: 'bold',\r\n        color: '#2c3e50',\r\n        border: '1px solid #dfe6e9',\r\n        marginBottom: '5px'\r\n      }}>\r\n        Required tricks: {requiredTricks}\r\n      </div>\r\n      \r\n      <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\r\n        {renderTrickButtons()}\r\n      </div>\r\n      \r\n      <button \r\n        style={{\r\n          width: '100%',\r\n          height: '48px',\r\n          marginTop: '10px',\r\n          border: '1px solid #ddd',\r\n          borderRadius: '8px',\r\n          backgroundColor: '#f5f5f5',\r\n          color: '#2c3e50',\r\n          fontSize: '16px',\r\n          fontWeight: 'bold',\r\n          cursor: 'pointer'\r\n        }}\r\n        onClick={handleChangeContract}\r\n      >\r\n        Change Contract\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrickInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}