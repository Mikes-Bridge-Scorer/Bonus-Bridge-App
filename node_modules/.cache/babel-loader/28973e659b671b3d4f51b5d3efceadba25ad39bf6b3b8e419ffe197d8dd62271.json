{"ast":null,"code":"// Bridge scoring utility functions\n\n// Calculate raw bridge score (standard bridge scoring)\nexport const calculateBridgeScore = contractDetails => {\n  if (!contractDetails) return {\n    nsPoints: 0,\n    ewPoints: 0\n  };\n  const {\n    level,\n    suit,\n    declarer,\n    doubled,\n    isMade,\n    result,\n    vulnerable\n  } = contractDetails;\n  const isNS = declarer === 'N' || declarer === 'S';\n\n  // Determine vulnerability based on declarer's side\n  const declarerVulnerable = isNS ? (vulnerable === null || vulnerable === void 0 ? void 0 : vulnerable.ns) || false : (vulnerable === null || vulnerable === void 0 ? void 0 : vulnerable.ew) || false;\n  let score = 0;\n  if (isMade) {\n    // Trick score\n    const trickValue = suit === '♣' || suit === '♦' ? 20 : 30;\n    const firstTrickValue = suit === 'NT' ? 40 : trickValue;\n\n    // Calculate trick score\n    score += firstTrickValue + (level - 1) * trickValue;\n\n    // Apply doubling\n    if (doubled === 'X') score *= 2;\n    if (doubled === 'XX') score *= 4;\n\n    // Game and slam bonuses\n    if (score >= 100) {\n      // Game bonus\n      score += declarerVulnerable ? 500 : 300;\n    } else {\n      // Part score bonus\n      score += 50;\n    }\n\n    // Slam bonuses\n    if (level === 6) {\n      score += declarerVulnerable ? 750 : 500; // Small slam\n    } else if (level === 7) {\n      score += declarerVulnerable ? 1500 : 1000; // Grand slam\n    }\n\n    // Overtrick bonuses\n    if (result > 0) {\n      const overtrickValue = doubled ? (declarerVulnerable ? 200 : 100) * (doubled === 'XX' ? 2 : 1) : suit === '♣' || suit === '♦' ? 20 : 30;\n      score += overtrickValue * result;\n    }\n\n    // Doubled and redoubled bonuses\n    if (doubled === 'X') score += 50;\n    if (doubled === 'XX') score += 100;\n  } else {\n    // Contract went down\n    const undertricks = Math.abs(result);\n    if (!doubled) {\n      // Not doubled\n      score = -(undertricks * (declarerVulnerable ? 100 : 50));\n    } else {\n      // Doubled or redoubled\n      const multiplier = doubled === 'XX' ? 2 : 1;\n      if (declarerVulnerable) {\n        score = -(300 * multiplier + (undertricks - 1) * 300 * multiplier);\n      } else {\n        // First undertrick\n        score = -(100 * multiplier);\n\n        // Second and third undertricks\n        if (undertricks > 1) {\n          score -= Math.min(undertricks - 1, 2) * 200 * multiplier;\n        }\n\n        // Fourth and subsequent undertricks\n        if (undertricks > 3) {\n          score -= (undertricks - 3) * 300 * multiplier;\n        }\n      }\n    }\n  }\n\n  // Assign points to the appropriate side\n  return isNS ? {\n    nsPoints: score,\n    ewPoints: 0\n  } : {\n    nsPoints: 0,\n    ewPoints: score\n  };\n};\n\n// Parse contract string to get details\nexport const parseContract = (contractString, result, vulnerable) => {\n  if (!contractString) return null;\n  const contractRegex = /(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/;\n  const match = contractString.match(contractRegex);\n  if (!match) return null;\n  const level = parseInt(match[1]);\n  const suit = match[2];\n  const declarer = match[3];\n  const doubled = match[4];\n  return {\n    level,\n    suit,\n    declarer,\n    doubled,\n    isNS: declarer === 'N' || declarer === 'S',\n    isMinor: suit === '♣' || suit === '♦',\n    isMajor: suit === '♥' || suit === '♠',\n    isNT: suit === 'NT',\n    isMade: result >= 0,\n    result: result || 0,\n    vulnerable: vulnerable || {\n      ns: false,\n      ew: false\n    }\n  };\n};\n\n// Determine vulnerability based on deal number\n// Standard bridge vulnerability rotation: None, NS, EW, Both, repeating\nexport const determineVulnerability = dealNumber => {\n  const vulnerabilityPattern = (dealNumber - 1) % 4;\n  switch (vulnerabilityPattern) {\n    case 0:\n      // None\n      return {\n        ns: false,\n        ew: false\n      };\n    case 1:\n      // NS\n      return {\n        ns: true,\n        ew: false\n      };\n    case 2:\n      // EW\n      return {\n        ns: false,\n        ew: true\n      };\n    case 3:\n      // Both\n      return {\n        ns: true,\n        ew: true\n      };\n    default:\n      return {\n        ns: false,\n        ew: false\n      };\n  }\n};\n\n// Function to generate a text description of vulnerability\nexport const vulnerabilityDescription = vulnerable => {\n  if (!vulnerable) return \"Not Vulnerable\";\n  if (vulnerable.ns && vulnerable.ew) {\n    return \"Both Vulnerable\";\n  } else if (vulnerable.ns) {\n    return \"NS Vulnerable\";\n  } else if (vulnerable.ew) {\n    return \"EW Vulnerable\";\n  } else {\n    return \"Not Vulnerable\";\n  }\n};\n\n// Determine dealer based on deal number\n// In bridge, dealer rotates: North, East, South, West\nexport const determineDealer = dealNumber => {\n  const dealerPattern = (dealNumber - 1) % 4;\n  switch (dealerPattern) {\n    case 0:\n      return \"North\";\n    case 1:\n      return \"East\";\n    case 2:\n      return \"South\";\n    case 3:\n      return \"West\";\n    default:\n      return \"North\";\n  }\n};\n\n// Determine if a contract is a game contract\nexport const isGameContract = contractDetails => {\n  if (!contractDetails) return false;\n  return contractDetails.level === 3 && contractDetails.suit === 'NT' || contractDetails.level === 4 && (contractDetails.suit === '♥' || contractDetails.suit === '♠') || contractDetails.level === 5 && (contractDetails.suit === '♣' || contractDetails.suit === '♦') || contractDetails.level >= 6;\n};","map":{"version":3,"names":["calculateBridgeScore","contractDetails","nsPoints","ewPoints","level","suit","declarer","doubled","isMade","result","vulnerable","isNS","declarerVulnerable","ns","ew","score","trickValue","firstTrickValue","overtrickValue","undertricks","Math","abs","multiplier","min","parseContract","contractString","contractRegex","match","parseInt","isMinor","isMajor","isNT","determineVulnerability","dealNumber","vulnerabilityPattern","vulnerabilityDescription","determineDealer","dealerPattern","isGameContract"],"sources":["C:/Users/mikec/MikesBridge/bonusbridge/src/utils/scoring.js"],"sourcesContent":["// Bridge scoring utility functions\r\n\r\n// Calculate raw bridge score (standard bridge scoring)\r\nexport const calculateBridgeScore = (contractDetails) => {\r\n  if (!contractDetails) return { nsPoints: 0, ewPoints: 0 };\r\n  \r\n  const { level, suit, declarer, doubled, isMade, result, vulnerable } = contractDetails;\r\n  const isNS = declarer === 'N' || declarer === 'S';\r\n  \r\n  // Determine vulnerability based on declarer's side\r\n  const declarerVulnerable = isNS ? \r\n    (vulnerable?.ns || false) : \r\n    (vulnerable?.ew || false);\r\n  \r\n  let score = 0;\r\n  \r\n  if (isMade) {\r\n    // Trick score\r\n    const trickValue = (suit === '♣' || suit === '♦') ? 20 : 30;\r\n    const firstTrickValue = suit === 'NT' ? 40 : trickValue;\r\n    \r\n    // Calculate trick score\r\n    score += firstTrickValue + (level - 1) * trickValue;\r\n    \r\n    // Apply doubling\r\n    if (doubled === 'X') score *= 2;\r\n    if (doubled === 'XX') score *= 4;\r\n    \r\n    // Game and slam bonuses\r\n    if (score >= 100) {\r\n      // Game bonus\r\n      score += declarerVulnerable ? 500 : 300;\r\n    } else {\r\n      // Part score bonus\r\n      score += 50;\r\n    }\r\n    \r\n    // Slam bonuses\r\n    if (level === 6) {\r\n      score += declarerVulnerable ? 750 : 500; // Small slam\r\n    } else if (level === 7) {\r\n      score += declarerVulnerable ? 1500 : 1000; // Grand slam\r\n    }\r\n    \r\n    // Overtrick bonuses\r\n    if (result > 0) {\r\n      const overtrickValue = doubled \r\n        ? (declarerVulnerable ? 200 : 100) * (doubled === 'XX' ? 2 : 1)\r\n        : (suit === '♣' || suit === '♦' ? 20 : 30);\r\n      \r\n      score += overtrickValue * result;\r\n    }\r\n    \r\n    // Doubled and redoubled bonuses\r\n    if (doubled === 'X') score += 50;\r\n    if (doubled === 'XX') score += 100;\r\n    \r\n  } else {\r\n    // Contract went down\r\n    const undertricks = Math.abs(result);\r\n    \r\n    if (!doubled) {\r\n      // Not doubled\r\n      score = -(undertricks * (declarerVulnerable ? 100 : 50));\r\n    } else {\r\n      // Doubled or redoubled\r\n      const multiplier = doubled === 'XX' ? 2 : 1;\r\n      \r\n      if (declarerVulnerable) {\r\n        score = -((300 * multiplier) + ((undertricks - 1) * 300 * multiplier));\r\n      } else {\r\n        // First undertrick\r\n        score = -(100 * multiplier);\r\n        \r\n        // Second and third undertricks\r\n        if (undertricks > 1) {\r\n          score -= Math.min(undertricks - 1, 2) * 200 * multiplier;\r\n        }\r\n        \r\n        // Fourth and subsequent undertricks\r\n        if (undertricks > 3) {\r\n          score -= (undertricks - 3) * 300 * multiplier;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  // Assign points to the appropriate side\r\n  return isNS \r\n    ? { nsPoints: score, ewPoints: 0 }\r\n    : { nsPoints: 0, ewPoints: score };\r\n};\r\n\r\n// Parse contract string to get details\r\nexport const parseContract = (contractString, result, vulnerable) => {\r\n  if (!contractString) return null;\r\n  \r\n  const contractRegex = /(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/;\r\n  const match = contractString.match(contractRegex);\r\n  \r\n  if (!match) return null;\r\n  \r\n  const level = parseInt(match[1]);\r\n  const suit = match[2];\r\n  const declarer = match[3];\r\n  const doubled = match[4];\r\n  \r\n  return {\r\n    level,\r\n    suit,\r\n    declarer,\r\n    doubled,\r\n    isNS: declarer === 'N' || declarer === 'S',\r\n    isMinor: suit === '♣' || suit === '♦',\r\n    isMajor: suit === '♥' || suit === '♠',\r\n    isNT: suit === 'NT',\r\n    isMade: result >= 0,\r\n    result: result || 0,\r\n    vulnerable: vulnerable || { ns: false, ew: false }\r\n  };\r\n};\r\n\r\n// Determine vulnerability based on deal number\r\n// Standard bridge vulnerability rotation: None, NS, EW, Both, repeating\r\nexport const determineVulnerability = (dealNumber) => {\r\n  const vulnerabilityPattern = (dealNumber - 1) % 4;\r\n  \r\n  switch (vulnerabilityPattern) {\r\n    case 0: // None\r\n      return { ns: false, ew: false };\r\n    case 1: // NS\r\n      return { ns: true, ew: false };\r\n    case 2: // EW\r\n      return { ns: false, ew: true };\r\n    case 3: // Both\r\n      return { ns: true, ew: true };\r\n    default:\r\n      return { ns: false, ew: false };\r\n  }\r\n};\r\n\r\n// Function to generate a text description of vulnerability\r\nexport const vulnerabilityDescription = (vulnerable) => {\r\n  if (!vulnerable) return \"Not Vulnerable\";\r\n  \r\n  if (vulnerable.ns && vulnerable.ew) {\r\n    return \"Both Vulnerable\";\r\n  } else if (vulnerable.ns) {\r\n    return \"NS Vulnerable\";\r\n  } else if (vulnerable.ew) {\r\n    return \"EW Vulnerable\";\r\n  } else {\r\n    return \"Not Vulnerable\";\r\n  }\r\n};\r\n\r\n// Determine dealer based on deal number\r\n// In bridge, dealer rotates: North, East, South, West\r\nexport const determineDealer = (dealNumber) => {\r\n  const dealerPattern = (dealNumber - 1) % 4;\r\n  \r\n  switch (dealerPattern) {\r\n    case 0:\r\n      return \"North\";\r\n    case 1:\r\n      return \"East\";\r\n    case 2:\r\n      return \"South\";\r\n    case 3:\r\n      return \"West\";\r\n    default:\r\n      return \"North\";\r\n  }\r\n};\r\n\r\n// Determine if a contract is a game contract\r\nexport const isGameContract = (contractDetails) => {\r\n  if (!contractDetails) return false;\r\n  \r\n  return (\r\n    (contractDetails.level === 3 && contractDetails.suit === 'NT') ||\r\n    (contractDetails.level === 4 && (contractDetails.suit === '♥' || contractDetails.suit === '♠')) ||\r\n    (contractDetails.level === 5 && (contractDetails.suit === '♣' || contractDetails.suit === '♦')) ||\r\n    contractDetails.level >= 6\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}