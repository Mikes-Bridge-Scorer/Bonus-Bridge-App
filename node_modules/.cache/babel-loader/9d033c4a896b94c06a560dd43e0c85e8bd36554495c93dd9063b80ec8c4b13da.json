{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikec\\\\MikesBridge\\\\bonusbridge\\\\src\\\\components\\\\ContractInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContractInput = ({\n  onContractChange,\n  initialContract\n}) => {\n  _s();\n  const [level, setLevel] = useState('');\n  const [suit, setSuit] = useState('');\n  const [declarer, setDeclarer] = useState('');\n  const [doubled, setDoubled] = useState('-');\n\n  // Initialize from props if provided\n  useEffect(() => {\n    console.log(\"ContractInput initialContract changed:\", initialContract); // Debug log\n\n    // Reset all selections when initialContract is cleared\n    if (!initialContract) {\n      setLevel('');\n      setSuit('');\n      setDeclarer('');\n      setDoubled('-');\n      return;\n    }\n    const match = initialContract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\n    if (match) {\n      setLevel(parseInt(match[1]));\n      setSuit(match[2]);\n      setDeclarer(match[3]);\n      setDoubled(match[4] === '' ? '-' : match[4]);\n    }\n  }, [initialContract]);\n\n  // Suits in bridge: Clubs (♣), Diamonds (♦), Hearts (♥), Spades (♠), No Trump (NT)\n  const levels = [1, 2, 3, 4, 5, 6, 7];\n  const suits = ['♠', '♥', '♦', '♣', 'NT'];\n  const players = ['N', 'E', 'S', 'W'];\n  const doubledOptions = ['-', 'X', 'XX'];\n\n  // Update the contract whenever any value changes\n  const updateContract = (newLevel, newSuit, newDeclarer, newDoubled) => {\n    // Only form a contract if we have the minimum required values\n    if (newLevel && newSuit && newDeclarer) {\n      const contractString = `${newLevel}${newSuit} ${newDeclarer}${newDoubled === '-' ? '' : newDoubled}`;\n      onContractChange(contractString);\n    } else {\n      onContractChange('');\n    }\n  };\n  const handleLevelChange = newLevel => {\n    setLevel(newLevel);\n    updateContract(newLevel, suit, declarer, doubled);\n  };\n  const handleSuitChange = newSuit => {\n    setSuit(newSuit);\n    updateContract(level, newSuit, declarer, doubled);\n  };\n  const handleDeclarerChange = newDeclarer => {\n    setDeclarer(newDeclarer);\n    updateContract(level, suit, newDeclarer, doubled);\n  };\n  const handleDoubledChange = newDoubled => {\n    setDoubled(newDoubled);\n    updateContract(level, suit, declarer, newDoubled);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contract-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"level-row\",\n      children: levels.map(l => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: level === l ? 'selected' : '',\n        onClick: () => handleLevelChange(l),\n        children: l\n      }, `level-${l}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suit-row\",\n      children: suits.map(s => {\n        let suitClass = '';\n        if (s === '♥' || s === '♦') {\n          suitClass = 'red-suit';\n        }\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${suitClass} ${suit === s ? 'selected' : ''}`,\n          onClick: () => handleSuitChange(s),\n          children: s\n        }, `suit-${s}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"declarer-row\",\n      children: players.map(p => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: declarer === p ? 'selected' : '',\n        onClick: () => handleDeclarerChange(p),\n        children: p\n      }, `declarer-${p}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doubled-row\",\n      children: doubledOptions.map(d => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: doubled === d ? 'selected' : '',\n        onClick: () => handleDoubledChange(d),\n        children: d\n      }, `doubled-${d}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(ContractInput, \"zhRfhcgnTDtxyfqd5rZ+O3uCOMc=\");\n_c = ContractInput;\nexport default ContractInput;\nvar _c;\n$RefreshReg$(_c, \"ContractInput\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ContractInput","onContractChange","initialContract","_s","level","setLevel","suit","setSuit","declarer","setDeclarer","doubled","setDoubled","console","log","match","parseInt","levels","suits","players","doubledOptions","updateContract","newLevel","newSuit","newDeclarer","newDoubled","contractString","handleLevelChange","handleSuitChange","handleDeclarerChange","handleDoubledChange","className","children","map","l","onClick","fileName","_jsxFileName","lineNumber","columnNumber","s","suitClass","p","d","_c","$RefreshReg$"],"sources":["C:/Users/mikec/MikesBridge/bonusbridge/src/components/ContractInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ContractInput = ({ onContractChange, initialContract }) => {\r\n  const [level, setLevel] = useState('');\r\n  const [suit, setSuit] = useState('');\r\n  const [declarer, setDeclarer] = useState('');\r\n  const [doubled, setDoubled] = useState('-');\r\n\r\n  // Initialize from props if provided\r\n  useEffect(() => {\r\n    console.log(\"ContractInput initialContract changed:\", initialContract); // Debug log\r\n    \r\n    // Reset all selections when initialContract is cleared\r\n    if (!initialContract) {\r\n      setLevel('');\r\n      setSuit('');\r\n      setDeclarer('');\r\n      setDoubled('-');\r\n      return;\r\n    }\r\n    \r\n    const match = initialContract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\r\n    if (match) {\r\n      setLevel(parseInt(match[1]));\r\n      setSuit(match[2]);\r\n      setDeclarer(match[3]);\r\n      setDoubled(match[4] === '' ? '-' : match[4]);\r\n    }\r\n  }, [initialContract]);\r\n\r\n  // Suits in bridge: Clubs (♣), Diamonds (♦), Hearts (♥), Spades (♠), No Trump (NT)\r\n  const levels = [1, 2, 3, 4, 5, 6, 7];\r\n  const suits = ['♠', '♥', '♦', '♣', 'NT'];\r\n  const players = ['N', 'E', 'S', 'W'];\r\n  const doubledOptions = ['-', 'X', 'XX'];\r\n\r\n  // Update the contract whenever any value changes\r\n  const updateContract = (newLevel, newSuit, newDeclarer, newDoubled) => {\r\n    // Only form a contract if we have the minimum required values\r\n    if (newLevel && newSuit && newDeclarer) {\r\n      const contractString = `${newLevel}${newSuit} ${newDeclarer}${newDoubled === '-' ? '' : newDoubled}`;\r\n      onContractChange(contractString);\r\n    } else {\r\n      onContractChange('');\r\n    }\r\n  };\r\n\r\n  const handleLevelChange = (newLevel) => {\r\n    setLevel(newLevel);\r\n    updateContract(newLevel, suit, declarer, doubled);\r\n  };\r\n\r\n  const handleSuitChange = (newSuit) => {\r\n    setSuit(newSuit);\r\n    updateContract(level, newSuit, declarer, doubled);\r\n  };\r\n\r\n  const handleDeclarerChange = (newDeclarer) => {\r\n    setDeclarer(newDeclarer);\r\n    updateContract(level, suit, newDeclarer, doubled);\r\n  };\r\n\r\n  const handleDoubledChange = (newDoubled) => {\r\n    setDoubled(newDoubled);\r\n    updateContract(level, suit, declarer, newDoubled);\r\n  };\r\n\r\n  return (\r\n    <div className=\"contract-input\">\r\n      <div className=\"level-row\">\r\n        {levels.map(l => (\r\n          <button \r\n            key={`level-${l}`}\r\n            className={level === l ? 'selected' : ''}\r\n            onClick={() => handleLevelChange(l)}\r\n          >\r\n            {l}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"suit-row\">\r\n        {suits.map(s => {\r\n          let suitClass = '';\r\n          if (s === '♥' || s === '♦') {\r\n            suitClass = 'red-suit';\r\n          }\r\n          \r\n          return (\r\n            <button \r\n              key={`suit-${s}`}\r\n              className={`${suitClass} ${suit === s ? 'selected' : ''}`}\r\n              onClick={() => handleSuitChange(s)}\r\n            >\r\n              {s}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"declarer-row\">\r\n        {players.map(p => (\r\n          <button \r\n            key={`declarer-${p}`}\r\n            className={declarer === p ? 'selected' : ''}\r\n            onClick={() => handleDeclarerChange(p)}\r\n          >\r\n            {p}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"doubled-row\">\r\n        {doubledOptions.map(d => (\r\n          <button \r\n            key={`doubled-${d}`}\r\n            className={doubled === d ? 'selected' : ''}\r\n            onClick={() => handleDoubledChange(d)}\r\n          >\r\n            {d}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      \r\n      {/* Remove this div that shows the redundant contract line */}\r\n      {/* {level && suit && declarer && (\r\n        <div className=\"current-contract\">\r\n          {level}{suit} {declarer}{doubled === '-' ? '' : doubled}\r\n        </div>\r\n      )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContractInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}