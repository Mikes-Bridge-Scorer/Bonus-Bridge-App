{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikec\\\\MikesBridge\\\\bonusbridge\\\\src\\\\context\\\\GameContext.js\",\n  _s = $RefreshSig$();\n// File: src/context/GameContext.js\nimport React, { createContext, useReducer, useEffect } from 'react';\nimport { saveGameState, loadGameState, updateTotalDealCount, getTotalDealCount } from '../utils/storage';\nimport { calculateRawScore, calculateDefenderBonus } from '../utils/scoring';\n\n// Initial game state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  deals: [],\n  dealCount: 0,\n  totalScore: 0,\n  currentDeal: {\n    contract: null,\n    level: null,\n    suit: null,\n    doubled: false,\n    redoubled: false,\n    vulnerable: false,\n    declarer: null,\n    tricksRequired: null,\n    tricksMade: null,\n    rawScore: null,\n    adjustedScore: null,\n    bonus: 0,\n    scoringMethod: 'enhanced' // default to enhanced scoring\n  }\n};\n\n// Game state reducer\nconst gameReducer = (state, action) => {\n  let newState;\n  switch (action.type) {\n    case 'SET_CONTRACT':\n      newState = {\n        ...state,\n        currentDeal: {\n          ...state.currentDeal,\n          contract: action.payload,\n          level: parseInt(action.payload.charAt(0)),\n          suit: action.payload.substring(1),\n          tricksRequired: parseInt(action.payload.charAt(0)) + 6\n        }\n      };\n      break;\n    case 'SET_DOUBLED':\n      newState = {\n        ...state,\n        currentDeal: {\n          ...state.currentDeal,\n          doubled: action.payload,\n          // Reset redoubled if doubled is set to false\n          redoubled: action.payload ? state.currentDeal.redoubled : false\n        }\n      };\n      break;\n    case 'SET_REDOUBLED':\n      newState = {\n        ...state,\n        currentDeal: {\n          ...state.currentDeal,\n          redoubled: action.payload,\n          // Ensure doubled is true if redoubled is true\n          doubled: action.payload ? true : state.currentDeal.doubled\n        }\n      };\n      break;\n    case 'SET_VULNERABLE':\n      newState = {\n        ...state,\n        currentDeal: {\n          ...state.currentDeal,\n          vulnerable: action.payload\n        }\n      };\n      break;\n    case 'SET_DECLARER':\n      newState = {\n        ...state,\n        currentDeal: {\n          ...state.currentDeal,\n          declarer: action.payload\n        }\n      };\n      break;\n    case 'SET_TRICKS_MADE':\n      const tricksMade = action.payload;\n      const contractDetails = {\n        level: state.currentDeal.level,\n        suit: state.currentDeal.suit,\n        doubled: state.currentDeal.doubled,\n        redoubled: state.currentDeal.redoubled,\n        vulnerable: state.currentDeal.vulnerable\n      };\n      const rawScore = calculateRawScore(contractDetails, tricksMade);\n      let adjustedScore = rawScore;\n\n      // If using enhanced scoring, add defender bonus\n      if (state.currentDeal.scoringMethod === 'enhanced') {\n        const defenderBonus = calculateDefenderBonus(contractDetails, tricksMade);\n        adjustedScore = rawScore - defenderBonus;\n      }\n\n      // Add any manual bonus\n      if (state.currentDeal.bonus) {\n        adjustedScore += state.currentDeal.bonus;\n      }\n      newState = {\n        ...state,\n        currentDeal: {\n          ...state.currentDeal,\n          tricksMade,\n          rawScore,\n          adjustedScore\n        }\n      };\n      break;\n    case 'SET_SCORING_METHOD':\n      const scoringMethod = action.payload;\n      let scoreAdjustment = 0;\n\n      // Recalculate adjusted score based on scoring method\n      if (state.currentDeal.rawScore !== null) {\n        if (scoringMethod === 'enhanced') {\n          const contractDetails = {\n            level: state.currentDeal.level,\n            suit: state.currentDeal.suit,\n            doubled: state.currentDeal.doubled,\n            redoubled: state.currentDeal.redoubled,\n            vulnerable: state.currentDeal.vulnerable\n          };\n          scoreAdjustment = calculateDefenderBonus(contractDetails, state.currentDeal.tricksMade);\n        }\n        newState = {\n          ...state,\n          currentDeal: {\n            ...state.currentDeal,\n            scoringMethod,\n            adjustedScore: state.currentDeal.rawScore - scoreAdjustment + (state.currentDeal.bonus || 0)\n          }\n        };\n      } else {\n        newState = {\n          ...state,\n          currentDeal: {\n            ...state.currentDeal,\n            scoringMethod\n          }\n        };\n      }\n      break;\n    case 'SET_BONUS':\n      const bonus = action.payload;\n      newState = {\n        ...state,\n        currentDeal: {\n          ...state.currentDeal,\n          bonus,\n          adjustedScore: state.currentDeal.rawScore !== null ? state.currentDeal.rawScore - (state.currentDeal.scoringMethod === 'enhanced' ? calculateDefenderBonus({\n            level: state.currentDeal.level,\n            suit: state.currentDeal.suit,\n            doubled: state.currentDeal.doubled,\n            redoubled: state.currentDeal.redoubled,\n            vulnerable: state.currentDeal.vulnerable\n          }, state.currentDeal.tricksMade) : 0) + bonus : null\n        }\n      };\n      break;\n    case 'SUBMIT_DEAL':\n      const newDeal = {\n        ...state.currentDeal\n      };\n      const newDeals = [...state.deals, newDeal];\n      const newTotalScore = state.totalScore + newDeal.adjustedScore;\n      const newDealCount = state.dealCount + 1;\n\n      // Update total deal count for evaluation limit\n      updateTotalDealCount(getTotalDealCount() + 1);\n      newState = {\n        ...state,\n        deals: newDeals,\n        dealCount: newDealCount,\n        totalScore: newTotalScore,\n        currentDeal: {\n          ...initialState.currentDeal,\n          scoringMethod: state.currentDeal.scoringMethod // keep current scoring method\n        }\n      };\n      break;\n    case 'NEW_GAME':\n      newState = {\n        ...initialState,\n        currentDeal: {\n          ...initialState.currentDeal,\n          scoringMethod: state.currentDeal.scoringMethod // keep current scoring method\n        }\n      };\n      break;\n    case 'LOAD_GAME':\n      newState = action.payload || initialState;\n      break;\n    default:\n      newState = state;\n  }\n\n  // Save state to localStorage\n  if (action.type !== 'LOAD_GAME') {\n    saveGameState(newState);\n  }\n  return newState;\n};\n\n// Create the context\nexport const GameContext = /*#__PURE__*/createContext();\n\n// Create the provider component\nexport const GameProvider = ({\n  children\n}) => {\n  _s();\n  const [gameState, dispatch] = useReducer(gameReducer, initialState);\n\n  // Load saved game state on initial mount\n  useEffect(() => {\n    const savedState = loadGameState();\n    if (savedState) {\n      dispatch({\n        type: 'LOAD_GAME',\n        payload: savedState\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: {\n      gameState,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n};\n_s(GameProvider, \"4/SUHq4CBhNXXzoBHQ1i3E66VIU=\");\n_c = GameProvider;\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["React","createContext","useReducer","useEffect","saveGameState","loadGameState","updateTotalDealCount","getTotalDealCount","calculateRawScore","calculateDefenderBonus","jsxDEV","_jsxDEV","initialState","deals","dealCount","totalScore","currentDeal","contract","level","suit","doubled","redoubled","vulnerable","declarer","tricksRequired","tricksMade","rawScore","adjustedScore","bonus","scoringMethod","gameReducer","state","action","newState","type","payload","parseInt","charAt","substring","contractDetails","defenderBonus","scoreAdjustment","newDeal","newDeals","newTotalScore","newDealCount","GameContext","GameProvider","children","_s","gameState","dispatch","savedState","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mikec/MikesBridge/bonusbridge/src/context/GameContext.js"],"sourcesContent":["// File: src/context/GameContext.js\r\nimport React, { createContext, useReducer, useEffect } from 'react';\r\nimport { saveGameState, loadGameState, updateTotalDealCount, getTotalDealCount } from '../utils/storage';\r\nimport { calculateRawScore, calculateDefenderBonus } from '../utils/scoring';\r\n\r\n// Initial game state\r\nconst initialState = {\r\n  deals: [],\r\n  dealCount: 0,\r\n  totalScore: 0,\r\n  currentDeal: {\r\n    contract: null,\r\n    level: null,\r\n    suit: null,\r\n    doubled: false,\r\n    redoubled: false,\r\n    vulnerable: false,\r\n    declarer: null,\r\n    tricksRequired: null,\r\n    tricksMade: null,\r\n    rawScore: null,\r\n    adjustedScore: null,\r\n    bonus: 0,\r\n    scoringMethod: 'enhanced' // default to enhanced scoring\r\n  }\r\n};\r\n\r\n// Game state reducer\r\nconst gameReducer = (state, action) => {\r\n  let newState;\r\n  \r\n  switch (action.type) {\r\n    case 'SET_CONTRACT':\r\n      newState = {\r\n        ...state,\r\n        currentDeal: {\r\n          ...state.currentDeal,\r\n          contract: action.payload,\r\n          level: parseInt(action.payload.charAt(0)),\r\n          suit: action.payload.substring(1),\r\n          tricksRequired: parseInt(action.payload.charAt(0)) + 6\r\n        }\r\n      };\r\n      break;\r\n      \r\n    case 'SET_DOUBLED':\r\n      newState = {\r\n        ...state,\r\n        currentDeal: {\r\n          ...state.currentDeal,\r\n          doubled: action.payload,\r\n          // Reset redoubled if doubled is set to false\r\n          redoubled: action.payload ? state.currentDeal.redoubled : false\r\n        }\r\n      };\r\n      break;\r\n      \r\n    case 'SET_REDOUBLED':\r\n      newState = {\r\n        ...state,\r\n        currentDeal: {\r\n          ...state.currentDeal,\r\n          redoubled: action.payload,\r\n          // Ensure doubled is true if redoubled is true\r\n          doubled: action.payload ? true : state.currentDeal.doubled\r\n        }\r\n      };\r\n      break;\r\n      \r\n    case 'SET_VULNERABLE':\r\n      newState = {\r\n        ...state,\r\n        currentDeal: {\r\n          ...state.currentDeal,\r\n          vulnerable: action.payload\r\n        }\r\n      };\r\n      break;\r\n      \r\n    case 'SET_DECLARER':\r\n      newState = {\r\n        ...state,\r\n        currentDeal: {\r\n          ...state.currentDeal,\r\n          declarer: action.payload\r\n        }\r\n      };\r\n      break;\r\n      \r\n    case 'SET_TRICKS_MADE':\r\n      const tricksMade = action.payload;\r\n      const contractDetails = {\r\n        level: state.currentDeal.level,\r\n        suit: state.currentDeal.suit,\r\n        doubled: state.currentDeal.doubled,\r\n        redoubled: state.currentDeal.redoubled,\r\n        vulnerable: state.currentDeal.vulnerable\r\n      };\r\n      \r\n      const rawScore = calculateRawScore(contractDetails, tricksMade);\r\n      let adjustedScore = rawScore;\r\n      \r\n      // If using enhanced scoring, add defender bonus\r\n      if (state.currentDeal.scoringMethod === 'enhanced') {\r\n        const defenderBonus = calculateDefenderBonus(contractDetails, tricksMade);\r\n        adjustedScore = rawScore - defenderBonus;\r\n      }\r\n      \r\n      // Add any manual bonus\r\n      if (state.currentDeal.bonus) {\r\n        adjustedScore += state.currentDeal.bonus;\r\n      }\r\n      \r\n      newState = {\r\n        ...state,\r\n        currentDeal: {\r\n          ...state.currentDeal,\r\n          tricksMade,\r\n          rawScore,\r\n          adjustedScore\r\n        }\r\n      };\r\n      break;\r\n      \r\n    case 'SET_SCORING_METHOD':\r\n      const scoringMethod = action.payload;\r\n      let scoreAdjustment = 0;\r\n      \r\n      // Recalculate adjusted score based on scoring method\r\n      if (state.currentDeal.rawScore !== null) {\r\n        if (scoringMethod === 'enhanced') {\r\n          const contractDetails = {\r\n            level: state.currentDeal.level,\r\n            suit: state.currentDeal.suit,\r\n            doubled: state.currentDeal.doubled,\r\n            redoubled: state.currentDeal.redoubled,\r\n            vulnerable: state.currentDeal.vulnerable\r\n          };\r\n          \r\n          scoreAdjustment = calculateDefenderBonus(contractDetails, state.currentDeal.tricksMade);\r\n        }\r\n        \r\n        newState = {\r\n          ...state,\r\n          currentDeal: {\r\n            ...state.currentDeal,\r\n            scoringMethod,\r\n            adjustedScore: state.currentDeal.rawScore - scoreAdjustment + (state.currentDeal.bonus || 0)\r\n          }\r\n        };\r\n      } else {\r\n        newState = {\r\n          ...state,\r\n          currentDeal: {\r\n            ...state.currentDeal,\r\n            scoringMethod\r\n          }\r\n        };\r\n      }\r\n      break;\r\n      \r\n    case 'SET_BONUS':\r\n      const bonus = action.payload;\r\n      \r\n      newState = {\r\n        ...state,\r\n        currentDeal: {\r\n          ...state.currentDeal,\r\n          bonus,\r\n          adjustedScore: state.currentDeal.rawScore !== null\r\n            ? state.currentDeal.rawScore - (state.currentDeal.scoringMethod === 'enhanced' \r\n                ? calculateDefenderBonus({\r\n                    level: state.currentDeal.level,\r\n                    suit: state.currentDeal.suit,\r\n                    doubled: state.currentDeal.doubled,\r\n                    redoubled: state.currentDeal.redoubled,\r\n                    vulnerable: state.currentDeal.vulnerable\r\n                  }, state.currentDeal.tricksMade)\r\n                : 0) + bonus\r\n            : null\r\n        }\r\n      };\r\n      break;\r\n      \r\n    case 'SUBMIT_DEAL':\r\n      const newDeal = { ...state.currentDeal };\r\n      const newDeals = [...state.deals, newDeal];\r\n      const newTotalScore = state.totalScore + newDeal.adjustedScore;\r\n      const newDealCount = state.dealCount + 1;\r\n      \r\n      // Update total deal count for evaluation limit\r\n      updateTotalDealCount(getTotalDealCount() + 1);\r\n      \r\n      newState = {\r\n        ...state,\r\n        deals: newDeals,\r\n        dealCount: newDealCount,\r\n        totalScore: newTotalScore,\r\n        currentDeal: {\r\n          ...initialState.currentDeal,\r\n          scoringMethod: state.currentDeal.scoringMethod // keep current scoring method\r\n        }\r\n      };\r\n      break;\r\n      \r\n    case 'NEW_GAME':\r\n      newState = {\r\n        ...initialState,\r\n        currentDeal: {\r\n          ...initialState.currentDeal,\r\n          scoringMethod: state.currentDeal.scoringMethod // keep current scoring method\r\n        }\r\n      };\r\n      break;\r\n      \r\n    case 'LOAD_GAME':\r\n      newState = action.payload || initialState;\r\n      break;\r\n      \r\n    default:\r\n      newState = state;\r\n  }\r\n  \r\n  // Save state to localStorage\r\n  if (action.type !== 'LOAD_GAME') {\r\n    saveGameState(newState);\r\n  }\r\n  \r\n  return newState;\r\n};\r\n\r\n// Create the context\r\nexport const GameContext = createContext();\r\n\r\n// Create the provider component\r\nexport const GameProvider = ({ children }) => {\r\n  const [gameState, dispatch] = useReducer(gameReducer, initialState);\r\n  \r\n  // Load saved game state on initial mount\r\n  useEffect(() => {\r\n    const savedState = loadGameState();\r\n    if (savedState) {\r\n      dispatch({ type: 'LOAD_GAME', payload: savedState });\r\n    }\r\n  }, []);\r\n  \r\n  return (\r\n    <GameContext.Provider value={{ gameState, dispatch }}>\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}