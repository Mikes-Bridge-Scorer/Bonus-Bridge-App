{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikec\\\\MikesBridge\\\\bonusbridge\\\\src\\\\components\\\\TrickInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrickInput = ({\n  onTrickChange\n}) => {\n  _s();\n  const [tricks, setTricks] = useState(null);\n  const [contractLevel, setContractLevel] = useState(null);\n\n  // In bridge, contracts range from 1-7, requiring 7-13 tricks\n  const calculateRequiredTricks = level => {\n    return level ? parseInt(level) + 6 : null;\n  };\n\n  // Update the contract level, which determines required tricks\n  const handleContractLevelChange = level => {\n    setContractLevel(level);\n    const requiredTricks = calculateRequiredTricks(level);\n\n    // If tricks are already set, calculate the result\n    if (tricks !== null) {\n      const result = tricks - requiredTricks;\n      onTrickChange(result);\n    }\n  };\n\n  // Update the tricks taken\n  const handleTricksChange = numTricks => {\n    setTricks(numTricks);\n\n    // If contract level is set, calculate the result\n    if (contractLevel !== null) {\n      const requiredTricks = calculateRequiredTricks(contractLevel);\n      const result = numTricks - requiredTricks;\n      onTrickChange(result);\n    }\n  };\n\n  // Generate an array of possible trick counts (0-13)\n  const trickOptions = Array.from({\n    length: 14\n  }, (_, i) => i);\n\n  // Generate an array of possible contract levels (1-7)\n  const levelOptions = Array.from({\n    length: 7\n  }, (_, i) => i + 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trick-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Contract Level:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: levelOptions.map(level => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: contractLevel === level ? 'selected' : '',\n          onClick: () => handleContractLevelChange(level),\n          children: level\n        }, `level-${level}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Tricks Taken:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group tricks-grid\",\n        children: trickOptions.map(trickCount => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: tricks === trickCount ? 'selected' : '',\n          onClick: () => handleTricksChange(trickCount),\n          children: trickCount\n        }, `tricks-${trickCount}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), contractLevel !== null && tricks !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-display\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: tricks < calculateRequiredTricks(contractLevel) ? `Down ${calculateRequiredTricks(contractLevel) - tricks}` : `Made ${tricks - calculateRequiredTricks(contractLevel) + contractLevel}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(TrickInput, \"0MPIa/WZm5+IEKTP1GUAeAgeobc=\");\n_c = TrickInput;\nexport default TrickInput;\nvar _c;\n$RefreshReg$(_c, \"TrickInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TrickInput","onTrickChange","_s","tricks","setTricks","contractLevel","setContractLevel","calculateRequiredTricks","level","parseInt","handleContractLevelChange","requiredTricks","result","handleTricksChange","numTricks","trickOptions","Array","from","length","_","i","levelOptions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","trickCount","_c","$RefreshReg$"],"sources":["C:/Users/mikec/MikesBridge/bonusbridge/src/components/TrickInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TrickInput = ({ onTrickChange }) => {\r\n  const [tricks, setTricks] = useState(null);\r\n  const [contractLevel, setContractLevel] = useState(null);\r\n  \r\n  // In bridge, contracts range from 1-7, requiring 7-13 tricks\r\n  const calculateRequiredTricks = (level) => {\r\n    return level ? parseInt(level) + 6 : null;\r\n  };\r\n  \r\n  // Update the contract level, which determines required tricks\r\n  const handleContractLevelChange = (level) => {\r\n    setContractLevel(level);\r\n    const requiredTricks = calculateRequiredTricks(level);\r\n    \r\n    // If tricks are already set, calculate the result\r\n    if (tricks !== null) {\r\n      const result = tricks - requiredTricks;\r\n      onTrickChange(result);\r\n    }\r\n  };\r\n  \r\n  // Update the tricks taken\r\n  const handleTricksChange = (numTricks) => {\r\n    setTricks(numTricks);\r\n    \r\n    // If contract level is set, calculate the result\r\n    if (contractLevel !== null) {\r\n      const requiredTricks = calculateRequiredTricks(contractLevel);\r\n      const result = numTricks - requiredTricks;\r\n      onTrickChange(result);\r\n    }\r\n  };\r\n  \r\n  // Generate an array of possible trick counts (0-13)\r\n  const trickOptions = Array.from({ length: 14 }, (_, i) => i);\r\n  \r\n  // Generate an array of possible contract levels (1-7)\r\n  const levelOptions = Array.from({ length: 7 }, (_, i) => i + 1);\r\n  \r\n  return (\r\n    <div className=\"trick-input\">\r\n      <h3>Result</h3>\r\n      \r\n      <div className=\"input-section\">\r\n        <label>Contract Level:</label>\r\n        <div className=\"button-group\">\r\n          {levelOptions.map((level) => (\r\n            <button\r\n              key={`level-${level}`}\r\n              className={contractLevel === level ? 'selected' : ''}\r\n              onClick={() => handleContractLevelChange(level)}\r\n            >\r\n              {level}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"input-section\">\r\n        <label>Tricks Taken:</label>\r\n        <div className=\"button-group tricks-grid\">\r\n          {trickOptions.map((trickCount) => (\r\n            <button\r\n              key={`tricks-${trickCount}`}\r\n              className={tricks === trickCount ? 'selected' : ''}\r\n              onClick={() => handleTricksChange(trickCount)}\r\n            >\r\n              {trickCount}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      \r\n      {contractLevel !== null && tricks !== null && (\r\n        <div className=\"result-display\">\r\n          <p>\r\n            {tricks < calculateRequiredTricks(contractLevel)\r\n              ? `Down ${calculateRequiredTricks(contractLevel) - tricks}`\r\n              : `Made ${tricks - calculateRequiredTricks(contractLevel) + contractLevel}`}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrickInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}