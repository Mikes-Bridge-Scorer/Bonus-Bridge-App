{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./ScoreTracking.css';/**\r\n * Component for displaying and tracking scores in the Bridge game\r\n * @param {Object} props - Component props\r\n * @param {Object} props.scores - Current game scores object\r\n * @param {Object} props.currentDeal - Current deal information\r\n * @param {Function} props.onChooseBonusBridge - Function to handle bonus bridge selection\r\n * @param {Function} props.onChoosePartyBridge - Function to handle party bridge selection\r\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ScoreTracking=_ref=>{let{scores,currentDeal,onChooseBonusBridge,onChoosePartyBridge}=_ref;// Debug log for incoming props\nuseEffect(()=>{console.log('ScoreTracking - Current Scores:',scores);console.log('ScoreTracking - Current Deal:',currentDeal);},[scores,currentDeal]);// Format contract for display\nconst formatContract=()=>{if(!currentDeal||!currentDeal.contract)return\"\";const contractMatch=currentDeal.contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);if(!contractMatch)return currentDeal.contract;const level=contractMatch[1];const suit=contractMatch[2];const declarer=contractMatch[3];const doubled=contractMatch[4]||\"\";// Get full declarer name\nlet declarerName=\"\";switch(declarer){case'N':declarerName=\"North\";break;case'E':declarerName=\"East\";break;case'S':declarerName=\"South\";break;case'W':declarerName=\"West\";break;default:declarerName=declarer;}// Format doubled status\nlet doubledText=\"\";if(doubled===\"X\"){doubledText=\" Doubled\";}else if(doubled===\"XX\"){doubledText=\" Redoubled\";}return`${level}${suit} by ${declarerName}${doubledText}`;};// Format result for display\nconst formatResult=()=>{if(!currentDeal||currentDeal.result===null||currentDeal.result===undefined)return\"\";const result=currentDeal.result;if(result>=0){return result>0?`Made +${result}`:\"Made\";}else{return`Down ${Math.abs(result)}`;}};// Calculate score details for display\nconst getScoreDetails=()=>{var _currentDeal$vulnerab,_currentDeal$vulnerab2;if(!currentDeal||!currentDeal.contract)return[];const contractMatch=currentDeal.contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);if(!contractMatch)return[];const level=parseInt(contractMatch[1]);const suit=contractMatch[2];const declarer=contractMatch[3];const doubled=contractMatch[4]||\"\";// Determine declarer's team\nconst isNS=declarer==='N'||declarer==='S';const team=isNS?\"NS\":\"EW\";// Determine vulnerability\nconst vulnerable=isNS?((_currentDeal$vulnerab=currentDeal.vulnerable)===null||_currentDeal$vulnerab===void 0?void 0:_currentDeal$vulnerab.ns)||false:((_currentDeal$vulnerab2=currentDeal.vulnerable)===null||_currentDeal$vulnerab2===void 0?void 0:_currentDeal$vulnerab2.ew)||false;const vulText=vulnerable?\"vulnerable\":\"not vulnerable\";// Calculate required tricks and actual tricks\nconst requiredTricks=level+6;const result=currentDeal.result||0;const actualTricks=requiredTricks+result;// Determine score description\nconst scoringSide=getScoringTeam();let scoreAmount=0;// Calculate the score amount based on which team is scoring\nif(scoringSide===\"NS\"){scoreAmount=Math.abs(currentDeal.nsPoints||0);}else{scoreAmount=Math.abs(currentDeal.ewPoints||0);}// If score amount is still 0, use the raw score\nif(scoreAmount===0){scoreAmount=Math.abs(currentDeal.rawScore||0);}// Format the calculation steps\nreturn[`Contract: ${level}${suit} by ${team} (${vulText})`,`Required tricks: ${level} + 6 = ${requiredTricks}`,`Actual tricks: ${actualTricks}`,result>=0?`Total: ${scoreAmount} points to ${scoringSide}`:`Undertricks (${Math.abs(result)}): ${scoreAmount} points to ${scoringSide}`];};// Get the side that scores (NS or EW)\nconst getScoringTeam=()=>{if(!currentDeal||!currentDeal.contract)return\"NS\";const contractMatch=currentDeal.contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);if(!contractMatch)return\"NS\";const declarer=contractMatch[3];const isNS=declarer==='N'||declarer==='S';const result=currentDeal.result||0;// If made contract, declarer's side scores\n// If defeated, defenders score\nif(result>=0){return isNS?\"NS\":\"EW\";}else{return isNS?\"EW\":\"NS\";}};// Get display score for a team - shows Party Bridge OR Bonus Bridge scores\nconst getDisplayScore=team=>{// Check if we're showing bonus scores or standard party bridge scores\nconst showingBonusScores=scores.showBonusScores||false;// If it's a fresh deal with no contract yet, show 0\nif(!currentDeal||!currentDeal.contract)return 0;// FIXED: Directly access the scores from currentDeal first with fallbacks\nif(team==='NS'){// For North-South\nif(showingBonusScores){// Bonus Bridge scoring\nreturn currentDeal.bonusNsPoints||scores.bonusNsPoints||0;}else{// Party Bridge (standard) scoring\nreturn currentDeal.nsPoints||scores.nsPoints||0;}}else{// For East-West\nif(showingBonusScores){// Bonus Bridge scoring\nreturn currentDeal.bonusEwPoints||scores.bonusEwPoints||0;}else{// Party Bridge (standard) scoring\nreturn currentDeal.ewPoints||scores.ewPoints||0;}}};// Format running total scores properly\nconst formatTotal=team=>{if(!scores)return 0;// Check if we're showing bonus scores or standard party bridge scores\nconst showingBonusScores=scores.showBonusScores||false;// Choose which total to show based on the flag\nlet total;if(showingBonusScores){// Show Bonus Bridge totals\ntotal=team==='NS'?scores.bonusNsTotal:scores.bonusEwTotal;}else{// Show Party Bridge totals (standard)\ntotal=team==='NS'?scores.nsTotal:scores.ewTotal;}// FIXED: Handle edge cases\nif(total===undefined||total===null){console.warn(`Running total for ${team} is undefined or null`);return 0;}if(typeof total==='object'){// Handle case where score is incorrectly an object\nconsole.warn(`Running total for ${team} is an object instead of a number`,total);return 0;}// Make sure we're returning a number\nreturn parseInt(total)||0;};// Determine if we show contract info or not\nconst shouldShowContractInfo=()=>{// FIXED: Show contract info if there's a contract regardless of deal number\nreturn currentDeal&&currentDeal.contract;};// Determine if we show scoring options\nconst shouldShowScoringOptions=()=>{// Only show scoring options if we have a contract and result\nreturn currentDeal&&currentDeal.contract&&currentDeal.result!==null&&currentDeal.result!==undefined&&!scores.showBonusScores;// Don't show if already in bonus mode\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"score-tracking\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Score Summary\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"score-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Team\"}),/*#__PURE__*/_jsx(\"th\",{children:\"This Deal\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Running Total\"})]})}),/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"North-South\"}),/*#__PURE__*/_jsx(\"td\",{children:getDisplayScore('NS')}),/*#__PURE__*/_jsx(\"td\",{children:formatTotal('NS')})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"East-West\"}),/*#__PURE__*/_jsx(\"td\",{children:getDisplayScore('EW')}),/*#__PURE__*/_jsx(\"td\",{children:formatTotal('EW')})]})]})]}),shouldShowContractInfo()&&/*#__PURE__*/_jsxs(\"div\",{className:\"contract-summary\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Contract:\"}),\" \",formatContract(),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Result:\"}),\" \",formatResult()]}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-details\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Score Calculation\"}),/*#__PURE__*/_jsx(\"ul\",{children:getScoreDetails().map((detail,index)=>/*#__PURE__*/_jsx(\"li\",{children:detail},index))})]})]}),shouldShowScoringOptions()&&/*#__PURE__*/_jsxs(\"div\",{className:\"scoring-options\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"bonus-bridge-btn\",onClick:onChooseBonusBridge,children:\"Bonus Bridge Score Adjustments (recommended)\"}),/*#__PURE__*/_jsx(\"button\",{className:\"party-bridge-btn\",onClick:onChoosePartyBridge,children:\"Skip Adjustment (Party Bridge scoring)\"})]})]});};export default ScoreTracking;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","ScoreTracking","_ref","scores","currentDeal","onChooseBonusBridge","onChoosePartyBridge","console","log","formatContract","contract","contractMatch","match","level","suit","declarer","doubled","declarerName","doubledText","formatResult","result","undefined","Math","abs","getScoreDetails","_currentDeal$vulnerab","_currentDeal$vulnerab2","parseInt","isNS","team","vulnerable","ns","ew","vulText","requiredTricks","actualTricks","scoringSide","getScoringTeam","scoreAmount","nsPoints","ewPoints","rawScore","getDisplayScore","showingBonusScores","showBonusScores","bonusNsPoints","bonusEwPoints","formatTotal","total","bonusNsTotal","bonusEwTotal","nsTotal","ewTotal","warn","shouldShowContractInfo","shouldShowScoringOptions","className","children","map","detail","index","onClick"],"sources":["C:/Users/mikec/MikesBridge/bonusbridge/src/components/ScoreTracking.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ScoreTracking.css';\r\n\r\n/**\r\n * Component for displaying and tracking scores in the Bridge game\r\n * @param {Object} props - Component props\r\n * @param {Object} props.scores - Current game scores object\r\n * @param {Object} props.currentDeal - Current deal information\r\n * @param {Function} props.onChooseBonusBridge - Function to handle bonus bridge selection\r\n * @param {Function} props.onChoosePartyBridge - Function to handle party bridge selection\r\n */\r\nconst ScoreTracking = ({ scores, currentDeal, onChooseBonusBridge, onChoosePartyBridge }) => {\r\n  // Debug log for incoming props\r\n  useEffect(() => {\r\n    console.log('ScoreTracking - Current Scores:', scores);\r\n    console.log('ScoreTracking - Current Deal:', currentDeal);\r\n  }, [scores, currentDeal]);\r\n  \r\n  // Format contract for display\r\n  const formatContract = () => {\r\n    if (!currentDeal || !currentDeal.contract) return \"\";\r\n    \r\n    const contractMatch = currentDeal.contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\r\n    if (!contractMatch) return currentDeal.contract;\r\n    \r\n    const level = contractMatch[1];\r\n    const suit = contractMatch[2];\r\n    const declarer = contractMatch[3];\r\n    const doubled = contractMatch[4] || \"\";\r\n    \r\n    // Get full declarer name\r\n    let declarerName = \"\";\r\n    switch (declarer) {\r\n      case 'N': declarerName = \"North\"; break;\r\n      case 'E': declarerName = \"East\"; break;\r\n      case 'S': declarerName = \"South\"; break;\r\n      case 'W': declarerName = \"West\"; break;\r\n      default: declarerName = declarer;\r\n    }\r\n    \r\n    // Format doubled status\r\n    let doubledText = \"\";\r\n    if (doubled === \"X\") {\r\n      doubledText = \" Doubled\";\r\n    } else if (doubled === \"XX\") {\r\n      doubledText = \" Redoubled\";\r\n    }\r\n    \r\n    return `${level}${suit} by ${declarerName}${doubledText}`;\r\n  };\r\n  \r\n  // Format result for display\r\n  const formatResult = () => {\r\n    if (!currentDeal || currentDeal.result === null || currentDeal.result === undefined) return \"\";\r\n    \r\n    const result = currentDeal.result;\r\n    if (result >= 0) {\r\n      return result > 0 ? `Made +${result}` : \"Made\";\r\n    } else {\r\n      return `Down ${Math.abs(result)}`;\r\n    }\r\n  };\r\n  \r\n  // Calculate score details for display\r\n  const getScoreDetails = () => {\r\n    if (!currentDeal || !currentDeal.contract) return [];\r\n    \r\n    const contractMatch = currentDeal.contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\r\n    if (!contractMatch) return [];\r\n    \r\n    const level = parseInt(contractMatch[1]);\r\n    const suit = contractMatch[2];\r\n    const declarer = contractMatch[3];\r\n    const doubled = contractMatch[4] || \"\";\r\n    \r\n    // Determine declarer's team\r\n    const isNS = declarer === 'N' || declarer === 'S';\r\n    const team = isNS ? \"NS\" : \"EW\";\r\n    \r\n    // Determine vulnerability\r\n    const vulnerable = isNS ? \r\n      (currentDeal.vulnerable?.ns || false) : \r\n      (currentDeal.vulnerable?.ew || false);\r\n    \r\n    const vulText = vulnerable ? \"vulnerable\" : \"not vulnerable\";\r\n    \r\n    // Calculate required tricks and actual tricks\r\n    const requiredTricks = level + 6;\r\n    const result = currentDeal.result || 0;\r\n    const actualTricks = requiredTricks + result;\r\n    \r\n    // Determine score description\r\n    const scoringSide = getScoringTeam();\r\n    let scoreAmount = 0;\r\n    \r\n    // Calculate the score amount based on which team is scoring\r\n    if (scoringSide === \"NS\") {\r\n      scoreAmount = Math.abs(currentDeal.nsPoints || 0);\r\n    } else {\r\n      scoreAmount = Math.abs(currentDeal.ewPoints || 0);\r\n    }\r\n    \r\n    // If score amount is still 0, use the raw score\r\n    if (scoreAmount === 0) {\r\n      scoreAmount = Math.abs(currentDeal.rawScore || 0);\r\n    }\r\n    \r\n    // Format the calculation steps\r\n    return [\r\n      `Contract: ${level}${suit} by ${team} (${vulText})`,\r\n      `Required tricks: ${level} + 6 = ${requiredTricks}`,\r\n      `Actual tricks: ${actualTricks}`,\r\n      result >= 0 ? \r\n        `Total: ${scoreAmount} points to ${scoringSide}` : \r\n        `Undertricks (${Math.abs(result)}): ${scoreAmount} points to ${scoringSide}`\r\n    ];\r\n  };\r\n\r\n  // Get the side that scores (NS or EW)\r\n  const getScoringTeam = () => {\r\n    if (!currentDeal || !currentDeal.contract) return \"NS\";\r\n    \r\n    const contractMatch = currentDeal.contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\r\n    if (!contractMatch) return \"NS\";\r\n    \r\n    const declarer = contractMatch[3];\r\n    const isNS = declarer === 'N' || declarer === 'S';\r\n    const result = currentDeal.result || 0;\r\n    \r\n    // If made contract, declarer's side scores\r\n    // If defeated, defenders score\r\n    if (result >= 0) {\r\n      return isNS ? \"NS\" : \"EW\";\r\n    } else {\r\n      return isNS ? \"EW\" : \"NS\";\r\n    }\r\n  };\r\n  \r\n  // Get display score for a team - shows Party Bridge OR Bonus Bridge scores\r\n  const getDisplayScore = (team) => {\r\n    // Check if we're showing bonus scores or standard party bridge scores\r\n    const showingBonusScores = scores.showBonusScores || false;\r\n    \r\n    // If it's a fresh deal with no contract yet, show 0\r\n    if (!currentDeal || !currentDeal.contract) return 0;\r\n    \r\n    // FIXED: Directly access the scores from currentDeal first with fallbacks\r\n    if (team === 'NS') {\r\n      // For North-South\r\n      if (showingBonusScores) {\r\n        // Bonus Bridge scoring\r\n        return currentDeal.bonusNsPoints || scores.bonusNsPoints || 0;\r\n      } else {\r\n        // Party Bridge (standard) scoring\r\n        return currentDeal.nsPoints || scores.nsPoints || 0;\r\n      }\r\n    } else {\r\n      // For East-West\r\n      if (showingBonusScores) {\r\n        // Bonus Bridge scoring\r\n        return currentDeal.bonusEwPoints || scores.bonusEwPoints || 0;\r\n      } else {\r\n        // Party Bridge (standard) scoring\r\n        return currentDeal.ewPoints || scores.ewPoints || 0;\r\n      }\r\n    }\r\n  };\r\n  \r\n  // Format running total scores properly\r\n  const formatTotal = (team) => {\r\n    if (!scores) return 0;\r\n    \r\n    // Check if we're showing bonus scores or standard party bridge scores\r\n    const showingBonusScores = scores.showBonusScores || false;\r\n    \r\n    // Choose which total to show based on the flag\r\n    let total;\r\n    if (showingBonusScores) {\r\n      // Show Bonus Bridge totals\r\n      total = team === 'NS' ? scores.bonusNsTotal : scores.bonusEwTotal;\r\n    } else {\r\n      // Show Party Bridge totals (standard)\r\n      total = team === 'NS' ? scores.nsTotal : scores.ewTotal;\r\n    }\r\n    \r\n    // FIXED: Handle edge cases\r\n    if (total === undefined || total === null) {\r\n      console.warn(`Running total for ${team} is undefined or null`);\r\n      return 0;\r\n    }\r\n    \r\n    if (typeof total === 'object') {\r\n      // Handle case where score is incorrectly an object\r\n      console.warn(`Running total for ${team} is an object instead of a number`, total);\r\n      return 0;\r\n    }\r\n    \r\n    // Make sure we're returning a number\r\n    return parseInt(total) || 0;\r\n  };\r\n  \r\n  // Determine if we show contract info or not\r\n  const shouldShowContractInfo = () => {\r\n    // FIXED: Show contract info if there's a contract regardless of deal number\r\n    return currentDeal && currentDeal.contract;\r\n  };\r\n  \r\n  // Determine if we show scoring options\r\n  const shouldShowScoringOptions = () => {\r\n    // Only show scoring options if we have a contract and result\r\n    return currentDeal && \r\n           currentDeal.contract && \r\n           currentDeal.result !== null && \r\n           currentDeal.result !== undefined &&\r\n           !scores.showBonusScores; // Don't show if already in bonus mode\r\n  };\r\n  \r\n  return (\r\n    <div className=\"score-tracking\">\r\n      <h3>Score Summary</h3>\r\n      \r\n      <table className=\"score-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Team</th>\r\n            <th>This Deal</th>\r\n            <th>Running Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>North-South</td>\r\n            <td>{getDisplayScore('NS')}</td>\r\n            <td>{formatTotal('NS')}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>East-West</td>\r\n            <td>{getDisplayScore('EW')}</td>\r\n            <td>{formatTotal('EW')}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      \r\n      {shouldShowContractInfo() && (\r\n        <div className=\"contract-summary\">\r\n          <p>\r\n            <strong>Contract:</strong> {formatContract()}\r\n            <br />\r\n            <strong>Result:</strong> {formatResult()}\r\n          </p>\r\n          \r\n          {/* FIXED: Removed the toggle button and always show score details */}\r\n          <div className=\"score-details\">\r\n            <h4>Score Calculation</h4>\r\n            <ul>\r\n              {getScoreDetails().map((detail, index) => (\r\n                <li key={index}>{detail}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {shouldShowScoringOptions() && (\r\n        <div className=\"scoring-options\">\r\n          <button \r\n            className=\"bonus-bridge-btn\"\r\n            onClick={onChooseBonusBridge}\r\n          >\r\n            Bonus Bridge Score Adjustments (recommended)\r\n          </button>\r\n          \r\n          <button \r\n            className=\"party-bridge-btn\"\r\n            onClick={onChoosePartyBridge}\r\n          >\r\n            Skip Adjustment (Party Bridge scoring)\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScoreTracking;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,qBAAqB,CAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAPA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAQA,KAAM,CAAAC,aAAa,CAAGC,IAAA,EAAuE,IAAtE,CAAEC,MAAM,CAAEC,WAAW,CAAEC,mBAAmB,CAAEC,mBAAoB,CAAC,CAAAJ,IAAA,CACtF;AACAN,SAAS,CAAC,IAAM,CACdW,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAEL,MAAM,CAAC,CACtDI,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAEJ,WAAW,CAAC,CAC3D,CAAC,CAAE,CAACD,MAAM,CAAEC,WAAW,CAAC,CAAC,CAEzB;AACA,KAAM,CAAAK,cAAc,CAAGA,CAAA,GAAM,CAC3B,GAAI,CAACL,WAAW,EAAI,CAACA,WAAW,CAACM,QAAQ,CAAE,MAAO,EAAE,CAEpD,KAAM,CAAAC,aAAa,CAAGP,WAAW,CAACM,QAAQ,CAACE,KAAK,CAAC,oCAAoC,CAAC,CACtF,GAAI,CAACD,aAAa,CAAE,MAAO,CAAAP,WAAW,CAACM,QAAQ,CAE/C,KAAM,CAAAG,KAAK,CAAGF,aAAa,CAAC,CAAC,CAAC,CAC9B,KAAM,CAAAG,IAAI,CAAGH,aAAa,CAAC,CAAC,CAAC,CAC7B,KAAM,CAAAI,QAAQ,CAAGJ,aAAa,CAAC,CAAC,CAAC,CACjC,KAAM,CAAAK,OAAO,CAAGL,aAAa,CAAC,CAAC,CAAC,EAAI,EAAE,CAEtC;AACA,GAAI,CAAAM,YAAY,CAAG,EAAE,CACrB,OAAQF,QAAQ,EACd,IAAK,GAAG,CAAEE,YAAY,CAAG,OAAO,CAAE,MAClC,IAAK,GAAG,CAAEA,YAAY,CAAG,MAAM,CAAE,MACjC,IAAK,GAAG,CAAEA,YAAY,CAAG,OAAO,CAAE,MAClC,IAAK,GAAG,CAAEA,YAAY,CAAG,MAAM,CAAE,MACjC,QAASA,YAAY,CAAGF,QAAQ,CAClC,CAEA;AACA,GAAI,CAAAG,WAAW,CAAG,EAAE,CACpB,GAAIF,OAAO,GAAK,GAAG,CAAE,CACnBE,WAAW,CAAG,UAAU,CAC1B,CAAC,IAAM,IAAIF,OAAO,GAAK,IAAI,CAAE,CAC3BE,WAAW,CAAG,YAAY,CAC5B,CAEA,MAAO,GAAGL,KAAK,GAAGC,IAAI,OAAOG,YAAY,GAAGC,WAAW,EAAE,CAC3D,CAAC,CAED;AACA,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,GAAI,CAACf,WAAW,EAAIA,WAAW,CAACgB,MAAM,GAAK,IAAI,EAAIhB,WAAW,CAACgB,MAAM,GAAKC,SAAS,CAAE,MAAO,EAAE,CAE9F,KAAM,CAAAD,MAAM,CAAGhB,WAAW,CAACgB,MAAM,CACjC,GAAIA,MAAM,EAAI,CAAC,CAAE,CACf,MAAO,CAAAA,MAAM,CAAG,CAAC,CAAG,SAASA,MAAM,EAAE,CAAG,MAAM,CAChD,CAAC,IAAM,CACL,MAAO,QAAQE,IAAI,CAACC,GAAG,CAACH,MAAM,CAAC,EAAE,CACnC,CACF,CAAC,CAED;AACA,KAAM,CAAAI,eAAe,CAAGA,CAAA,GAAM,KAAAC,qBAAA,CAAAC,sBAAA,CAC5B,GAAI,CAACtB,WAAW,EAAI,CAACA,WAAW,CAACM,QAAQ,CAAE,MAAO,EAAE,CAEpD,KAAM,CAAAC,aAAa,CAAGP,WAAW,CAACM,QAAQ,CAACE,KAAK,CAAC,oCAAoC,CAAC,CACtF,GAAI,CAACD,aAAa,CAAE,MAAO,EAAE,CAE7B,KAAM,CAAAE,KAAK,CAAGc,QAAQ,CAAChB,aAAa,CAAC,CAAC,CAAC,CAAC,CACxC,KAAM,CAAAG,IAAI,CAAGH,aAAa,CAAC,CAAC,CAAC,CAC7B,KAAM,CAAAI,QAAQ,CAAGJ,aAAa,CAAC,CAAC,CAAC,CACjC,KAAM,CAAAK,OAAO,CAAGL,aAAa,CAAC,CAAC,CAAC,EAAI,EAAE,CAEtC;AACA,KAAM,CAAAiB,IAAI,CAAGb,QAAQ,GAAK,GAAG,EAAIA,QAAQ,GAAK,GAAG,CACjD,KAAM,CAAAc,IAAI,CAAGD,IAAI,CAAG,IAAI,CAAG,IAAI,CAE/B;AACA,KAAM,CAAAE,UAAU,CAAGF,IAAI,CACpB,EAAAH,qBAAA,CAAArB,WAAW,CAAC0B,UAAU,UAAAL,qBAAA,iBAAtBA,qBAAA,CAAwBM,EAAE,GAAI,KAAK,CACnC,EAAAL,sBAAA,CAAAtB,WAAW,CAAC0B,UAAU,UAAAJ,sBAAA,iBAAtBA,sBAAA,CAAwBM,EAAE,GAAI,KAAM,CAEvC,KAAM,CAAAC,OAAO,CAAGH,UAAU,CAAG,YAAY,CAAG,gBAAgB,CAE5D;AACA,KAAM,CAAAI,cAAc,CAAGrB,KAAK,CAAG,CAAC,CAChC,KAAM,CAAAO,MAAM,CAAGhB,WAAW,CAACgB,MAAM,EAAI,CAAC,CACtC,KAAM,CAAAe,YAAY,CAAGD,cAAc,CAAGd,MAAM,CAE5C;AACA,KAAM,CAAAgB,WAAW,CAAGC,cAAc,CAAC,CAAC,CACpC,GAAI,CAAAC,WAAW,CAAG,CAAC,CAEnB;AACA,GAAIF,WAAW,GAAK,IAAI,CAAE,CACxBE,WAAW,CAAGhB,IAAI,CAACC,GAAG,CAACnB,WAAW,CAACmC,QAAQ,EAAI,CAAC,CAAC,CACnD,CAAC,IAAM,CACLD,WAAW,CAAGhB,IAAI,CAACC,GAAG,CAACnB,WAAW,CAACoC,QAAQ,EAAI,CAAC,CAAC,CACnD,CAEA;AACA,GAAIF,WAAW,GAAK,CAAC,CAAE,CACrBA,WAAW,CAAGhB,IAAI,CAACC,GAAG,CAACnB,WAAW,CAACqC,QAAQ,EAAI,CAAC,CAAC,CACnD,CAEA;AACA,MAAO,CACL,aAAa5B,KAAK,GAAGC,IAAI,OAAOe,IAAI,KAAKI,OAAO,GAAG,CACnD,oBAAoBpB,KAAK,UAAUqB,cAAc,EAAE,CACnD,kBAAkBC,YAAY,EAAE,CAChCf,MAAM,EAAI,CAAC,CACT,UAAUkB,WAAW,cAAcF,WAAW,EAAE,CAChD,gBAAgBd,IAAI,CAACC,GAAG,CAACH,MAAM,CAAC,MAAMkB,WAAW,cAAcF,WAAW,EAAE,CAC/E,CACH,CAAC,CAED;AACA,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,GAAI,CAACjC,WAAW,EAAI,CAACA,WAAW,CAACM,QAAQ,CAAE,MAAO,IAAI,CAEtD,KAAM,CAAAC,aAAa,CAAGP,WAAW,CAACM,QAAQ,CAACE,KAAK,CAAC,oCAAoC,CAAC,CACtF,GAAI,CAACD,aAAa,CAAE,MAAO,IAAI,CAE/B,KAAM,CAAAI,QAAQ,CAAGJ,aAAa,CAAC,CAAC,CAAC,CACjC,KAAM,CAAAiB,IAAI,CAAGb,QAAQ,GAAK,GAAG,EAAIA,QAAQ,GAAK,GAAG,CACjD,KAAM,CAAAK,MAAM,CAAGhB,WAAW,CAACgB,MAAM,EAAI,CAAC,CAEtC;AACA;AACA,GAAIA,MAAM,EAAI,CAAC,CAAE,CACf,MAAO,CAAAQ,IAAI,CAAG,IAAI,CAAG,IAAI,CAC3B,CAAC,IAAM,CACL,MAAO,CAAAA,IAAI,CAAG,IAAI,CAAG,IAAI,CAC3B,CACF,CAAC,CAED;AACA,KAAM,CAAAc,eAAe,CAAIb,IAAI,EAAK,CAChC;AACA,KAAM,CAAAc,kBAAkB,CAAGxC,MAAM,CAACyC,eAAe,EAAI,KAAK,CAE1D;AACA,GAAI,CAACxC,WAAW,EAAI,CAACA,WAAW,CAACM,QAAQ,CAAE,MAAO,EAAC,CAEnD;AACA,GAAImB,IAAI,GAAK,IAAI,CAAE,CACjB;AACA,GAAIc,kBAAkB,CAAE,CACtB;AACA,MAAO,CAAAvC,WAAW,CAACyC,aAAa,EAAI1C,MAAM,CAAC0C,aAAa,EAAI,CAAC,CAC/D,CAAC,IAAM,CACL;AACA,MAAO,CAAAzC,WAAW,CAACmC,QAAQ,EAAIpC,MAAM,CAACoC,QAAQ,EAAI,CAAC,CACrD,CACF,CAAC,IAAM,CACL;AACA,GAAII,kBAAkB,CAAE,CACtB;AACA,MAAO,CAAAvC,WAAW,CAAC0C,aAAa,EAAI3C,MAAM,CAAC2C,aAAa,EAAI,CAAC,CAC/D,CAAC,IAAM,CACL;AACA,MAAO,CAAA1C,WAAW,CAACoC,QAAQ,EAAIrC,MAAM,CAACqC,QAAQ,EAAI,CAAC,CACrD,CACF,CACF,CAAC,CAED;AACA,KAAM,CAAAO,WAAW,CAAIlB,IAAI,EAAK,CAC5B,GAAI,CAAC1B,MAAM,CAAE,MAAO,EAAC,CAErB;AACA,KAAM,CAAAwC,kBAAkB,CAAGxC,MAAM,CAACyC,eAAe,EAAI,KAAK,CAE1D;AACA,GAAI,CAAAI,KAAK,CACT,GAAIL,kBAAkB,CAAE,CACtB;AACAK,KAAK,CAAGnB,IAAI,GAAK,IAAI,CAAG1B,MAAM,CAAC8C,YAAY,CAAG9C,MAAM,CAAC+C,YAAY,CACnE,CAAC,IAAM,CACL;AACAF,KAAK,CAAGnB,IAAI,GAAK,IAAI,CAAG1B,MAAM,CAACgD,OAAO,CAAGhD,MAAM,CAACiD,OAAO,CACzD,CAEA;AACA,GAAIJ,KAAK,GAAK3B,SAAS,EAAI2B,KAAK,GAAK,IAAI,CAAE,CACzCzC,OAAO,CAAC8C,IAAI,CAAC,qBAAqBxB,IAAI,uBAAuB,CAAC,CAC9D,MAAO,EAAC,CACV,CAEA,GAAI,MAAO,CAAAmB,KAAK,GAAK,QAAQ,CAAE,CAC7B;AACAzC,OAAO,CAAC8C,IAAI,CAAC,qBAAqBxB,IAAI,mCAAmC,CAAEmB,KAAK,CAAC,CACjF,MAAO,EAAC,CACV,CAEA;AACA,MAAO,CAAArB,QAAQ,CAACqB,KAAK,CAAC,EAAI,CAAC,CAC7B,CAAC,CAED;AACA,KAAM,CAAAM,sBAAsB,CAAGA,CAAA,GAAM,CACnC;AACA,MAAO,CAAAlD,WAAW,EAAIA,WAAW,CAACM,QAAQ,CAC5C,CAAC,CAED;AACA,KAAM,CAAA6C,wBAAwB,CAAGA,CAAA,GAAM,CACrC;AACA,MAAO,CAAAnD,WAAW,EACXA,WAAW,CAACM,QAAQ,EACpBN,WAAW,CAACgB,MAAM,GAAK,IAAI,EAC3BhB,WAAW,CAACgB,MAAM,GAAKC,SAAS,EAChC,CAAClB,MAAM,CAACyC,eAAe,CAAE;AAClC,CAAC,CAED,mBACE5C,KAAA,QAAKwD,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B3D,IAAA,OAAA2D,QAAA,CAAI,eAAa,CAAI,CAAC,cAEtBzD,KAAA,UAAOwD,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC5B3D,IAAA,UAAA2D,QAAA,cACEzD,KAAA,OAAAyD,QAAA,eACE3D,IAAA,OAAA2D,QAAA,CAAI,MAAI,CAAI,CAAC,cACb3D,IAAA,OAAA2D,QAAA,CAAI,WAAS,CAAI,CAAC,cAClB3D,IAAA,OAAA2D,QAAA,CAAI,eAAa,CAAI,CAAC,EACpB,CAAC,CACA,CAAC,cACRzD,KAAA,UAAAyD,QAAA,eACEzD,KAAA,OAAAyD,QAAA,eACE3D,IAAA,OAAA2D,QAAA,CAAI,aAAW,CAAI,CAAC,cACpB3D,IAAA,OAAA2D,QAAA,CAAKf,eAAe,CAAC,IAAI,CAAC,CAAK,CAAC,cAChC5C,IAAA,OAAA2D,QAAA,CAAKV,WAAW,CAAC,IAAI,CAAC,CAAK,CAAC,EAC1B,CAAC,cACL/C,KAAA,OAAAyD,QAAA,eACE3D,IAAA,OAAA2D,QAAA,CAAI,WAAS,CAAI,CAAC,cAClB3D,IAAA,OAAA2D,QAAA,CAAKf,eAAe,CAAC,IAAI,CAAC,CAAK,CAAC,cAChC5C,IAAA,OAAA2D,QAAA,CAAKV,WAAW,CAAC,IAAI,CAAC,CAAK,CAAC,EAC1B,CAAC,EACA,CAAC,EACH,CAAC,CAEPO,sBAAsB,CAAC,CAAC,eACvBtD,KAAA,QAAKwD,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BzD,KAAA,MAAAyD,QAAA,eACE3D,IAAA,WAAA2D,QAAA,CAAQ,WAAS,CAAQ,CAAC,IAAC,CAAChD,cAAc,CAAC,CAAC,cAC5CX,IAAA,QAAK,CAAC,cACNA,IAAA,WAAA2D,QAAA,CAAQ,SAAO,CAAQ,CAAC,IAAC,CAACtC,YAAY,CAAC,CAAC,EACvC,CAAC,cAGJnB,KAAA,QAAKwD,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5B3D,IAAA,OAAA2D,QAAA,CAAI,mBAAiB,CAAI,CAAC,cAC1B3D,IAAA,OAAA2D,QAAA,CACGjC,eAAe,CAAC,CAAC,CAACkC,GAAG,CAAC,CAACC,MAAM,CAAEC,KAAK,gBACnC9D,IAAA,OAAA2D,QAAA,CAAiBE,MAAM,EAAdC,KAAmB,CAC7B,CAAC,CACA,CAAC,EACF,CAAC,EACH,CACN,CAEAL,wBAAwB,CAAC,CAAC,eACzBvD,KAAA,QAAKwD,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9B3D,IAAA,WACE0D,SAAS,CAAC,kBAAkB,CAC5BK,OAAO,CAAExD,mBAAoB,CAAAoD,QAAA,CAC9B,8CAED,CAAQ,CAAC,cAET3D,IAAA,WACE0D,SAAS,CAAC,kBAAkB,CAC5BK,OAAO,CAAEvD,mBAAoB,CAAAmD,QAAA,CAC9B,wCAED,CAAQ,CAAC,EACN,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAxD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}