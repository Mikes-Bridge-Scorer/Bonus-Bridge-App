{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikec\\\\MikesBridge\\\\bonusbridge\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BridgeGameUI from './BridgeGameUI';\nimport { determineVulnerability } from './utils/scoring';\nimport './global.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [gameState, setGameState] = useState(() => {\n    // Try to load game state from local storage\n    const savedState = localStorage.getItem('bridgeGameState');\n    if (savedState) {\n      try {\n        return JSON.parse(savedState);\n      } catch (e) {\n        console.error('Error parsing saved game state', e);\n      }\n    }\n\n    // Default initial state\n    return {\n      gameNumber: 1,\n      dealNumber: 1,\n      scores: {\n        nsScore: 0,\n        ewScore: 0\n      },\n      deals: [],\n      currentDeal: {\n        contract: '',\n        declarer: '',\n        result: null,\n        tricks: null,\n        vulnerable: determineVulnerability(1)\n      },\n      isAwake: true,\n      showScorePopup: false\n    };\n  });\n\n  // Save game state to local storage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('bridgeGameState', JSON.stringify(gameState));\n  }, [gameState]);\n\n  // Handle starting a new deal\n  const handleNextDeal = () => {\n    setGameState(prev => ({\n      ...prev,\n      dealNumber: prev.dealNumber + 1,\n      showScorePopup: false,\n      currentDeal: {\n        contract: '',\n        declarer: '',\n        result: null,\n        tricks: null,\n        vulnerable: determineVulnerability(prev.dealNumber + 1)\n      }\n    }));\n  };\n\n  // Handle starting a new game\n  const handleNewGame = () => {\n    setGameState({\n      gameNumber: gameState.gameNumber + 1,\n      dealNumber: 1,\n      scores: {\n        nsScore: 0,\n        ewScore: 0\n      },\n      deals: [],\n      currentDeal: {\n        contract: '',\n        declarer: '',\n        result: null,\n        tricks: null,\n        vulnerable: determineVulnerability(1)\n      },\n      isAwake: gameState.isAwake,\n      showScorePopup: false\n    });\n  };\n\n  // Update the current deal in the game state\n  const updateCurrentDeal = updatedDeal => {\n    setGameState(prev => ({\n      ...prev,\n      currentDeal: {\n        ...prev.currentDeal,\n        ...updatedDeal\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(BridgeGameUI, {\n      gameState: gameState,\n      updateCurrentDeal: updateCurrentDeal,\n      onNextDeal: handleNextDeal,\n      onNewGame: handleNewGame,\n      setGameState: setGameState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"JlPOe/alun8wlbjahW7Co4Mj9rM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BridgeGameUI","determineVulnerability","jsxDEV","_jsxDEV","App","_s","gameState","setGameState","savedState","localStorage","getItem","JSON","parse","e","console","error","gameNumber","dealNumber","scores","nsScore","ewScore","deals","currentDeal","contract","declarer","result","tricks","vulnerable","isAwake","showScorePopup","setItem","stringify","handleNextDeal","prev","handleNewGame","updateCurrentDeal","updatedDeal","className","children","onNextDeal","onNewGame","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mikec/MikesBridge/bonusbridge/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport BridgeGameUI from './BridgeGameUI';\r\nimport { determineVulnerability } from './utils/scoring';\r\nimport './global.css';\r\n\r\nconst App = () => {\r\n  const [gameState, setGameState] = useState(() => {\r\n    // Try to load game state from local storage\r\n    const savedState = localStorage.getItem('bridgeGameState');\r\n    if (savedState) {\r\n      try {\r\n        return JSON.parse(savedState);\r\n      } catch (e) {\r\n        console.error('Error parsing saved game state', e);\r\n      }\r\n    }\r\n    \r\n    // Default initial state\r\n    return {\r\n      gameNumber: 1,\r\n      dealNumber: 1,\r\n      scores: {\r\n        nsScore: 0,\r\n        ewScore: 0\r\n      },\r\n      deals: [],\r\n      currentDeal: {\r\n        contract: '',\r\n        declarer: '',\r\n        result: null,\r\n        tricks: null,\r\n        vulnerable: determineVulnerability(1)\r\n      },\r\n      isAwake: true,\r\n      showScorePopup: false\r\n    };\r\n  });\r\n  \r\n  // Save game state to local storage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('bridgeGameState', JSON.stringify(gameState));\r\n  }, [gameState]);\r\n  \r\n  // Handle starting a new deal\r\n  const handleNextDeal = () => {\r\n    setGameState(prev => ({\r\n      ...prev,\r\n      dealNumber: prev.dealNumber + 1,\r\n      showScorePopup: false,\r\n      currentDeal: {\r\n        contract: '',\r\n        declarer: '',\r\n        result: null,\r\n        tricks: null,\r\n        vulnerable: determineVulnerability(prev.dealNumber + 1)\r\n      }\r\n    }));\r\n  };\r\n  \r\n  // Handle starting a new game\r\n  const handleNewGame = () => {\r\n    setGameState({\r\n      gameNumber: gameState.gameNumber + 1,\r\n      dealNumber: 1,\r\n      scores: {\r\n        nsScore: 0,\r\n        ewScore: 0\r\n      },\r\n      deals: [],\r\n      currentDeal: {\r\n        contract: '',\r\n        declarer: '',\r\n        result: null,\r\n        tricks: null,\r\n        vulnerable: determineVulnerability(1)\r\n      },\r\n      isAwake: gameState.isAwake,\r\n      showScorePopup: false\r\n    });\r\n  };\r\n  \r\n  // Update the current deal in the game state\r\n  const updateCurrentDeal = (updatedDeal) => {\r\n    setGameState(prev => ({\r\n      ...prev,\r\n      currentDeal: {\r\n        ...prev.currentDeal,\r\n        ...updatedDeal\r\n      }\r\n    }));\r\n  };\r\n  \r\n  return (\r\n    <div className=\"app-container\">\r\n      <BridgeGameUI \r\n        gameState={gameState} \r\n        updateCurrentDeal={updateCurrentDeal}\r\n        onNextDeal={handleNextDeal}\r\n        onNewGame={handleNewGame}\r\n        setGameState={setGameState}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}