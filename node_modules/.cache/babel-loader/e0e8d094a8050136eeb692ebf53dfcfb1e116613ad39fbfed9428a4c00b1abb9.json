{"ast":null,"code":"import React,{useState,useEffect}from'react';import BonusBridgeExplanation from'./BonusBridgeExplanation';import'./ScoreAdjustment.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ScoreAdjustment=_ref=>{let{currentDeal,onSaveAdjustment,onCancel}=_ref;// State for form inputs\nconst[totalHCP,setTotalHCP]=useState(20);const[singletons,setSingletons]=useState(0);const[voids,setVoids]=useState(0);const[longSuits,setLongSuits]=useState(0);// State for showing explanation\nconst[showExplanation,setShowExplanation]=useState(false);// State for flashing effect\nconst[isFlashing,setIsFlashing]=useState(true);// Effect to initialize with default values based on current deal\nuseEffect(()=>{if(currentDeal){console.log('ScoreAdjustment: Current deal loaded',currentDeal);// If we have previous analysis data, use it\nif(currentDeal.handAnalysis){setTotalHCP(currentDeal.handAnalysis.totalHCP||20);setSingletons(currentDeal.handAnalysis.singletons||0);setVoids(currentDeal.handAnalysis.voids||0);setLongSuits(currentDeal.handAnalysis.longSuits||0);}}},[currentDeal]);// Create flashing effect for the pause notice\nuseEffect(()=>{const flashInterval=setInterval(()=>{setIsFlashing(prev=>!prev);},800);// Toggle every 800ms\nreturn()=>clearInterval(flashInterval);},[]);// Validate and handle input changes\nconst handleHCPChange=increment=>{setTotalHCP(prev=>{const newValue=prev+increment;return Math.min(Math.max(0,newValue),40);// Limit between 0-40\n});};const handleSingletonChange=increment=>{setSingletons(prev=>{const newValue=prev+increment;return Math.min(Math.max(0,newValue),4);// Max 4 singletons possible\n});};const handleVoidChange=increment=>{setVoids(prev=>{const newValue=prev+increment;return Math.min(Math.max(0,newValue),4);// Max 4 voids possible\n});};const handleLongSuitChange=increment=>{setLongSuits(prev=>{const newValue=prev+increment;return Math.min(Math.max(0,newValue),4);// Limit for practical purposes\n});};// Handler for showing explanation\nconst handleShowExplanation=()=>{setShowExplanation(true);};// Handler for hiding explanation\nconst handleHideExplanation=()=>{setShowExplanation(false);};// Calculate and prepare final analysis data\nconst calculateFinalAnalysis=()=>{// Extract contract details\nconst contractMatch=currentDeal.contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);if(!contractMatch){console.error('Unable to parse contract:',currentDeal.contract);return null;}const level=parseInt(contractMatch[1]);const suit=contractMatch[2];const declarer=contractMatch[3];const doubled=contractMatch[4]||'';// Basic data\nconst madeContract=currentDeal.result>=0;const isNS=declarer==='N'||declarer==='S';// Calculate distribution points\nconst distributionPoints=voids*3+singletons*2+longSuits;// Calculate HCP distribution\nconst totalPoints=40;// Total HCP in a deck\nconst declarerHCPPercentage=Math.round(totalHCP/totalPoints*100);const defenderHCPPercentage=100-declarerHCPPercentage;const hcpAdvantage=Math.abs(declarerHCPPercentage-50);const advantageSide=declarerHCPPercentage>50?\"declarer\":\"defender\";// Determine expected HCP for contract\nlet expectedHCP;if(level<=2){// Part scores\nexpectedHCP=21;}else if(level===3&&suit==='NT'){// 3NT\nexpectedHCP=25;}else if(level===4&&(suit==='♥'||suit==='♠')){// 4 major\nexpectedHCP=24;}else if(level===5&&(suit==='♣'||suit==='♦')){// 5 minor\nexpectedHCP=27;}else if(level===6){// Small slam\nexpectedHCP=30;}else if(level===7){// Grand slam\nexpectedHCP=32;}else{// Other levels - formula based on level\nexpectedHCP=21+level*1.5;}// Expected tricks calculations\nconst contractExpectedTricks=level+6;const handExpectedTricks=Math.min(13,6+Math.floor(totalHCP/3)+Math.floor(distributionPoints/4));// Calculate the raw score and steps for made contracts\nlet calculationSteps={};let nsPoints=0;let ewPoints=0;if(madeContract){// Step 1: Raw score calculation\nconst rawScore=(currentDeal.rawScore||0)/20;// Step 2: HCP Adjustment\nconst hcpAdjustment=(totalHCP-expectedHCP)*0.75;const afterHcpAdjustment=totalHCP>expectedHCP?rawScore-hcpAdjustment:rawScore+Math.abs(hcpAdjustment);// Step 3: Performance Assessment\nconst performanceVariance=currentDeal.result||0;let afterPerformanceAssessment=afterHcpAdjustment;if(performanceVariance>0){// Add points for overtricks\nafterPerformanceAssessment+=performanceVariance*1.5;}// Step 4: Contract Type Adjustment\nlet contractTypeAdjustment=0;let contractTypeDescription=\"\";// Check if it's a game contract\nconst isGameContract=level===3&&suit==='NT'||level===4&&(suit==='♥'||suit==='♠')||level===5&&(suit==='♣'||suit==='♦')||level>=6;if(isGameContract){contractTypeAdjustment+=2;contractTypeDescription=\"(Game)\";}if(level===6){contractTypeAdjustment+=4;contractTypeDescription=\"(Small Slam)\";}else if(level===7){contractTypeAdjustment+=6;contractTypeDescription=\"(Grand Slam)\";}if(suit==='NT'){contractTypeAdjustment+=1;contractTypeDescription+=\" (NT)\";}const afterContractAdjustments=afterPerformanceAssessment+contractTypeAdjustment;// Step 5: Distribution Adjustment\nlet distributionAdjustment=0;if(suit!=='NT'){if(distributionPoints>=7){distributionAdjustment=-3;}else if(distributionPoints>=5){distributionAdjustment=-2;}else if(distributionPoints>=3){distributionAdjustment=-1;}}// Step 6: Calculate Defender Reward\nlet defenderReward=0;if(handExpectedTricks>contractExpectedTricks&&currentDeal.result<handExpectedTricks-contractExpectedTricks){// Defender reward calculation\nconst trickDifference=handExpectedTricks-(contractExpectedTricks+currentDeal.result);defenderReward=trickDifference*2;// Extra reward if defending at disadvantage\nif(advantageSide===\"declarer\"){const extraReward=Math.min(3,hcpAdvantage/10);defenderReward+=extraReward;}}// Final declarer points calculation\nconst declarerPoints=Math.max(1,Math.round(afterContractAdjustments+distributionAdjustment));// Final defender points\nconst defenderPoints=Math.round(defenderReward);// Assign points to the correct side\nif(isNS){nsPoints=declarerPoints;ewPoints=defenderPoints;}else{nsPoints=defenderPoints;ewPoints=declarerPoints;}// Store calculation steps for display\ncalculationSteps={rawScore,hcpAdjustment,afterHcpAdjustment,performanceVariance,afterPerformanceAssessment,contractTypeAdjustment,contractTypeDescription,afterContractAdjustments,distributionAdjustment,defenderReward};}else{// Calculation for defeated contracts\n// Base penalty\nconst basePenalty=Math.abs(currentDeal.rawScore||0)/10;// Contract level penalties\nlet levelPenalties=0;// Check if it's a game contract\nconst isGameContract=level===3&&suit==='NT'||level===4&&(suit==='♥'||suit==='♠')||level===5&&(suit==='♣'||suit==='♦')||level>=6;if(isGameContract){levelPenalties+=3;}if(level===6){levelPenalties+=5;}else if(level===7){levelPenalties+=7;}// Defender performance bonus\nlet performanceBonus=0;if(declarerHCPPercentage>60){performanceBonus+=(declarerHCPPercentage-50)/5;}if(Math.abs(currentDeal.result)>=2){performanceBonus+=2;if(Math.abs(currentDeal.result)>=3){performanceBonus+=3;}}// Declarer consolation\nlet consolationPoints=0;if(declarerHCPPercentage<40){consolationPoints=(50-declarerHCPPercentage)/10;}// Calculate final points - FIXED: For defeated contracts, defenders get the points\nconst defenderPoints=Math.max(3,Math.round(basePenalty+levelPenalties+performanceBonus));const declarerPoints=Math.round(consolationPoints);// FIXED: Assign points to the correct side - defenders get the points for defeating the contract\nif(isNS){// Declarer is NS, so EW are defenders and get the points\newPoints=defenderPoints;nsPoints=declarerPoints;}else{// Declarer is EW, so NS are defenders and get the points\nnsPoints=defenderPoints;ewPoints=declarerPoints;}// Store calculation steps for defeated contracts\ncalculationSteps={basePenalty,levelPenalties,performanceBonus,consolationPoints};}// Return complete analysis data\nreturn{totalHCP,singletons,voids,longSuits,distributionPoints,declarerHCPPercentage,defenderHCPPercentage,hcpAdvantage,advantageSide,expectedHCP,contractExpectedTricks,handExpectedTricks,nsPoints,ewPoints,...calculationSteps};};// Handle save button click\nconst handleSave=()=>{const analysisData=calculateFinalAnalysis();if(analysisData){console.log('Calculated analysis data:',analysisData);onSaveAdjustment(analysisData);}else{alert('Error calculating score. Please check your inputs.');}};// Format contract for display\nconst formatContract=()=>{if(!currentDeal||!currentDeal.contract)return\"\";const contractMatch=currentDeal.contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);if(!contractMatch)return currentDeal.contract;const level=contractMatch[1];const suit=contractMatch[2];const declarer=contractMatch[3];const doubled=contractMatch[4]||\"\";return`${level}${suit} ${declarer}`;};// Format result for display\nconst formatResult=()=>{if(!currentDeal||currentDeal.result===null||currentDeal.result===undefined)return\"\";if(currentDeal.result>=0){return currentDeal.result>0?`Made +${currentDeal.result}`:\"Made exactly\";}else{return`Down ${Math.abs(currentDeal.result)}`;}};// Fixed styles for info button\nconst fixedInfoButtonStyle={backgroundColor:'#468bbf',color:'white',border:'none',padding:'8px 12px',borderRadius:'4px',fontSize:'14px',cursor:'pointer',position:'absolute',right:'15px',top:'0px',zIndex:10};return/*#__PURE__*/_jsxs(\"div\",{className:\"score-adjustment\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"main-title\",children:\"Bonus Bridge Score Adjustment\"}),/*#__PURE__*/_jsxs(\"div\",{className:`pause-notice ${isFlashing?'flashing':''}`,children:[\"Game Paused for Analysis\",/*#__PURE__*/_jsx(\"br\",{}),\"Declarer and Dummy, please show your cards to all players.\"]}),/*#__PURE__*/_jsx(\"div\",{style:{position:'relative',height:'40px',marginBottom:'10px'},children:/*#__PURE__*/_jsx(\"button\",{style:fixedInfoButtonStyle,onClick:handleShowExplanation,children:\"What is this?\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"points-guide\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Counting Guide:\"}),\" Add up the combined HCP (High Card Points) for Declarer + Dummy.\",/*#__PURE__*/_jsx(\"br\",{}),\"Ace = 4 points | King = 3 points | Queen = 2 points | Jack = 1 point\",/*#__PURE__*/_jsx(\"br\",{}),\"Also count distribution: Singletons, Voids, and Long Suits (6+ cards in one suit).\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"contract-info\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Contract: \",formatContract(),\" \",formatResult()]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Raw score: \",currentDeal.rawScore,\" points\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-sections\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Combined HCP (Declarer + Dummy)\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"numeric-input\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"decrement-btn\",onClick:()=>handleHCPChange(-1),disabled:totalHCP<=0,children:\"-\"}),/*#__PURE__*/_jsx(\"div\",{className:\"input-value\",children:totalHCP}),/*#__PURE__*/_jsx(\"button\",{className:\"increment-btn\",onClick:()=>handleHCPChange(1),disabled:totalHCP>=40,children:\"+\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Number of Singletons\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"numeric-input\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"decrement-btn\",onClick:()=>handleSingletonChange(-1),disabled:singletons<=0,children:\"-\"}),/*#__PURE__*/_jsx(\"div\",{className:\"input-value\",children:singletons}),/*#__PURE__*/_jsx(\"button\",{className:\"increment-btn\",onClick:()=>handleSingletonChange(1),disabled:singletons>=4,children:\"+\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Number of Voids\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"numeric-input\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"decrement-btn\",onClick:()=>handleVoidChange(-1),disabled:voids<=0,children:\"-\"}),/*#__PURE__*/_jsx(\"div\",{className:\"input-value\",children:voids}),/*#__PURE__*/_jsx(\"button\",{className:\"increment-btn\",onClick:()=>handleVoidChange(1),disabled:voids>=4,children:\"+\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Number of Long Suits (6+ cards)\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"numeric-input\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"decrement-btn\",onClick:()=>handleLongSuitChange(-1),disabled:longSuits<=0,children:\"-\"}),/*#__PURE__*/_jsx(\"div\",{className:\"input-value\",children:longSuits}),/*#__PURE__*/_jsx(\"button\",{className:\"increment-btn\",onClick:()=>handleLongSuitChange(1),disabled:longSuits>=4,children:\"+\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"action-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"cancel-btn\",onClick:onCancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:\"save-btn\",onClick:handleSave,children:\"Calculate Final Score\"})]}),showExplanation&&/*#__PURE__*/_jsx(BonusBridgeExplanation,{onClose:handleHideExplanation})]});};export default ScoreAdjustment;","map":{"version":3,"names":["React","useState","useEffect","BonusBridgeExplanation","jsx","_jsx","jsxs","_jsxs","ScoreAdjustment","_ref","currentDeal","onSaveAdjustment","onCancel","totalHCP","setTotalHCP","singletons","setSingletons","voids","setVoids","longSuits","setLongSuits","showExplanation","setShowExplanation","isFlashing","setIsFlashing","console","log","handAnalysis","flashInterval","setInterval","prev","clearInterval","handleHCPChange","increment","newValue","Math","min","max","handleSingletonChange","handleVoidChange","handleLongSuitChange","handleShowExplanation","handleHideExplanation","calculateFinalAnalysis","contractMatch","contract","match","error","level","parseInt","suit","declarer","doubled","madeContract","result","isNS","distributionPoints","totalPoints","declarerHCPPercentage","round","defenderHCPPercentage","hcpAdvantage","abs","advantageSide","expectedHCP","contractExpectedTricks","handExpectedTricks","floor","calculationSteps","nsPoints","ewPoints","rawScore","hcpAdjustment","afterHcpAdjustment","performanceVariance","afterPerformanceAssessment","contractTypeAdjustment","contractTypeDescription","isGameContract","afterContractAdjustments","distributionAdjustment","defenderReward","trickDifference","extraReward","declarerPoints","defenderPoints","basePenalty","levelPenalties","performanceBonus","consolationPoints","handleSave","analysisData","alert","formatContract","formatResult","undefined","fixedInfoButtonStyle","backgroundColor","color","border","padding","borderRadius","fontSize","cursor","position","right","top","zIndex","className","children","style","height","marginBottom","onClick","disabled","onClose"],"sources":["C:/Users/mikec/MikesBridge/bonusbridge/src/components/ScoreAdjustment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport BonusBridgeExplanation from './BonusBridgeExplanation';\r\nimport './ScoreAdjustment.css';\r\n\r\nconst ScoreAdjustment = ({ currentDeal, onSaveAdjustment, onCancel }) => {\r\n  // State for form inputs\r\n  const [totalHCP, setTotalHCP] = useState(20);\r\n  const [singletons, setSingletons] = useState(0);\r\n  const [voids, setVoids] = useState(0);\r\n  const [longSuits, setLongSuits] = useState(0);\r\n  // State for showing explanation\r\n  const [showExplanation, setShowExplanation] = useState(false);\r\n  // State for flashing effect\r\n  const [isFlashing, setIsFlashing] = useState(true);\r\n  \r\n  // Effect to initialize with default values based on current deal\r\n  useEffect(() => {\r\n    if (currentDeal) {\r\n      console.log('ScoreAdjustment: Current deal loaded', currentDeal);\r\n      // If we have previous analysis data, use it\r\n      if (currentDeal.handAnalysis) {\r\n        setTotalHCP(currentDeal.handAnalysis.totalHCP || 20);\r\n        setSingletons(currentDeal.handAnalysis.singletons || 0);\r\n        setVoids(currentDeal.handAnalysis.voids || 0);\r\n        setLongSuits(currentDeal.handAnalysis.longSuits || 0);\r\n      }\r\n    }\r\n  }, [currentDeal]);\r\n  \r\n  // Create flashing effect for the pause notice\r\n  useEffect(() => {\r\n    const flashInterval = setInterval(() => {\r\n      setIsFlashing(prev => !prev);\r\n    }, 800); // Toggle every 800ms\r\n    \r\n    return () => clearInterval(flashInterval);\r\n  }, []);\r\n  \r\n  // Validate and handle input changes\r\n  const handleHCPChange = (increment) => {\r\n    setTotalHCP(prev => {\r\n      const newValue = prev + increment;\r\n      return Math.min(Math.max(0, newValue), 40); // Limit between 0-40\r\n    });\r\n  };\r\n  \r\n  const handleSingletonChange = (increment) => {\r\n    setSingletons(prev => {\r\n      const newValue = prev + increment;\r\n      return Math.min(Math.max(0, newValue), 4); // Max 4 singletons possible\r\n    });\r\n  };\r\n  \r\n  const handleVoidChange = (increment) => {\r\n    setVoids(prev => {\r\n      const newValue = prev + increment;\r\n      return Math.min(Math.max(0, newValue), 4); // Max 4 voids possible\r\n    });\r\n  };\r\n  \r\n  const handleLongSuitChange = (increment) => {\r\n    setLongSuits(prev => {\r\n      const newValue = prev + increment;\r\n      return Math.min(Math.max(0, newValue), 4); // Limit for practical purposes\r\n    });\r\n  };\r\n\r\n  // Handler for showing explanation\r\n  const handleShowExplanation = () => {\r\n    setShowExplanation(true);\r\n  };\r\n  \r\n  // Handler for hiding explanation\r\n  const handleHideExplanation = () => {\r\n    setShowExplanation(false);\r\n  };\r\n  \r\n  // Calculate and prepare final analysis data\r\n  const calculateFinalAnalysis = () => {\r\n    // Extract contract details\r\n    const contractMatch = currentDeal.contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\r\n    if (!contractMatch) {\r\n      console.error('Unable to parse contract:', currentDeal.contract);\r\n      return null;\r\n    }\r\n    \r\n    const level = parseInt(contractMatch[1]);\r\n    const suit = contractMatch[2];\r\n    const declarer = contractMatch[3];\r\n    const doubled = contractMatch[4] || '';\r\n    \r\n    // Basic data\r\n    const madeContract = currentDeal.result >= 0;\r\n    const isNS = declarer === 'N' || declarer === 'S';\r\n    \r\n    // Calculate distribution points\r\n    const distributionPoints = (voids * 3) + (singletons * 2) + longSuits;\r\n    \r\n    // Calculate HCP distribution\r\n    const totalPoints = 40; // Total HCP in a deck\r\n    const declarerHCPPercentage = Math.round((totalHCP / totalPoints) * 100);\r\n    const defenderHCPPercentage = 100 - declarerHCPPercentage;\r\n    const hcpAdvantage = Math.abs(declarerHCPPercentage - 50);\r\n    const advantageSide = declarerHCPPercentage > 50 ? \"declarer\" : \"defender\";\r\n    \r\n    // Determine expected HCP for contract\r\n    let expectedHCP;\r\n    if (level <= 2) {\r\n      // Part scores\r\n      expectedHCP = 21;\r\n    } else if (level === 3 && suit === 'NT') {\r\n      // 3NT\r\n      expectedHCP = 25;\r\n    } else if (level === 4 && (suit === '♥' || suit === '♠')) {\r\n      // 4 major\r\n      expectedHCP = 24;\r\n    } else if (level === 5 && (suit === '♣' || suit === '♦')) {\r\n      // 5 minor\r\n      expectedHCP = 27;\r\n    } else if (level === 6) {\r\n      // Small slam\r\n      expectedHCP = 30;\r\n    } else if (level === 7) {\r\n      // Grand slam\r\n      expectedHCP = 32;\r\n    } else {\r\n      // Other levels - formula based on level\r\n      expectedHCP = 21 + (level * 1.5);\r\n    }\r\n    \r\n    // Expected tricks calculations\r\n    const contractExpectedTricks = level + 6;\r\n    const handExpectedTricks = Math.min(13, 6 + Math.floor(totalHCP / 3) + Math.floor(distributionPoints / 4));\r\n    \r\n    // Calculate the raw score and steps for made contracts\r\n    let calculationSteps = {};\r\n    let nsPoints = 0;\r\n    let ewPoints = 0;\r\n    \r\n    if (madeContract) {\r\n      // Step 1: Raw score calculation\r\n      const rawScore = (currentDeal.rawScore || 0) / 20;\r\n      \r\n      // Step 2: HCP Adjustment\r\n      const hcpAdjustment = (totalHCP - expectedHCP) * 0.75;\r\n      const afterHcpAdjustment = totalHCP > expectedHCP \r\n        ? rawScore - hcpAdjustment \r\n        : rawScore + Math.abs(hcpAdjustment);\r\n      \r\n      // Step 3: Performance Assessment\r\n      const performanceVariance = currentDeal.result || 0;\r\n      let afterPerformanceAssessment = afterHcpAdjustment;\r\n      \r\n      if (performanceVariance > 0) {\r\n        // Add points for overtricks\r\n        afterPerformanceAssessment += (performanceVariance * 1.5);\r\n      }\r\n      \r\n      // Step 4: Contract Type Adjustment\r\n      let contractTypeAdjustment = 0;\r\n      let contractTypeDescription = \"\";\r\n      \r\n      // Check if it's a game contract\r\n      const isGameContract = \r\n        (level === 3 && suit === 'NT') ||\r\n        (level === 4 && (suit === '♥' || suit === '♠')) ||\r\n        (level === 5 && (suit === '♣' || suit === '♦')) ||\r\n        level >= 6;\r\n      \r\n      if (isGameContract) {\r\n        contractTypeAdjustment += 2;\r\n        contractTypeDescription = \"(Game)\";\r\n      }\r\n      \r\n      if (level === 6) {\r\n        contractTypeAdjustment += 4;\r\n        contractTypeDescription = \"(Small Slam)\";\r\n      } else if (level === 7) {\r\n        contractTypeAdjustment += 6;\r\n        contractTypeDescription = \"(Grand Slam)\";\r\n      }\r\n      \r\n      if (suit === 'NT') {\r\n        contractTypeAdjustment += 1;\r\n        contractTypeDescription += \" (NT)\";\r\n      }\r\n      \r\n      const afterContractAdjustments = afterPerformanceAssessment + contractTypeAdjustment;\r\n      \r\n      // Step 5: Distribution Adjustment\r\n      let distributionAdjustment = 0;\r\n      if (suit !== 'NT') {\r\n        if (distributionPoints >= 7) {\r\n          distributionAdjustment = -3;\r\n        } else if (distributionPoints >= 5) {\r\n          distributionAdjustment = -2;\r\n        } else if (distributionPoints >= 3) {\r\n          distributionAdjustment = -1;\r\n        }\r\n      }\r\n      \r\n      // Step 6: Calculate Defender Reward\r\n      let defenderReward = 0;\r\n      if (handExpectedTricks > contractExpectedTricks && currentDeal.result < (handExpectedTricks - contractExpectedTricks)) {\r\n        // Defender reward calculation\r\n        const trickDifference = handExpectedTricks - (contractExpectedTricks + currentDeal.result);\r\n        defenderReward = trickDifference * 2;\r\n        \r\n        // Extra reward if defending at disadvantage\r\n        if (advantageSide === \"declarer\") {\r\n          const extraReward = Math.min(3, hcpAdvantage / 10);\r\n          defenderReward += extraReward;\r\n        }\r\n      }\r\n      \r\n      // Final declarer points calculation\r\n      const declarerPoints = Math.max(1, Math.round(afterContractAdjustments + distributionAdjustment));\r\n      \r\n      // Final defender points\r\n      const defenderPoints = Math.round(defenderReward);\r\n      \r\n      // Assign points to the correct side\r\n      if (isNS) {\r\n        nsPoints = declarerPoints;\r\n        ewPoints = defenderPoints;\r\n      } else {\r\n        nsPoints = defenderPoints;\r\n        ewPoints = declarerPoints;\r\n      }\r\n      \r\n      // Store calculation steps for display\r\n      calculationSteps = {\r\n        rawScore,\r\n        hcpAdjustment,\r\n        afterHcpAdjustment,\r\n        performanceVariance,\r\n        afterPerformanceAssessment,\r\n        contractTypeAdjustment,\r\n        contractTypeDescription,\r\n        afterContractAdjustments,\r\n        distributionAdjustment,\r\n        defenderReward\r\n      };\r\n      \r\n    } else {\r\n      // Calculation for defeated contracts\r\n      // Base penalty\r\n      const basePenalty = Math.abs(currentDeal.rawScore || 0) / 10;\r\n      \r\n      // Contract level penalties\r\n      let levelPenalties = 0;\r\n      \r\n      // Check if it's a game contract\r\n      const isGameContract = \r\n        (level === 3 && suit === 'NT') ||\r\n        (level === 4 && (suit === '♥' || suit === '♠')) ||\r\n        (level === 5 && (suit === '♣' || suit === '♦')) ||\r\n        level >= 6;\r\n      \r\n      if (isGameContract) {\r\n        levelPenalties += 3;\r\n      }\r\n      \r\n      if (level === 6) {\r\n        levelPenalties += 5;\r\n      } else if (level === 7) {\r\n        levelPenalties += 7;\r\n      }\r\n      \r\n      // Defender performance bonus\r\n      let performanceBonus = 0;\r\n      \r\n      if (declarerHCPPercentage > 60) {\r\n        performanceBonus += (declarerHCPPercentage - 50) / 5;\r\n      }\r\n      \r\n      if (Math.abs(currentDeal.result) >= 2) {\r\n        performanceBonus += 2;\r\n        \r\n        if (Math.abs(currentDeal.result) >= 3) {\r\n          performanceBonus += 3;\r\n        }\r\n      }\r\n      \r\n      // Declarer consolation\r\n      let consolationPoints = 0;\r\n      \r\n      if (declarerHCPPercentage < 40) {\r\n        consolationPoints = (50 - declarerHCPPercentage) / 10;\r\n      }\r\n      \r\n      // Calculate final points - FIXED: For defeated contracts, defenders get the points\r\n      const defenderPoints = Math.max(3, Math.round(basePenalty + levelPenalties + performanceBonus));\r\n      const declarerPoints = Math.round(consolationPoints);\r\n      \r\n      // FIXED: Assign points to the correct side - defenders get the points for defeating the contract\r\n      if (isNS) {\r\n        // Declarer is NS, so EW are defenders and get the points\r\n        ewPoints = defenderPoints;\r\n        nsPoints = declarerPoints;\r\n      } else {\r\n        // Declarer is EW, so NS are defenders and get the points\r\n        nsPoints = defenderPoints;\r\n        ewPoints = declarerPoints;\r\n      }\r\n      \r\n      // Store calculation steps for defeated contracts\r\n      calculationSteps = {\r\n        basePenalty,\r\n        levelPenalties,\r\n        performanceBonus,\r\n        consolationPoints\r\n      };\r\n    }\r\n    \r\n    // Return complete analysis data\r\n    return {\r\n      totalHCP,\r\n      singletons,\r\n      voids,\r\n      longSuits,\r\n      distributionPoints,\r\n      declarerHCPPercentage,\r\n      defenderHCPPercentage,\r\n      hcpAdvantage,\r\n      advantageSide,\r\n      expectedHCP,\r\n      contractExpectedTricks,\r\n      handExpectedTricks,\r\n      nsPoints,\r\n      ewPoints,\r\n      ...calculationSteps\r\n    };\r\n  };\r\n  \r\n  // Handle save button click\r\n  const handleSave = () => {\r\n    const analysisData = calculateFinalAnalysis();\r\n    if (analysisData) {\r\n      console.log('Calculated analysis data:', analysisData);\r\n      onSaveAdjustment(analysisData);\r\n    } else {\r\n      alert('Error calculating score. Please check your inputs.');\r\n    }\r\n  };\r\n  \r\n  // Format contract for display\r\n  const formatContract = () => {\r\n    if (!currentDeal || !currentDeal.contract) return \"\";\r\n    \r\n    const contractMatch = currentDeal.contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\r\n    if (!contractMatch) return currentDeal.contract;\r\n    \r\n    const level = contractMatch[1];\r\n    const suit = contractMatch[2];\r\n    const declarer = contractMatch[3];\r\n    const doubled = contractMatch[4] || \"\";\r\n    \r\n    return `${level}${suit} ${declarer}`;\r\n  };\r\n  \r\n  // Format result for display\r\n  const formatResult = () => {\r\n    if (!currentDeal || currentDeal.result === null || currentDeal.result === undefined) return \"\";\r\n    \r\n    if (currentDeal.result >= 0) {\r\n      return currentDeal.result > 0 ? `Made +${currentDeal.result}` : \"Made exactly\";\r\n    } else {\r\n      return `Down ${Math.abs(currentDeal.result)}`;\r\n    }\r\n  };\r\n  \r\n  // Fixed styles for info button\r\n  const fixedInfoButtonStyle = {\r\n    backgroundColor: '#468bbf',\r\n    color: 'white',\r\n    border: 'none',\r\n    padding: '8px 12px',\r\n    borderRadius: '4px',\r\n    fontSize: '14px',\r\n    cursor: 'pointer',\r\n    position: 'absolute',\r\n    right: '15px',\r\n    top: '0px',\r\n    zIndex: 10\r\n  };\r\n  \r\n  return (\r\n    <div className=\"score-adjustment\">\r\n      <h1 className=\"main-title\">Bonus Bridge Score Adjustment</h1>\r\n      \r\n      <div className={`pause-notice ${isFlashing ? 'flashing' : ''}`}>\r\n        Game Paused for Analysis\r\n        <br />\r\n        Declarer and Dummy, please show your cards to all players.\r\n      </div>\r\n      \r\n      <div style={{ position: 'relative', height: '40px', marginBottom: '10px' }}>\r\n        <button \r\n          style={fixedInfoButtonStyle}\r\n          onClick={handleShowExplanation}\r\n        >\r\n          What is this?\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"points-guide\">\r\n        <strong>Counting Guide:</strong> Add up the combined HCP (High Card Points) for Declarer + Dummy.\r\n        <br />\r\n        Ace = 4 points | King = 3 points | Queen = 2 points | Jack = 1 point\r\n        <br />\r\n        Also count distribution: Singletons, Voids, and Long Suits (6+ cards in one suit).\r\n      </div>\r\n      \r\n      <div className=\"contract-info\">\r\n        <h3>\r\n          Contract: {formatContract()} {formatResult()}\r\n        </h3>\r\n        <p>Raw score: {currentDeal.rawScore} points</p>\r\n      </div>\r\n      \r\n      <div className=\"input-sections\">\r\n        <div className=\"input-section\">\r\n          <h3>Combined HCP (Declarer + Dummy)</h3>\r\n          <div className=\"numeric-input\">\r\n            <button \r\n              className=\"decrement-btn\"\r\n              onClick={() => handleHCPChange(-1)}\r\n              disabled={totalHCP <= 0}\r\n            >\r\n              -\r\n            </button>\r\n            <div className=\"input-value\">{totalHCP}</div>\r\n            <button \r\n              className=\"increment-btn\"\r\n              onClick={() => handleHCPChange(1)}\r\n              disabled={totalHCP >= 40}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"input-section\">\r\n          <h3>Number of Singletons</h3>\r\n          <div className=\"numeric-input\">\r\n            <button \r\n              className=\"decrement-btn\"\r\n              onClick={() => handleSingletonChange(-1)}\r\n              disabled={singletons <= 0}\r\n            >\r\n              -\r\n            </button>\r\n            <div className=\"input-value\">{singletons}</div>\r\n            <button \r\n              className=\"increment-btn\"\r\n              onClick={() => handleSingletonChange(1)}\r\n              disabled={singletons >= 4}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"input-section\">\r\n          <h3>Number of Voids</h3>\r\n          <div className=\"numeric-input\">\r\n            <button \r\n              className=\"decrement-btn\"\r\n              onClick={() => handleVoidChange(-1)}\r\n              disabled={voids <= 0}\r\n            >\r\n              -\r\n            </button>\r\n            <div className=\"input-value\">{voids}</div>\r\n            <button \r\n              className=\"increment-btn\"\r\n              onClick={() => handleVoidChange(1)}\r\n              disabled={voids >= 4}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"input-section\">\r\n          <h3>Number of Long Suits (6+ cards)</h3>\r\n          <div className=\"numeric-input\">\r\n            <button \r\n              className=\"decrement-btn\"\r\n              onClick={() => handleLongSuitChange(-1)}\r\n              disabled={longSuits <= 0}\r\n            >\r\n              -\r\n            </button>\r\n            <div className=\"input-value\">{longSuits}</div>\r\n            <button \r\n              className=\"increment-btn\"\r\n              onClick={() => handleLongSuitChange(1)}\r\n              disabled={longSuits >= 4}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"action-buttons\">\r\n        <button \r\n          className=\"cancel-btn\"\r\n          onClick={onCancel}\r\n        >\r\n          Cancel\r\n        </button>\r\n        \r\n        <button \r\n          className=\"save-btn\"\r\n          onClick={handleSave}\r\n        >\r\n          Calculate Final Score\r\n        </button>\r\n      </div>\r\n      \r\n      {showExplanation && (\r\n        <BonusBridgeExplanation onClose={handleHideExplanation} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScoreAdjustment;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,sBAAsB,KAAM,0BAA0B,CAC7D,MAAO,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/B,KAAM,CAAAC,eAAe,CAAGC,IAAA,EAAiD,IAAhD,CAAEC,WAAW,CAAEC,gBAAgB,CAAEC,QAAS,CAAC,CAAAH,IAAA,CAClE;AACA,KAAM,CAACI,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACc,UAAU,CAAEC,aAAa,CAAC,CAAGf,QAAQ,CAAC,CAAC,CAAC,CAC/C,KAAM,CAACgB,KAAK,CAAEC,QAAQ,CAAC,CAAGjB,QAAQ,CAAC,CAAC,CAAC,CACrC,KAAM,CAACkB,SAAS,CAAEC,YAAY,CAAC,CAAGnB,QAAQ,CAAC,CAAC,CAAC,CAC7C;AACA,KAAM,CAACoB,eAAe,CAAEC,kBAAkB,CAAC,CAAGrB,QAAQ,CAAC,KAAK,CAAC,CAC7D;AACA,KAAM,CAACsB,UAAU,CAAEC,aAAa,CAAC,CAAGvB,QAAQ,CAAC,IAAI,CAAC,CAElD;AACAC,SAAS,CAAC,IAAM,CACd,GAAIQ,WAAW,CAAE,CACfe,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAEhB,WAAW,CAAC,CAChE;AACA,GAAIA,WAAW,CAACiB,YAAY,CAAE,CAC5Bb,WAAW,CAACJ,WAAW,CAACiB,YAAY,CAACd,QAAQ,EAAI,EAAE,CAAC,CACpDG,aAAa,CAACN,WAAW,CAACiB,YAAY,CAACZ,UAAU,EAAI,CAAC,CAAC,CACvDG,QAAQ,CAACR,WAAW,CAACiB,YAAY,CAACV,KAAK,EAAI,CAAC,CAAC,CAC7CG,YAAY,CAACV,WAAW,CAACiB,YAAY,CAACR,SAAS,EAAI,CAAC,CAAC,CACvD,CACF,CACF,CAAC,CAAE,CAACT,WAAW,CAAC,CAAC,CAEjB;AACAR,SAAS,CAAC,IAAM,CACd,KAAM,CAAA0B,aAAa,CAAGC,WAAW,CAAC,IAAM,CACtCL,aAAa,CAACM,IAAI,EAAI,CAACA,IAAI,CAAC,CAC9B,CAAC,CAAE,GAAG,CAAC,CAAE;AAET,MAAO,IAAMC,aAAa,CAACH,aAAa,CAAC,CAC3C,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAI,eAAe,CAAIC,SAAS,EAAK,CACrCnB,WAAW,CAACgB,IAAI,EAAI,CAClB,KAAM,CAAAI,QAAQ,CAAGJ,IAAI,CAAGG,SAAS,CACjC,MAAO,CAAAE,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAAC,CAAC,CAAEH,QAAQ,CAAC,CAAE,EAAE,CAAC,CAAE;AAC9C,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAI,qBAAqB,CAAIL,SAAS,EAAK,CAC3CjB,aAAa,CAACc,IAAI,EAAI,CACpB,KAAM,CAAAI,QAAQ,CAAGJ,IAAI,CAAGG,SAAS,CACjC,MAAO,CAAAE,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAAC,CAAC,CAAEH,QAAQ,CAAC,CAAE,CAAC,CAAC,CAAE;AAC7C,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAK,gBAAgB,CAAIN,SAAS,EAAK,CACtCf,QAAQ,CAACY,IAAI,EAAI,CACf,KAAM,CAAAI,QAAQ,CAAGJ,IAAI,CAAGG,SAAS,CACjC,MAAO,CAAAE,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAAC,CAAC,CAAEH,QAAQ,CAAC,CAAE,CAAC,CAAC,CAAE;AAC7C,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAM,oBAAoB,CAAIP,SAAS,EAAK,CAC1Cb,YAAY,CAACU,IAAI,EAAI,CACnB,KAAM,CAAAI,QAAQ,CAAGJ,IAAI,CAAGG,SAAS,CACjC,MAAO,CAAAE,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAAC,CAAC,CAAEH,QAAQ,CAAC,CAAE,CAAC,CAAC,CAAE;AAC7C,CAAC,CAAC,CACJ,CAAC,CAED;AACA,KAAM,CAAAO,qBAAqB,CAAGA,CAAA,GAAM,CAClCnB,kBAAkB,CAAC,IAAI,CAAC,CAC1B,CAAC,CAED;AACA,KAAM,CAAAoB,qBAAqB,CAAGA,CAAA,GAAM,CAClCpB,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CAAC,CAED;AACA,KAAM,CAAAqB,sBAAsB,CAAGA,CAAA,GAAM,CACnC;AACA,KAAM,CAAAC,aAAa,CAAGlC,WAAW,CAACmC,QAAQ,CAACC,KAAK,CAAC,oCAAoC,CAAC,CACtF,GAAI,CAACF,aAAa,CAAE,CAClBnB,OAAO,CAACsB,KAAK,CAAC,2BAA2B,CAAErC,WAAW,CAACmC,QAAQ,CAAC,CAChE,MAAO,KAAI,CACb,CAEA,KAAM,CAAAG,KAAK,CAAGC,QAAQ,CAACL,aAAa,CAAC,CAAC,CAAC,CAAC,CACxC,KAAM,CAAAM,IAAI,CAAGN,aAAa,CAAC,CAAC,CAAC,CAC7B,KAAM,CAAAO,QAAQ,CAAGP,aAAa,CAAC,CAAC,CAAC,CACjC,KAAM,CAAAQ,OAAO,CAAGR,aAAa,CAAC,CAAC,CAAC,EAAI,EAAE,CAEtC;AACA,KAAM,CAAAS,YAAY,CAAG3C,WAAW,CAAC4C,MAAM,EAAI,CAAC,CAC5C,KAAM,CAAAC,IAAI,CAAGJ,QAAQ,GAAK,GAAG,EAAIA,QAAQ,GAAK,GAAG,CAEjD;AACA,KAAM,CAAAK,kBAAkB,CAAIvC,KAAK,CAAG,CAAC,CAAKF,UAAU,CAAG,CAAE,CAAGI,SAAS,CAErE;AACA,KAAM,CAAAsC,WAAW,CAAG,EAAE,CAAE;AACxB,KAAM,CAAAC,qBAAqB,CAAGvB,IAAI,CAACwB,KAAK,CAAE9C,QAAQ,CAAG4C,WAAW,CAAI,GAAG,CAAC,CACxE,KAAM,CAAAG,qBAAqB,CAAG,GAAG,CAAGF,qBAAqB,CACzD,KAAM,CAAAG,YAAY,CAAG1B,IAAI,CAAC2B,GAAG,CAACJ,qBAAqB,CAAG,EAAE,CAAC,CACzD,KAAM,CAAAK,aAAa,CAAGL,qBAAqB,CAAG,EAAE,CAAG,UAAU,CAAG,UAAU,CAE1E;AACA,GAAI,CAAAM,WAAW,CACf,GAAIhB,KAAK,EAAI,CAAC,CAAE,CACd;AACAgB,WAAW,CAAG,EAAE,CAClB,CAAC,IAAM,IAAIhB,KAAK,GAAK,CAAC,EAAIE,IAAI,GAAK,IAAI,CAAE,CACvC;AACAc,WAAW,CAAG,EAAE,CAClB,CAAC,IAAM,IAAIhB,KAAK,GAAK,CAAC,GAAKE,IAAI,GAAK,GAAG,EAAIA,IAAI,GAAK,GAAG,CAAC,CAAE,CACxD;AACAc,WAAW,CAAG,EAAE,CAClB,CAAC,IAAM,IAAIhB,KAAK,GAAK,CAAC,GAAKE,IAAI,GAAK,GAAG,EAAIA,IAAI,GAAK,GAAG,CAAC,CAAE,CACxD;AACAc,WAAW,CAAG,EAAE,CAClB,CAAC,IAAM,IAAIhB,KAAK,GAAK,CAAC,CAAE,CACtB;AACAgB,WAAW,CAAG,EAAE,CAClB,CAAC,IAAM,IAAIhB,KAAK,GAAK,CAAC,CAAE,CACtB;AACAgB,WAAW,CAAG,EAAE,CAClB,CAAC,IAAM,CACL;AACAA,WAAW,CAAG,EAAE,CAAIhB,KAAK,CAAG,GAAI,CAClC,CAEA;AACA,KAAM,CAAAiB,sBAAsB,CAAGjB,KAAK,CAAG,CAAC,CACxC,KAAM,CAAAkB,kBAAkB,CAAG/B,IAAI,CAACC,GAAG,CAAC,EAAE,CAAE,CAAC,CAAGD,IAAI,CAACgC,KAAK,CAACtD,QAAQ,CAAG,CAAC,CAAC,CAAGsB,IAAI,CAACgC,KAAK,CAACX,kBAAkB,CAAG,CAAC,CAAC,CAAC,CAE1G;AACA,GAAI,CAAAY,gBAAgB,CAAG,CAAC,CAAC,CACzB,GAAI,CAAAC,QAAQ,CAAG,CAAC,CAChB,GAAI,CAAAC,QAAQ,CAAG,CAAC,CAEhB,GAAIjB,YAAY,CAAE,CAChB;AACA,KAAM,CAAAkB,QAAQ,CAAG,CAAC7D,WAAW,CAAC6D,QAAQ,EAAI,CAAC,EAAI,EAAE,CAEjD;AACA,KAAM,CAAAC,aAAa,CAAG,CAAC3D,QAAQ,CAAGmD,WAAW,EAAI,IAAI,CACrD,KAAM,CAAAS,kBAAkB,CAAG5D,QAAQ,CAAGmD,WAAW,CAC7CO,QAAQ,CAAGC,aAAa,CACxBD,QAAQ,CAAGpC,IAAI,CAAC2B,GAAG,CAACU,aAAa,CAAC,CAEtC;AACA,KAAM,CAAAE,mBAAmB,CAAGhE,WAAW,CAAC4C,MAAM,EAAI,CAAC,CACnD,GAAI,CAAAqB,0BAA0B,CAAGF,kBAAkB,CAEnD,GAAIC,mBAAmB,CAAG,CAAC,CAAE,CAC3B;AACAC,0BAA0B,EAAKD,mBAAmB,CAAG,GAAI,CAC3D,CAEA;AACA,GAAI,CAAAE,sBAAsB,CAAG,CAAC,CAC9B,GAAI,CAAAC,uBAAuB,CAAG,EAAE,CAEhC;AACA,KAAM,CAAAC,cAAc,CACjB9B,KAAK,GAAK,CAAC,EAAIE,IAAI,GAAK,IAAI,EAC5BF,KAAK,GAAK,CAAC,GAAKE,IAAI,GAAK,GAAG,EAAIA,IAAI,GAAK,GAAG,CAAE,EAC9CF,KAAK,GAAK,CAAC,GAAKE,IAAI,GAAK,GAAG,EAAIA,IAAI,GAAK,GAAG,CAAE,EAC/CF,KAAK,EAAI,CAAC,CAEZ,GAAI8B,cAAc,CAAE,CAClBF,sBAAsB,EAAI,CAAC,CAC3BC,uBAAuB,CAAG,QAAQ,CACpC,CAEA,GAAI7B,KAAK,GAAK,CAAC,CAAE,CACf4B,sBAAsB,EAAI,CAAC,CAC3BC,uBAAuB,CAAG,cAAc,CAC1C,CAAC,IAAM,IAAI7B,KAAK,GAAK,CAAC,CAAE,CACtB4B,sBAAsB,EAAI,CAAC,CAC3BC,uBAAuB,CAAG,cAAc,CAC1C,CAEA,GAAI3B,IAAI,GAAK,IAAI,CAAE,CACjB0B,sBAAsB,EAAI,CAAC,CAC3BC,uBAAuB,EAAI,OAAO,CACpC,CAEA,KAAM,CAAAE,wBAAwB,CAAGJ,0BAA0B,CAAGC,sBAAsB,CAEpF;AACA,GAAI,CAAAI,sBAAsB,CAAG,CAAC,CAC9B,GAAI9B,IAAI,GAAK,IAAI,CAAE,CACjB,GAAIM,kBAAkB,EAAI,CAAC,CAAE,CAC3BwB,sBAAsB,CAAG,CAAC,CAAC,CAC7B,CAAC,IAAM,IAAIxB,kBAAkB,EAAI,CAAC,CAAE,CAClCwB,sBAAsB,CAAG,CAAC,CAAC,CAC7B,CAAC,IAAM,IAAIxB,kBAAkB,EAAI,CAAC,CAAE,CAClCwB,sBAAsB,CAAG,CAAC,CAAC,CAC7B,CACF,CAEA;AACA,GAAI,CAAAC,cAAc,CAAG,CAAC,CACtB,GAAIf,kBAAkB,CAAGD,sBAAsB,EAAIvD,WAAW,CAAC4C,MAAM,CAAIY,kBAAkB,CAAGD,sBAAuB,CAAE,CACrH;AACA,KAAM,CAAAiB,eAAe,CAAGhB,kBAAkB,EAAID,sBAAsB,CAAGvD,WAAW,CAAC4C,MAAM,CAAC,CAC1F2B,cAAc,CAAGC,eAAe,CAAG,CAAC,CAEpC;AACA,GAAInB,aAAa,GAAK,UAAU,CAAE,CAChC,KAAM,CAAAoB,WAAW,CAAGhD,IAAI,CAACC,GAAG,CAAC,CAAC,CAAEyB,YAAY,CAAG,EAAE,CAAC,CAClDoB,cAAc,EAAIE,WAAW,CAC/B,CACF,CAEA;AACA,KAAM,CAAAC,cAAc,CAAGjD,IAAI,CAACE,GAAG,CAAC,CAAC,CAAEF,IAAI,CAACwB,KAAK,CAACoB,wBAAwB,CAAGC,sBAAsB,CAAC,CAAC,CAEjG;AACA,KAAM,CAAAK,cAAc,CAAGlD,IAAI,CAACwB,KAAK,CAACsB,cAAc,CAAC,CAEjD;AACA,GAAI1B,IAAI,CAAE,CACRc,QAAQ,CAAGe,cAAc,CACzBd,QAAQ,CAAGe,cAAc,CAC3B,CAAC,IAAM,CACLhB,QAAQ,CAAGgB,cAAc,CACzBf,QAAQ,CAAGc,cAAc,CAC3B,CAEA;AACAhB,gBAAgB,CAAG,CACjBG,QAAQ,CACRC,aAAa,CACbC,kBAAkB,CAClBC,mBAAmB,CACnBC,0BAA0B,CAC1BC,sBAAsB,CACtBC,uBAAuB,CACvBE,wBAAwB,CACxBC,sBAAsB,CACtBC,cACF,CAAC,CAEH,CAAC,IAAM,CACL;AACA;AACA,KAAM,CAAAK,WAAW,CAAGnD,IAAI,CAAC2B,GAAG,CAACpD,WAAW,CAAC6D,QAAQ,EAAI,CAAC,CAAC,CAAG,EAAE,CAE5D;AACA,GAAI,CAAAgB,cAAc,CAAG,CAAC,CAEtB;AACA,KAAM,CAAAT,cAAc,CACjB9B,KAAK,GAAK,CAAC,EAAIE,IAAI,GAAK,IAAI,EAC5BF,KAAK,GAAK,CAAC,GAAKE,IAAI,GAAK,GAAG,EAAIA,IAAI,GAAK,GAAG,CAAE,EAC9CF,KAAK,GAAK,CAAC,GAAKE,IAAI,GAAK,GAAG,EAAIA,IAAI,GAAK,GAAG,CAAE,EAC/CF,KAAK,EAAI,CAAC,CAEZ,GAAI8B,cAAc,CAAE,CAClBS,cAAc,EAAI,CAAC,CACrB,CAEA,GAAIvC,KAAK,GAAK,CAAC,CAAE,CACfuC,cAAc,EAAI,CAAC,CACrB,CAAC,IAAM,IAAIvC,KAAK,GAAK,CAAC,CAAE,CACtBuC,cAAc,EAAI,CAAC,CACrB,CAEA;AACA,GAAI,CAAAC,gBAAgB,CAAG,CAAC,CAExB,GAAI9B,qBAAqB,CAAG,EAAE,CAAE,CAC9B8B,gBAAgB,EAAI,CAAC9B,qBAAqB,CAAG,EAAE,EAAI,CAAC,CACtD,CAEA,GAAIvB,IAAI,CAAC2B,GAAG,CAACpD,WAAW,CAAC4C,MAAM,CAAC,EAAI,CAAC,CAAE,CACrCkC,gBAAgB,EAAI,CAAC,CAErB,GAAIrD,IAAI,CAAC2B,GAAG,CAACpD,WAAW,CAAC4C,MAAM,CAAC,EAAI,CAAC,CAAE,CACrCkC,gBAAgB,EAAI,CAAC,CACvB,CACF,CAEA;AACA,GAAI,CAAAC,iBAAiB,CAAG,CAAC,CAEzB,GAAI/B,qBAAqB,CAAG,EAAE,CAAE,CAC9B+B,iBAAiB,CAAG,CAAC,EAAE,CAAG/B,qBAAqB,EAAI,EAAE,CACvD,CAEA;AACA,KAAM,CAAA2B,cAAc,CAAGlD,IAAI,CAACE,GAAG,CAAC,CAAC,CAAEF,IAAI,CAACwB,KAAK,CAAC2B,WAAW,CAAGC,cAAc,CAAGC,gBAAgB,CAAC,CAAC,CAC/F,KAAM,CAAAJ,cAAc,CAAGjD,IAAI,CAACwB,KAAK,CAAC8B,iBAAiB,CAAC,CAEpD;AACA,GAAIlC,IAAI,CAAE,CACR;AACAe,QAAQ,CAAGe,cAAc,CACzBhB,QAAQ,CAAGe,cAAc,CAC3B,CAAC,IAAM,CACL;AACAf,QAAQ,CAAGgB,cAAc,CACzBf,QAAQ,CAAGc,cAAc,CAC3B,CAEA;AACAhB,gBAAgB,CAAG,CACjBkB,WAAW,CACXC,cAAc,CACdC,gBAAgB,CAChBC,iBACF,CAAC,CACH,CAEA;AACA,MAAO,CACL5E,QAAQ,CACRE,UAAU,CACVE,KAAK,CACLE,SAAS,CACTqC,kBAAkB,CAClBE,qBAAqB,CACrBE,qBAAqB,CACrBC,YAAY,CACZE,aAAa,CACbC,WAAW,CACXC,sBAAsB,CACtBC,kBAAkB,CAClBG,QAAQ,CACRC,QAAQ,CACR,GAAGF,gBACL,CAAC,CACH,CAAC,CAED;AACA,KAAM,CAAAsB,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAAAC,YAAY,CAAGhD,sBAAsB,CAAC,CAAC,CAC7C,GAAIgD,YAAY,CAAE,CAChBlE,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAEiE,YAAY,CAAC,CACtDhF,gBAAgB,CAACgF,YAAY,CAAC,CAChC,CAAC,IAAM,CACLC,KAAK,CAAC,oDAAoD,CAAC,CAC7D,CACF,CAAC,CAED;AACA,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,GAAI,CAACnF,WAAW,EAAI,CAACA,WAAW,CAACmC,QAAQ,CAAE,MAAO,EAAE,CAEpD,KAAM,CAAAD,aAAa,CAAGlC,WAAW,CAACmC,QAAQ,CAACC,KAAK,CAAC,oCAAoC,CAAC,CACtF,GAAI,CAACF,aAAa,CAAE,MAAO,CAAAlC,WAAW,CAACmC,QAAQ,CAE/C,KAAM,CAAAG,KAAK,CAAGJ,aAAa,CAAC,CAAC,CAAC,CAC9B,KAAM,CAAAM,IAAI,CAAGN,aAAa,CAAC,CAAC,CAAC,CAC7B,KAAM,CAAAO,QAAQ,CAAGP,aAAa,CAAC,CAAC,CAAC,CACjC,KAAM,CAAAQ,OAAO,CAAGR,aAAa,CAAC,CAAC,CAAC,EAAI,EAAE,CAEtC,MAAO,GAAGI,KAAK,GAAGE,IAAI,IAAIC,QAAQ,EAAE,CACtC,CAAC,CAED;AACA,KAAM,CAAA2C,YAAY,CAAGA,CAAA,GAAM,CACzB,GAAI,CAACpF,WAAW,EAAIA,WAAW,CAAC4C,MAAM,GAAK,IAAI,EAAI5C,WAAW,CAAC4C,MAAM,GAAKyC,SAAS,CAAE,MAAO,EAAE,CAE9F,GAAIrF,WAAW,CAAC4C,MAAM,EAAI,CAAC,CAAE,CAC3B,MAAO,CAAA5C,WAAW,CAAC4C,MAAM,CAAG,CAAC,CAAG,SAAS5C,WAAW,CAAC4C,MAAM,EAAE,CAAG,cAAc,CAChF,CAAC,IAAM,CACL,MAAO,QAAQnB,IAAI,CAAC2B,GAAG,CAACpD,WAAW,CAAC4C,MAAM,CAAC,EAAE,CAC/C,CACF,CAAC,CAED;AACA,KAAM,CAAA0C,oBAAoB,CAAG,CAC3BC,eAAe,CAAE,SAAS,CAC1BC,KAAK,CAAE,OAAO,CACdC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,UAAU,CACnBC,YAAY,CAAE,KAAK,CACnBC,QAAQ,CAAE,MAAM,CAChBC,MAAM,CAAE,SAAS,CACjBC,QAAQ,CAAE,UAAU,CACpBC,KAAK,CAAE,MAAM,CACbC,GAAG,CAAE,KAAK,CACVC,MAAM,CAAE,EACV,CAAC,CAED,mBACEpG,KAAA,QAAKqG,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BxG,IAAA,OAAIuG,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,+BAA6B,CAAI,CAAC,cAE7DtG,KAAA,QAAKqG,SAAS,CAAE,gBAAgBrF,UAAU,CAAG,UAAU,CAAG,EAAE,EAAG,CAAAsF,QAAA,EAAC,0BAE9D,cAAAxG,IAAA,QAAK,CAAC,6DAER,EAAK,CAAC,cAENA,IAAA,QAAKyG,KAAK,CAAE,CAAEN,QAAQ,CAAE,UAAU,CAAEO,MAAM,CAAE,MAAM,CAAEC,YAAY,CAAE,MAAO,CAAE,CAAAH,QAAA,cACzExG,IAAA,WACEyG,KAAK,CAAEd,oBAAqB,CAC5BiB,OAAO,CAAExE,qBAAsB,CAAAoE,QAAA,CAChC,eAED,CAAQ,CAAC,CACN,CAAC,cAENtG,KAAA,QAAKqG,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BxG,IAAA,WAAAwG,QAAA,CAAQ,iBAAe,CAAQ,CAAC,oEAChC,cAAAxG,IAAA,QAAK,CAAC,uEAEN,cAAAA,IAAA,QAAK,CAAC,qFAER,EAAK,CAAC,cAENE,KAAA,QAAKqG,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BtG,KAAA,OAAAsG,QAAA,EAAI,YACQ,CAAChB,cAAc,CAAC,CAAC,CAAC,GAAC,CAACC,YAAY,CAAC,CAAC,EAC1C,CAAC,cACLvF,KAAA,MAAAsG,QAAA,EAAG,aAAW,CAACnG,WAAW,CAAC6D,QAAQ,CAAC,SAAO,EAAG,CAAC,EAC5C,CAAC,cAENhE,KAAA,QAAKqG,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BtG,KAAA,QAAKqG,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BxG,IAAA,OAAAwG,QAAA,CAAI,iCAA+B,CAAI,CAAC,cACxCtG,KAAA,QAAKqG,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BxG,IAAA,WACEuG,SAAS,CAAC,eAAe,CACzBK,OAAO,CAAEA,CAAA,GAAMjF,eAAe,CAAC,CAAC,CAAC,CAAE,CACnCkF,QAAQ,CAAErG,QAAQ,EAAI,CAAE,CAAAgG,QAAA,CACzB,GAED,CAAQ,CAAC,cACTxG,IAAA,QAAKuG,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAEhG,QAAQ,CAAM,CAAC,cAC7CR,IAAA,WACEuG,SAAS,CAAC,eAAe,CACzBK,OAAO,CAAEA,CAAA,GAAMjF,eAAe,CAAC,CAAC,CAAE,CAClCkF,QAAQ,CAAErG,QAAQ,EAAI,EAAG,CAAAgG,QAAA,CAC1B,GAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,cAENtG,KAAA,QAAKqG,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BxG,IAAA,OAAAwG,QAAA,CAAI,sBAAoB,CAAI,CAAC,cAC7BtG,KAAA,QAAKqG,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BxG,IAAA,WACEuG,SAAS,CAAC,eAAe,CACzBK,OAAO,CAAEA,CAAA,GAAM3E,qBAAqB,CAAC,CAAC,CAAC,CAAE,CACzC4E,QAAQ,CAAEnG,UAAU,EAAI,CAAE,CAAA8F,QAAA,CAC3B,GAED,CAAQ,CAAC,cACTxG,IAAA,QAAKuG,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAE9F,UAAU,CAAM,CAAC,cAC/CV,IAAA,WACEuG,SAAS,CAAC,eAAe,CACzBK,OAAO,CAAEA,CAAA,GAAM3E,qBAAqB,CAAC,CAAC,CAAE,CACxC4E,QAAQ,CAAEnG,UAAU,EAAI,CAAE,CAAA8F,QAAA,CAC3B,GAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,cAENtG,KAAA,QAAKqG,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BxG,IAAA,OAAAwG,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBtG,KAAA,QAAKqG,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BxG,IAAA,WACEuG,SAAS,CAAC,eAAe,CACzBK,OAAO,CAAEA,CAAA,GAAM1E,gBAAgB,CAAC,CAAC,CAAC,CAAE,CACpC2E,QAAQ,CAAEjG,KAAK,EAAI,CAAE,CAAA4F,QAAA,CACtB,GAED,CAAQ,CAAC,cACTxG,IAAA,QAAKuG,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAE5F,KAAK,CAAM,CAAC,cAC1CZ,IAAA,WACEuG,SAAS,CAAC,eAAe,CACzBK,OAAO,CAAEA,CAAA,GAAM1E,gBAAgB,CAAC,CAAC,CAAE,CACnC2E,QAAQ,CAAEjG,KAAK,EAAI,CAAE,CAAA4F,QAAA,CACtB,GAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,cAENtG,KAAA,QAAKqG,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BxG,IAAA,OAAAwG,QAAA,CAAI,iCAA+B,CAAI,CAAC,cACxCtG,KAAA,QAAKqG,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BxG,IAAA,WACEuG,SAAS,CAAC,eAAe,CACzBK,OAAO,CAAEA,CAAA,GAAMzE,oBAAoB,CAAC,CAAC,CAAC,CAAE,CACxC0E,QAAQ,CAAE/F,SAAS,EAAI,CAAE,CAAA0F,QAAA,CAC1B,GAED,CAAQ,CAAC,cACTxG,IAAA,QAAKuG,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAE1F,SAAS,CAAM,CAAC,cAC9Cd,IAAA,WACEuG,SAAS,CAAC,eAAe,CACzBK,OAAO,CAAEA,CAAA,GAAMzE,oBAAoB,CAAC,CAAC,CAAE,CACvC0E,QAAQ,CAAE/F,SAAS,EAAI,CAAE,CAAA0F,QAAA,CAC1B,GAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,EACH,CAAC,cAENtG,KAAA,QAAKqG,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BxG,IAAA,WACEuG,SAAS,CAAC,YAAY,CACtBK,OAAO,CAAErG,QAAS,CAAAiG,QAAA,CACnB,QAED,CAAQ,CAAC,cAETxG,IAAA,WACEuG,SAAS,CAAC,UAAU,CACpBK,OAAO,CAAEvB,UAAW,CAAAmB,QAAA,CACrB,uBAED,CAAQ,CAAC,EACN,CAAC,CAELxF,eAAe,eACdhB,IAAA,CAACF,sBAAsB,EAACgH,OAAO,CAAEzE,qBAAsB,CAAE,CAC1D,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAlC,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}