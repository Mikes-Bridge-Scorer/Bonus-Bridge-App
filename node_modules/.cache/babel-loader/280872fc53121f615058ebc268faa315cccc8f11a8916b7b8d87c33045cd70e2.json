{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikec\\\\MikesBridge\\\\bonusbridge\\\\src\\\\BridgeGameUI.js\";\n// Reset the game state when component mounts or when a new game starts\nuseEffect(() => {\n  if (gameState.dealNumber === 1) {\n    // Clear any previously selected inputs\n    updateCurrentDeal({\n      contract: '',\n      declarer: '',\n      result: null,\n      tricks: null\n    });\n  }\n}, [gameState.gameNumber]);\nimport React, { useState, useEffect } from 'react';\nimport ScoreTracking from './components/scoreTracking';\nimport ContractInput from './components/ContractInput';\nimport TrickInput from './components/TrickInput';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport { requestWakeLock, releaseWakeLock, isWakeLockSupported } from './utils/wakeLock';\nimport { vulnerabilityDescription, calculateBridgeScore, parseContract } from './utils/scoring';\nimport './global.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BridgeGameUI = ({\n  gameState,\n  updateCurrentDeal,\n  onNextDeal,\n  onNewGame,\n  setGameState\n}) => {\n  // Function to keep the device awake\n  const toggleKeepAwake = async () => {\n    const newAwakeState = !gameState.isAwake;\n\n    // Update state first for immediate UI feedback\n    setGameState(prev => ({\n      ...prev,\n      isAwake: newAwakeState\n    }));\n    if (newAwakeState) {\n      // Turn on wake lock\n      if (isWakeLockSupported()) {\n        const success = await requestWakeLock();\n        if (!success) {\n          // Wake lock request failed, revert state\n          setGameState(prev => ({\n            ...prev,\n            isAwake: false\n          }));\n        }\n      } else {\n        console.log('Wake Lock API not supported in this browser');\n      }\n    } else {\n      // Turn off wake lock\n      await releaseWakeLock();\n    }\n  };\n\n  // Show score popup\n  const showScorePopup = () => {\n    setGameState(prev => ({\n      ...prev,\n      showScorePopup: true\n    }));\n  };\n\n  // Hide score popup\n  const hideScorePopup = () => {\n    setGameState(prev => ({\n      ...prev,\n      showScorePopup: false\n    }));\n  };\n\n  // Handle contract input changes\n  const handleContractChange = contract => {\n    updateCurrentDeal({\n      contract\n    });\n  };\n\n  // Handle trick input changes\n  const handleTrickChange = (result, tricks) => {\n    updateCurrentDeal({\n      result,\n      tricks\n    });\n  };\n\n  // Determine dealer based on deal number\n  const determineDealer = dealNumber => {\n    const dealerPattern = (dealNumber - 1) % 4;\n    switch (dealerPattern) {\n      case 0:\n        return \"North\";\n      case 1:\n        return \"East\";\n      case 2:\n        return \"South\";\n      case 3:\n        return \"West\";\n      default:\n        return \"North\";\n    }\n  };\n\n  // Get a full description of the contract and result\n  const getFullContractDescription = currentDeal => {\n    var _currentDeal$vulnerab, _currentDeal$vulnerab2;\n    if (!currentDeal || !currentDeal.contract) return \"\";\n    const contractMatch = currentDeal.contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\n    if (!contractMatch) return \"\";\n    const level = contractMatch[1];\n    const suit = contractMatch[2];\n    const declarer = contractMatch[3];\n    const doubled = contractMatch[4];\n\n    // Determine declarer's full name\n    let declarerName = \"\";\n    switch (declarer) {\n      case 'N':\n        declarerName = \"North\";\n        break;\n      case 'E':\n        declarerName = \"East\";\n        break;\n      case 'S':\n        declarerName = \"South\";\n        break;\n      case 'W':\n        declarerName = \"West\";\n        break;\n    }\n\n    // Calculate required tricks\n    const requiredTricks = parseInt(level) + 6;\n\n    // Calculate actual tricks\n    let actualTricks = requiredTricks + (currentDeal.result || 0);\n\n    // Determine if the contract was made or went down\n    const madeContract = currentDeal.result >= 0;\n\n    // Get vulnerability text\n    const isNS = declarer === 'N' || declarer === 'S';\n    const declarerVulnerable = isNS ? ((_currentDeal$vulnerab = currentDeal.vulnerable) === null || _currentDeal$vulnerab === void 0 ? void 0 : _currentDeal$vulnerab.ns) || false : ((_currentDeal$vulnerab2 = currentDeal.vulnerable) === null || _currentDeal$vulnerab2 === void 0 ? void 0 : _currentDeal$vulnerab2.ew) || false;\n    const vulText = declarerVulnerable ? \"\" : \"(not)\";\n\n    // Determine which side scores\n    const scoringSide = isNS ? 'NS' : 'EW';\n\n    // Calculate standard bridge score\n    const contractDetails = parseContract(currentDeal.contract, currentDeal.result, currentDeal.vulnerable);\n    const score = calculateBridgeScore(contractDetails);\n\n    // Determine which side gets the score\n    let scoreValue = 0;\n    let scoringSideDisplay = '';\n    if (madeContract) {\n      // If contract was made, declarer's side gets the score\n      scoreValue = isNS ? score.nsPoints : score.ewPoints;\n      scoringSideDisplay = scoringSide;\n    } else {\n      // If contract was defeated, defenders get the score\n      scoreValue = isNS ? score.ewPoints : score.nsPoints;\n      scoringSideDisplay = isNS ? 'EW' : 'NS';\n    }\n\n    // Make sure score is positive for display\n    const scoreDisplay = Math.abs(scoreValue);\n\n    // Format doubling\n    const doubleText = doubled === 'X' ? ' X' : doubled === 'XX' ? ' XX' : '';\n\n    // Create the full description\n    const description = `${level}${suit} by ${declarerName}${doubleText} ${vulText}, ` + `made ${actualTricks} tricks` + (madeContract ? currentDeal.result > 0 ? ` (+${currentDeal.result})` : ` (=)` : ` (down ${Math.abs(currentDeal.result)})`) + `. Score: ${scoreDisplay} to ${scoringSideDisplay}`;\n    return description;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bridge-game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"game-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info-left\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Game #\", gameState.gameNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Bonus Bridge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info-right\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Deal #\", gameState.dealNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vulnerability-info\",\n        children: vulnerabilityDescription(gameState.currentDeal.vulnerable)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-position\",\n        children: [\"Dealer: \", determineDealer(gameState.dealNumber)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contract-input-container\",\n        children: /*#__PURE__*/_jsxDEV(ContractInput, {\n          onContractChange: handleContractChange,\n          initialContract: gameState.currentDeal.contract\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trick-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tricks-label\",\n          children: \"Tricks Taken:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TrickInput, {\n          onTrickChange: handleTrickChange,\n          initialResult: gameState.currentDeal.result,\n          contract: gameState.currentDeal.contract\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-display\",\n        children: gameState.currentDeal.contract && gameState.currentDeal.result !== null ? getFullContractDescription(gameState.currentDeal) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"game-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keep-awake-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `keep-awake-btn ${gameState.isAwake ? 'active' : ''}`,\n          onClick: toggleKeepAwake,\n          children: [\"Keep Awake: \", gameState.isAwake ? 'ON' : 'OFF']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"score-btn\",\n          onClick: showScorePopup,\n          children: \"Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next-deal-btn\",\n          onClick: onNextDeal,\n          disabled: !gameState.currentDeal.contract || gameState.currentDeal.result === null,\n          children: \"Next Deal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-game-btn\",\n          onClick: onNewGame,\n          children: \"New Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), gameState.showScorePopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Current Scores\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ScoreTracking, {\n          scores: gameState.scores,\n          currentDeal: gameState.currentDeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: hideScorePopup,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_c = BridgeGameUI;\nexport default BridgeGameUI;\nvar _c;\n$RefreshReg$(_c, \"BridgeGameUI\");","map":{"version":3,"names":["useEffect","gameState","dealNumber","updateCurrentDeal","contract","declarer","result","tricks","gameNumber","React","useState","ScoreTracking","ContractInput","TrickInput","LoadingSpinner","requestWakeLock","releaseWakeLock","isWakeLockSupported","vulnerabilityDescription","calculateBridgeScore","parseContract","jsxDEV","_jsxDEV","BridgeGameUI","onNextDeal","onNewGame","setGameState","toggleKeepAwake","newAwakeState","isAwake","prev","success","console","log","showScorePopup","hideScorePopup","handleContractChange","handleTrickChange","determineDealer","dealerPattern","getFullContractDescription","currentDeal","_currentDeal$vulnerab","_currentDeal$vulnerab2","contractMatch","match","level","suit","doubled","declarerName","requiredTricks","parseInt","actualTricks","madeContract","isNS","declarerVulnerable","vulnerable","ns","ew","vulText","scoringSide","contractDetails","score","scoreValue","scoringSideDisplay","nsPoints","ewPoints","scoreDisplay","Math","abs","doubleText","description","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onContractChange","initialContract","onTrickChange","initialResult","onClick","disabled","scores","_c","$RefreshReg$"],"sources":["C:/Users/mikec/MikesBridge/bonusbridge/src/BridgeGameUI.js"],"sourcesContent":["// Reset the game state when component mounts or when a new game starts\r\n  useEffect(() => {\r\n    if (gameState.dealNumber === 1) {\r\n      // Clear any previously selected inputs\r\n      updateCurrentDeal({\r\n        contract: '',\r\n        declarer: '',\r\n        result: null,\r\n        tricks: null\r\n      });\r\n    }\r\n  }, [gameState.gameNumber]);import React, { useState, useEffect } from 'react';\r\nimport ScoreTracking from './components/scoreTracking';\r\nimport ContractInput from './components/ContractInput';\r\nimport TrickInput from './components/TrickInput';\r\nimport LoadingSpinner from './components/LoadingSpinner';\r\nimport { \r\n  requestWakeLock, \r\n  releaseWakeLock, \r\n  isWakeLockSupported \r\n} from './utils/wakeLock';\r\nimport { \r\n  vulnerabilityDescription, \r\n  calculateBridgeScore,\r\n  parseContract \r\n} from './utils/scoring';\r\nimport './global.css';\r\n\r\nconst BridgeGameUI = ({ gameState, updateCurrentDeal, onNextDeal, onNewGame, setGameState }) => {\r\n  // Function to keep the device awake\r\n  const toggleKeepAwake = async () => {\r\n    const newAwakeState = !gameState.isAwake;\r\n    \r\n    // Update state first for immediate UI feedback\r\n    setGameState(prev => ({\r\n      ...prev,\r\n      isAwake: newAwakeState\r\n    }));\r\n    \r\n    if (newAwakeState) {\r\n      // Turn on wake lock\r\n      if (isWakeLockSupported()) {\r\n        const success = await requestWakeLock();\r\n        if (!success) {\r\n          // Wake lock request failed, revert state\r\n          setGameState(prev => ({\r\n            ...prev,\r\n            isAwake: false\r\n          }));\r\n        }\r\n      } else {\r\n        console.log('Wake Lock API not supported in this browser');\r\n      }\r\n    } else {\r\n      // Turn off wake lock\r\n      await releaseWakeLock();\r\n    }\r\n  };\r\n\r\n  // Show score popup\r\n  const showScorePopup = () => {\r\n    setGameState(prev => ({\r\n      ...prev,\r\n      showScorePopup: true\r\n    }));\r\n  };\r\n\r\n  // Hide score popup\r\n  const hideScorePopup = () => {\r\n    setGameState(prev => ({\r\n      ...prev,\r\n      showScorePopup: false\r\n    }));\r\n  };\r\n\r\n  // Handle contract input changes\r\n  const handleContractChange = (contract) => {\r\n    updateCurrentDeal({ contract });\r\n  };\r\n\r\n  // Handle trick input changes\r\n  const handleTrickChange = (result, tricks) => {\r\n    updateCurrentDeal({ result, tricks });\r\n  };\r\n  \r\n  // Determine dealer based on deal number\r\n  const determineDealer = (dealNumber) => {\r\n    const dealerPattern = (dealNumber - 1) % 4;\r\n    \r\n    switch (dealerPattern) {\r\n      case 0:\r\n        return \"North\";\r\n      case 1:\r\n        return \"East\";\r\n      case 2:\r\n        return \"South\";\r\n      case 3:\r\n        return \"West\";\r\n      default:\r\n        return \"North\";\r\n    }\r\n  };\r\n  \r\n  // Get a full description of the contract and result\r\n  const getFullContractDescription = (currentDeal) => {\r\n    if (!currentDeal || !currentDeal.contract) return \"\";\r\n    \r\n    const contractMatch = currentDeal.contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\r\n    if (!contractMatch) return \"\";\r\n    \r\n    const level = contractMatch[1];\r\n    const suit = contractMatch[2];\r\n    const declarer = contractMatch[3];\r\n    const doubled = contractMatch[4];\r\n    \r\n    // Determine declarer's full name\r\n    let declarerName = \"\";\r\n    switch (declarer) {\r\n      case 'N': declarerName = \"North\"; break;\r\n      case 'E': declarerName = \"East\"; break;\r\n      case 'S': declarerName = \"South\"; break;\r\n      case 'W': declarerName = \"West\"; break;\r\n    }\r\n    \r\n    // Calculate required tricks\r\n    const requiredTricks = parseInt(level) + 6;\r\n    \r\n    // Calculate actual tricks\r\n    let actualTricks = requiredTricks + (currentDeal.result || 0);\r\n    \r\n    // Determine if the contract was made or went down\r\n    const madeContract = currentDeal.result >= 0;\r\n    \r\n    // Get vulnerability text\r\n    const isNS = declarer === 'N' || declarer === 'S';\r\n    const declarerVulnerable = isNS ? \r\n      (currentDeal.vulnerable?.ns || false) : \r\n      (currentDeal.vulnerable?.ew || false);\r\n    \r\n    const vulText = declarerVulnerable ? \"\" : \"(not)\";\r\n    \r\n    // Determine which side scores\r\n    const scoringSide = isNS ? 'NS' : 'EW';\r\n    \r\n    // Calculate standard bridge score\r\n    const contractDetails = parseContract(currentDeal.contract, currentDeal.result, currentDeal.vulnerable);\r\n    const score = calculateBridgeScore(contractDetails);\r\n    \r\n    // Determine which side gets the score\r\n    let scoreValue = 0;\r\n    let scoringSideDisplay = '';\r\n    \r\n    if (madeContract) {\r\n      // If contract was made, declarer's side gets the score\r\n      scoreValue = isNS ? score.nsPoints : score.ewPoints;\r\n      scoringSideDisplay = scoringSide;\r\n    } else {\r\n      // If contract was defeated, defenders get the score\r\n      scoreValue = isNS ? score.ewPoints : score.nsPoints;\r\n      scoringSideDisplay = isNS ? 'EW' : 'NS';\r\n    }\r\n    \r\n    // Make sure score is positive for display\r\n    const scoreDisplay = Math.abs(scoreValue);\r\n    \r\n    // Format doubling\r\n    const doubleText = doubled === 'X' ? ' X' : doubled === 'XX' ? ' XX' : '';\r\n    \r\n    // Create the full description\r\n    const description = `${level}${suit} by ${declarerName}${doubleText} ${vulText}, ` + \r\n      `made ${actualTricks} tricks` + \r\n      (madeContract ? \r\n        (currentDeal.result > 0 ? ` (+${currentDeal.result})` : ` (=)`) : \r\n        ` (down ${Math.abs(currentDeal.result)})`) + \r\n      `. Score: ${scoreDisplay} to ${scoringSideDisplay}`;\r\n    \r\n    return description;\r\n  };\r\n\r\n  return (\r\n    <div className=\"bridge-game-container\">\r\n      <header className=\"game-header\">\r\n        <div className=\"game-info-left\">\r\n          <span>Game #{gameState.gameNumber}</span>\r\n        </div>\r\n        <div className=\"game-title\">\r\n          <h1>Bonus Bridge</h1>\r\n        </div>\r\n        <div className=\"game-info-right\">\r\n          <span>Deal #{gameState.dealNumber}</span>\r\n        </div>\r\n        <div className=\"vulnerability-info\">\r\n          {vulnerabilityDescription(gameState.currentDeal.vulnerable)}\r\n        </div>\r\n      </header>\r\n      \r\n      <div className=\"game-board\">\r\n        <div className=\"player-position\">\r\n          Dealer: {determineDealer(gameState.dealNumber)}\r\n        </div>\r\n        \r\n        <div className=\"contract-input-container\">\r\n          <ContractInput \r\n            onContractChange={handleContractChange}\r\n            initialContract={gameState.currentDeal.contract}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"trick-input-container\">\r\n          <div className=\"tricks-label\">Tricks Taken:</div>\r\n          <TrickInput \r\n            onTrickChange={handleTrickChange}\r\n            initialResult={gameState.currentDeal.result}\r\n            contract={gameState.currentDeal.contract}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"result-display\">\r\n          {gameState.currentDeal.contract && gameState.currentDeal.result !== null ? \r\n            getFullContractDescription(gameState.currentDeal)\r\n            : \"\"}\r\n        </div>\r\n      </div>\r\n      \r\n      <footer className=\"game-controls\">\r\n        <div className=\"keep-awake-container\">\r\n          <button \r\n            className={`keep-awake-btn ${gameState.isAwake ? 'active' : ''}`}\r\n            onClick={toggleKeepAwake}\r\n          >\r\n            Keep Awake: {gameState.isAwake ? 'ON' : 'OFF'}\r\n          </button>\r\n          \r\n          <button \r\n            className=\"score-btn\"\r\n            onClick={showScorePopup}\r\n          >\r\n            Score\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"game-actions\">\r\n          <button \r\n            className=\"next-deal-btn\"\r\n            onClick={onNextDeal}\r\n            disabled={!gameState.currentDeal.contract || gameState.currentDeal.result === null}\r\n          >\r\n            Next Deal\r\n          </button>\r\n          \r\n          <button \r\n            className=\"new-game-btn\"\r\n            onClick={onNewGame}\r\n          >\r\n            New Game\r\n          </button>\r\n        </div>\r\n      </footer>\r\n      \r\n      {gameState.showScorePopup && (\r\n        <div className=\"score-popup\">\r\n          <div className=\"score-popup-content\">\r\n            <h2>Current Scores</h2>\r\n            <ScoreTracking \r\n              scores={gameState.scores} \r\n              currentDeal={gameState.currentDeal}\r\n            />\r\n            <button className=\"close-btn\" onClick={hideScorePopup}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BridgeGameUI;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}