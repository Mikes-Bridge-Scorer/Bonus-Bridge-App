{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikec\\\\MikesBridge\\\\bonusbridge\\\\src\\\\BridgeGameUI.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ScoreTracking from './ScoreTracking';\nimport ContractInput from './ContractInput';\nimport TrickInput from './TrickInput';\nimport LoadingSpinner from './LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BridgeGameUI = () => {\n  _s();\n  // State management for the game\n  const [gameState, setGameState] = useState({\n    gameNumber: 1,\n    dealNumber: 1,\n    scores: {\n      nsScore: 0,\n      ewScore: 0\n    },\n    currentDeal: {\n      contract: '',\n      declarer: '',\n      result: null,\n      vulnerable: {\n        ns: false,\n        ew: false\n      }\n    },\n    isAwake: true,\n    // For the \"keep awake\" function\n    showScorePopup: false\n  });\n\n  // Function to keep the device awake\n  const toggleKeepAwake = () => {\n    setGameState(prev => ({\n      ...prev,\n      isAwake: !prev.isAwake\n    }));\n    if (!gameState.isAwake) {\n      // Implement wakeLock API if available\n      if ('wakeLock' in navigator) {\n        try {\n          navigator.wakeLock.request('screen').then(wakeLock => {\n            console.log('Wake Lock is active');\n            // Release it when no longer needed\n            document.addEventListener('visibilitychange', () => {\n              if (document.visibilityState === 'hidden') {\n                wakeLock.release();\n              }\n            });\n          });\n        } catch (err) {\n          console.error(`${err.name}, ${err.message}`);\n        }\n      }\n    }\n  };\n\n  // Calculate scores using standard bridge rules\n  const calculateScore = () => {\n    // This would contain the bridge scoring logic\n    // For now, just show the popup with current scores\n    setGameState(prev => ({\n      ...prev,\n      showScorePopup: true\n    }));\n  };\n\n  // Handle starting a new deal\n  const handleNextDeal = () => {\n    // Save current state to local storage\n    localStorage.setItem('bridgeGameState', JSON.stringify(gameState));\n\n    // Increment deal number\n    setGameState(prev => {\n      var _prev$vulnerable, _prev$vulnerable2;\n      return {\n        ...prev,\n        dealNumber: prev.dealNumber + 1,\n        showScorePopup: false,\n        currentDeal: {\n          contract: '',\n          declarer: '',\n          result: null,\n          vulnerable: {\n            ns: ((_prev$vulnerable = prev.vulnerable) === null || _prev$vulnerable === void 0 ? void 0 : _prev$vulnerable.ns) || false,\n            ew: ((_prev$vulnerable2 = prev.vulnerable) === null || _prev$vulnerable2 === void 0 ? void 0 : _prev$vulnerable2.ew) || false\n          }\n        }\n      };\n    });\n\n    // Navigate to score adjustment page\n    // This would be implemented using React Router in a full app\n    console.log('Navigating to score adjustment page');\n  };\n\n  // Handle starting a new game\n  const handleNewGame = () => {\n    // Show results table\n    // For now, just reset the game state\n    setGameState({\n      gameNumber: gameState.gameNumber + 1,\n      dealNumber: 1,\n      scores: {\n        nsScore: 0,\n        ewScore: 0\n      },\n      currentDeal: {\n        contract: '',\n        declarer: '',\n        result: null,\n        vulnerable: {\n          ns: false,\n          ew: false\n        }\n      },\n      isAwake: gameState.isAwake,\n      showScorePopup: false\n    });\n\n    // Navigate to home page with new game number\n    console.log('Starting new game #' + (gameState.gameNumber + 1));\n  };\n\n  // Load saved game state from local storage on initial load\n  useEffect(() => {\n    const savedState = localStorage.getItem('bridgeGameState');\n    if (savedState) {\n      try {\n        setGameState(JSON.parse(savedState));\n      } catch (e) {\n        console.error('Error parsing saved game state', e);\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bridge-game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"game-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bonus Bridge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Game #\", gameState.gameNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Deal #\", gameState.dealNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player north-player\",\n        children: \"North\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player west-player\",\n        children: \"West\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player east-player\",\n        children: \"East\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player south-player\",\n        children: \"South\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-area\",\n        children: [/*#__PURE__*/_jsxDEV(ContractInput, {\n          onContractChange: contract => setGameState(prev => ({\n            ...prev,\n            currentDeal: {\n              ...prev.currentDeal,\n              contract\n            }\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TrickInput, {\n          onTrickChange: result => setGameState(prev => ({\n            ...prev,\n            currentDeal: {\n              ...prev.currentDeal,\n              result\n            }\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"game-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `keep-awake-btn ${gameState.isAwake ? 'active' : ''}`,\n        onClick: toggleKeepAwake,\n        children: gameState.isAwake ? 'Keep Awake: ON' : 'Keep Awake: OFF'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"score-btn\",\n        onClick: calculateScore,\n        children: \"Score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next-deal-btn\",\n          onClick: handleNextDeal,\n          children: \"Next Deal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-game-btn\",\n          onClick: handleNewGame,\n          children: \"New Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), gameState.showScorePopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Scores\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ScoreTracking, {\n          scores: gameState.scores\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setGameState(prev => ({\n            ...prev,\n            showScorePopup: false\n          })),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(BridgeGameUI, \"hzwxevnO6oIA4jbl0opGA3rVuvo=\");\n_c = BridgeGameUI;\nexport default BridgeGameUI;\nvar _c;\n$RefreshReg$(_c, \"BridgeGameUI\");","map":{"version":3,"names":["React","useState","useEffect","ScoreTracking","ContractInput","TrickInput","LoadingSpinner","jsxDEV","_jsxDEV","BridgeGameUI","_s","gameState","setGameState","gameNumber","dealNumber","scores","nsScore","ewScore","currentDeal","contract","declarer","result","vulnerable","ns","ew","isAwake","showScorePopup","toggleKeepAwake","prev","navigator","wakeLock","request","then","console","log","document","addEventListener","visibilityState","release","err","error","name","message","calculateScore","handleNextDeal","localStorage","setItem","JSON","stringify","_prev$vulnerable","_prev$vulnerable2","handleNewGame","savedState","getItem","parse","e","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onContractChange","onTrickChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mikec/MikesBridge/bonusbridge/src/BridgeGameUI.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ScoreTracking from './ScoreTracking';\r\nimport ContractInput from './ContractInput';\r\nimport TrickInput from './TrickInput';\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nconst BridgeGameUI = () => {\r\n  // State management for the game\r\n  const [gameState, setGameState] = useState({\r\n    gameNumber: 1,\r\n    dealNumber: 1,\r\n    scores: {\r\n      nsScore: 0,\r\n      ewScore: 0\r\n    },\r\n    currentDeal: {\r\n      contract: '',\r\n      declarer: '',\r\n      result: null,\r\n      vulnerable: {\r\n        ns: false,\r\n        ew: false\r\n      }\r\n    },\r\n    isAwake: true, // For the \"keep awake\" function\r\n    showScorePopup: false\r\n  });\r\n\r\n  // Function to keep the device awake\r\n  const toggleKeepAwake = () => {\r\n    setGameState(prev => ({\r\n      ...prev,\r\n      isAwake: !prev.isAwake\r\n    }));\r\n    \r\n    if (!gameState.isAwake) {\r\n      // Implement wakeLock API if available\r\n      if ('wakeLock' in navigator) {\r\n        try {\r\n          navigator.wakeLock.request('screen')\r\n            .then(wakeLock => {\r\n              console.log('Wake Lock is active');\r\n              // Release it when no longer needed\r\n              document.addEventListener('visibilitychange', () => {\r\n                if (document.visibilityState === 'hidden') {\r\n                  wakeLock.release();\r\n                }\r\n              });\r\n            });\r\n        } catch (err) {\r\n          console.error(`${err.name}, ${err.message}`);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // Calculate scores using standard bridge rules\r\n  const calculateScore = () => {\r\n    // This would contain the bridge scoring logic\r\n    // For now, just show the popup with current scores\r\n    setGameState(prev => ({\r\n      ...prev,\r\n      showScorePopup: true\r\n    }));\r\n  };\r\n\r\n  // Handle starting a new deal\r\n  const handleNextDeal = () => {\r\n    // Save current state to local storage\r\n    localStorage.setItem('bridgeGameState', JSON.stringify(gameState));\r\n    \r\n    // Increment deal number\r\n    setGameState(prev => ({\r\n      ...prev,\r\n      dealNumber: prev.dealNumber + 1,\r\n      showScorePopup: false,\r\n      currentDeal: {\r\n        contract: '',\r\n        declarer: '',\r\n        result: null,\r\n        vulnerable: {\r\n          ns: prev.vulnerable?.ns || false,\r\n          ew: prev.vulnerable?.ew || false\r\n        }\r\n      }\r\n    }));\r\n    \r\n    // Navigate to score adjustment page\r\n    // This would be implemented using React Router in a full app\r\n    console.log('Navigating to score adjustment page');\r\n  };\r\n\r\n  // Handle starting a new game\r\n  const handleNewGame = () => {\r\n    // Show results table\r\n    // For now, just reset the game state\r\n    setGameState({\r\n      gameNumber: gameState.gameNumber + 1,\r\n      dealNumber: 1,\r\n      scores: {\r\n        nsScore: 0,\r\n        ewScore: 0\r\n      },\r\n      currentDeal: {\r\n        contract: '',\r\n        declarer: '',\r\n        result: null,\r\n        vulnerable: {\r\n          ns: false,\r\n          ew: false\r\n        }\r\n      },\r\n      isAwake: gameState.isAwake,\r\n      showScorePopup: false\r\n    });\r\n    \r\n    // Navigate to home page with new game number\r\n    console.log('Starting new game #' + (gameState.gameNumber + 1));\r\n  };\r\n\r\n  // Load saved game state from local storage on initial load\r\n  useEffect(() => {\r\n    const savedState = localStorage.getItem('bridgeGameState');\r\n    if (savedState) {\r\n      try {\r\n        setGameState(JSON.parse(savedState));\r\n      } catch (e) {\r\n        console.error('Error parsing saved game state', e);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"bridge-game-container\">\r\n      <header className=\"game-header\">\r\n        <h1>Bonus Bridge</h1>\r\n        <div className=\"game-info\">\r\n          <span>Game #{gameState.gameNumber}</span>\r\n          <span>Deal #{gameState.dealNumber}</span>\r\n        </div>\r\n      </header>\r\n      \r\n      <div className=\"game-board\">\r\n        {/* Main game UI here */}\r\n        <div className=\"player north-player\">North</div>\r\n        <div className=\"player west-player\">West</div>\r\n        <div className=\"player east-player\">East</div>\r\n        <div className=\"player south-player\">South</div>\r\n        \r\n        <div className=\"center-area\">\r\n          <ContractInput \r\n            onContractChange={(contract) => \r\n              setGameState(prev => ({\r\n                ...prev, \r\n                currentDeal: {...prev.currentDeal, contract}\r\n              }))}\r\n          />\r\n          <TrickInput \r\n            onTrickChange={(result) => \r\n              setGameState(prev => ({\r\n                ...prev, \r\n                currentDeal: {...prev.currentDeal, result}\r\n              }))}\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      <footer className=\"game-controls\">\r\n        <button \r\n          className={`keep-awake-btn ${gameState.isAwake ? 'active' : ''}`}\r\n          onClick={toggleKeepAwake}\r\n        >\r\n          {gameState.isAwake ? 'Keep Awake: ON' : 'Keep Awake: OFF'}\r\n        </button>\r\n        \r\n        <button \r\n          className=\"score-btn\"\r\n          onClick={calculateScore}\r\n        >\r\n          Score\r\n        </button>\r\n        \r\n        <div className=\"game-actions\">\r\n          <button \r\n            className=\"next-deal-btn\"\r\n            onClick={handleNextDeal}\r\n          >\r\n            Next Deal\r\n          </button>\r\n          \r\n          <button \r\n            className=\"new-game-btn\"\r\n            onClick={handleNewGame}\r\n          >\r\n            New Game\r\n          </button>\r\n        </div>\r\n      </footer>\r\n      \r\n      {gameState.showScorePopup && (\r\n        <div className=\"score-popup\">\r\n          <div className=\"score-popup-content\">\r\n            <h2>Scores</h2>\r\n            <ScoreTracking scores={gameState.scores} />\r\n            <button onClick={() => setGameState(prev => ({...prev, showScorePopup: false}))}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BridgeGameUI;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}