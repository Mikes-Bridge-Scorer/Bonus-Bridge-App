{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikec\\\\MikesBridge\\\\bonusbridge\\\\src\\\\components\\\\ScoreAdjustment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { parseContract, calculateBridgeScore } from '../utils/scoring';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ScoreAdjustment = ({\n  gameState,\n  onSaveScore,\n  onNextDeal,\n  onNewGame\n}) => {\n  _s();\n  const [declarerHCP, setDeclarerHCP] = useState(0);\n  const [dummyHCP, setDummyHCP] = useState(0);\n  const [distributionPoints, setDistributionPoints] = useState(0);\n  const [adjustedScores, setAdjustedScores] = useState(null);\n  useEffect(() => {\n    // Reset form when a new deal starts\n    setDeclarerHCP(0);\n    setDummyHCP(0);\n    setDistributionPoints(0);\n    setAdjustedScores(null);\n  }, [gameState.dealNumber]);\n\n  // Extract contract details\n  const getContractDetails = () => {\n    var _gameState$currentDea;\n    if (!(gameState !== null && gameState !== void 0 && (_gameState$currentDea = gameState.currentDeal) !== null && _gameState$currentDea !== void 0 && _gameState$currentDea.contract)) return null;\n    return parseContract(gameState.currentDeal.contract, gameState.currentDeal.result, gameState.currentDeal.vulnerable);\n  };\n\n  // Calculate adjusted scores based on HCP and distribution\n  const calculateAdjustedScores = () => {\n    const contractDetails = getContractDetails();\n    if (!contractDetails) return null;\n    const {\n      isNS,\n      declarer\n    } = contractDetails;\n\n    // Calculate total HCP in the partnership\n    const totalHCP = declarerHCP + dummyHCP;\n\n    // Get raw scores based on the contract\n    const rawScores = calculateBridgeScore(contractDetails);\n\n    // Start with raw scores\n    let nsPoints = rawScores.nsPoints;\n    let ewPoints = rawScores.ewPoints;\n\n    // HCP adjustment factor - more points if making with fewer HCP, fewer points if making with many HCP\n    const expectedHCP = 24; // Standard expected HCP for game contracts\n    let hcpAdjustment = 0;\n    if (totalHCP > 0) {\n      hcpAdjustment = (expectedHCP - totalHCP) * 5; // 5 points per HCP difference\n\n      // Add bonuses based on who declared the contract\n      if (isNS) {\n        nsPoints += hcpAdjustment;\n      } else {\n        ewPoints += hcpAdjustment;\n      }\n\n      // Distribution adjustment\n      const distAdjustment = distributionPoints * 3; // 3 points per distribution point\n\n      if (isNS) {\n        nsPoints += distAdjustment;\n      } else {\n        ewPoints += distAdjustment;\n      }\n    }\n    return {\n      raw: {\n        ns: rawScores.nsPoints,\n        ew: rawScores.ewPoints\n      },\n      adjusted: {\n        ns: nsPoints,\n        ew: ewPoints\n      },\n      adjustments: {\n        hcp: hcpAdjustment,\n        distribution: distributionPoints * 3\n      }\n    };\n  };\n\n  // Handle saving the scores and proceeding to next deal\n  const handleSaveAndNext = () => {\n    if (!adjustedScores) {\n      const calculatedScores = calculateAdjustedScores();\n      setAdjustedScores(calculatedScores);\n      if (calculatedScores && onSaveScore) {\n        onSaveScore({\n          nsPoints: calculatedScores.adjusted.ns,\n          ewPoints: calculatedScores.adjusted.ew,\n          dealDetails: {\n            contract: gameState.currentDeal.contract,\n            result: gameState.currentDeal.result,\n            declarerHCP,\n            dummyHCP,\n            distributionPoints\n          }\n        });\n      }\n    }\n    onNextDeal();\n  };\n\n  // Format the contract for display\n  const formatContract = () => {\n    var _gameState$currentDea2;\n    if (!(gameState !== null && gameState !== void 0 && (_gameState$currentDea2 = gameState.currentDeal) !== null && _gameState$currentDea2 !== void 0 && _gameState$currentDea2.contract)) return '';\n    const contractDetails = getContractDetails();\n    if (!contractDetails) return gameState.currentDeal.contract;\n    const {\n      declarer\n    } = contractDetails;\n\n    // Convert declarer from letter to full name\n    let declarerName = \"\";\n    switch (declarer) {\n      case 'N':\n        declarerName = \"North\";\n        break;\n      case 'E':\n        declarerName = \"East\";\n        break;\n      case 'S':\n        declarerName = \"South\";\n        break;\n      case 'W':\n        declarerName = \"West\";\n        break;\n      default:\n        declarerName = declarer;\n    }\n    return gameState.currentDeal.contract.replace(declarer, declarerName);\n  };\n\n  // Handle calculation\n  const handleCalculate = () => {\n    const scores = calculateAdjustedScores();\n    setAdjustedScores(scores);\n  };\n\n  // Format the result for display\n  const formatResult = () => {\n    var _gameState$currentDea3;\n    if ((gameState === null || gameState === void 0 ? void 0 : (_gameState$currentDea3 = gameState.currentDeal) === null || _gameState$currentDea3 === void 0 ? void 0 : _gameState$currentDea3.result) === null) return '';\n    const result = gameState.currentDeal.result;\n    if (result > 0) {\n      return `Made +${result}`;\n    } else if (result < 0) {\n      return `Down ${Math.abs(result)}`;\n    } else {\n      return 'Made exactly';\n    }\n  };\n\n  // Get HCP for each player\n  const determinePlayersHCP = () => {\n    const contractDetails = getContractDetails();\n    if (!contractDetails) return {};\n    const {\n      declarer\n    } = contractDetails;\n    let declarerPosition = '';\n    let dummyPosition = '';\n    switch (declarer) {\n      case 'N':\n        declarerPosition = 'North';\n        dummyPosition = 'South';\n        break;\n      case 'E':\n        declarerPosition = 'East';\n        dummyPosition = 'West';\n        break;\n      case 'S':\n        declarerPosition = 'South';\n        dummyPosition = 'North';\n        break;\n      case 'W':\n        declarerPosition = 'West';\n        dummyPosition = 'East';\n        break;\n      default:\n        return {};\n    }\n    return {\n      declarerPosition,\n      dummyPosition\n    };\n  };\n  const {\n    declarerPosition,\n    dummyPosition\n  } = determinePlayersHCP();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"score-adjustment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"sa-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Card Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contract-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contract-details\",\n          children: [\"Contract: \", formatContract()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-details\",\n          children: [\"Result: \", formatResult()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-analysis\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hcp-input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [declarerPosition, \" (Declarer) HCP:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0\",\n            max: \"37\",\n            value: declarerHCP,\n            onChange: e => setDeclarerHCP(Math.max(0, Math.min(37, parseInt(e.target.value) || 0))),\n            className: \"hcp-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [dummyPosition, \" (Dummy) HCP:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0\",\n            max: \"37\",\n            value: dummyHCP,\n            onChange: e => setDummyHCP(Math.max(0, Math.min(37, parseInt(e.target.value) || 0))),\n            className: \"hcp-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Distribution Points:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0\",\n            max: \"13\",\n            value: distributionPoints,\n            onChange: e => setDistributionPoints(Math.max(0, Math.min(13, parseInt(e.target.value) || 0))),\n            className: \"hcp-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bridge-button calculate-btn\",\n          onClick: handleCalculate,\n          children: \"Calculate Adjusted Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), adjustedScores && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"adjusted-scores\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Adjusted Scores\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-table-container\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"score-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Team\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Raw Score\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Adjustments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Final Score\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"North-South\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: adjustedScores.raw.ns\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: getContractDetails().isNS ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [\"HCP: \", adjustedScores.adjustments.hcp, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 27\n                    }, this), \"Dist: \", adjustedScores.adjustments.distribution]\n                  }, void 0, true) : '0'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: adjustedScores.adjusted.ns\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"East-West\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: adjustedScores.raw.ew\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: !getContractDetails().isNS ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [\"HCP: \", adjustedScores.adjustments.hcp, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 27\n                    }, this), \"Dist: \", adjustedScores.adjustments.distribution]\n                  }, void 0, true) : '0'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: adjustedScores.adjusted.ew\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"hcp-summary\",\n          children: [\"Total HCP in partnership: \", declarerHCP + dummyHCP]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"dist-summary\",\n          children: [\"Distribution points: \", distributionPoints]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sa-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bridge-button next-deal-btn\",\n        onClick: handleSaveAndNext,\n        children: \"Save & Next Deal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bridge-button new-game-btn\",\n        onClick: onNewGame,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n_s(ScoreAdjustment, \"/v83xS6uiUtOpCt7uHQN85IlcPQ=\");\n_c = ScoreAdjustment;\nexport default ScoreAdjustment;\nvar _c;\n$RefreshReg$(_c, \"ScoreAdjustment\");","map":{"version":3,"names":["React","useState","useEffect","parseContract","calculateBridgeScore","jsxDEV","_jsxDEV","Fragment","_Fragment","ScoreAdjustment","gameState","onSaveScore","onNextDeal","onNewGame","_s","declarerHCP","setDeclarerHCP","dummyHCP","setDummyHCP","distributionPoints","setDistributionPoints","adjustedScores","setAdjustedScores","dealNumber","getContractDetails","_gameState$currentDea","currentDeal","contract","result","vulnerable","calculateAdjustedScores","contractDetails","isNS","declarer","totalHCP","rawScores","nsPoints","ewPoints","expectedHCP","hcpAdjustment","distAdjustment","raw","ns","ew","adjusted","adjustments","hcp","distribution","handleSaveAndNext","calculatedScores","dealDetails","formatContract","_gameState$currentDea2","declarerName","replace","handleCalculate","scores","formatResult","_gameState$currentDea3","Math","abs","determinePlayersHCP","declarerPosition","dummyPosition","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","value","onChange","e","parseInt","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mikec/MikesBridge/bonusbridge/src/components/ScoreAdjustment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { parseContract, calculateBridgeScore } from '../utils/scoring';\r\n\r\nconst ScoreAdjustment = ({ gameState, onSaveScore, onNextDeal, onNewGame }) => {\r\n  const [declarerHCP, setDeclarerHCP] = useState(0);\r\n  const [dummyHCP, setDummyHCP] = useState(0);\r\n  const [distributionPoints, setDistributionPoints] = useState(0);\r\n  const [adjustedScores, setAdjustedScores] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    // Reset form when a new deal starts\r\n    setDeclarerHCP(0);\r\n    setDummyHCP(0);\r\n    setDistributionPoints(0);\r\n    setAdjustedScores(null);\r\n  }, [gameState.dealNumber]);\r\n  \r\n  // Extract contract details\r\n  const getContractDetails = () => {\r\n    if (!gameState?.currentDeal?.contract) return null;\r\n    \r\n    return parseContract(\r\n      gameState.currentDeal.contract, \r\n      gameState.currentDeal.result, \r\n      gameState.currentDeal.vulnerable\r\n    );\r\n  };\r\n\r\n  // Calculate adjusted scores based on HCP and distribution\r\n  const calculateAdjustedScores = () => {\r\n    const contractDetails = getContractDetails();\r\n    if (!contractDetails) return null;\r\n    \r\n    const { isNS, declarer } = contractDetails;\r\n    \r\n    // Calculate total HCP in the partnership\r\n    const totalHCP = declarerHCP + dummyHCP;\r\n    \r\n    // Get raw scores based on the contract\r\n    const rawScores = calculateBridgeScore(contractDetails);\r\n    \r\n    // Start with raw scores\r\n    let nsPoints = rawScores.nsPoints;\r\n    let ewPoints = rawScores.ewPoints;\r\n    \r\n    // HCP adjustment factor - more points if making with fewer HCP, fewer points if making with many HCP\r\n    const expectedHCP = 24; // Standard expected HCP for game contracts\r\n    let hcpAdjustment = 0;\r\n    \r\n    if (totalHCP > 0) {\r\n      hcpAdjustment = (expectedHCP - totalHCP) * 5; // 5 points per HCP difference\r\n      \r\n      // Add bonuses based on who declared the contract\r\n      if (isNS) {\r\n        nsPoints += hcpAdjustment;\r\n      } else {\r\n        ewPoints += hcpAdjustment;\r\n      }\r\n      \r\n      // Distribution adjustment\r\n      const distAdjustment = distributionPoints * 3; // 3 points per distribution point\r\n      \r\n      if (isNS) {\r\n        nsPoints += distAdjustment;\r\n      } else {\r\n        ewPoints += distAdjustment;\r\n      }\r\n    }\r\n    \r\n    return {\r\n      raw: { ns: rawScores.nsPoints, ew: rawScores.ewPoints },\r\n      adjusted: { ns: nsPoints, ew: ewPoints },\r\n      adjustments: {\r\n        hcp: hcpAdjustment,\r\n        distribution: distributionPoints * 3\r\n      }\r\n    };\r\n  };\r\n  \r\n  // Handle saving the scores and proceeding to next deal\r\n  const handleSaveAndNext = () => {\r\n    if (!adjustedScores) {\r\n      const calculatedScores = calculateAdjustedScores();\r\n      setAdjustedScores(calculatedScores);\r\n      \r\n      if (calculatedScores && onSaveScore) {\r\n        onSaveScore({\r\n          nsPoints: calculatedScores.adjusted.ns,\r\n          ewPoints: calculatedScores.adjusted.ew,\r\n          dealDetails: {\r\n            contract: gameState.currentDeal.contract,\r\n            result: gameState.currentDeal.result,\r\n            declarerHCP,\r\n            dummyHCP,\r\n            distributionPoints\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    onNextDeal();\r\n  };\r\n  \r\n  // Format the contract for display\r\n  const formatContract = () => {\r\n    if (!gameState?.currentDeal?.contract) return '';\r\n    \r\n    const contractDetails = getContractDetails();\r\n    if (!contractDetails) return gameState.currentDeal.contract;\r\n    \r\n    const { declarer } = contractDetails;\r\n    \r\n    // Convert declarer from letter to full name\r\n    let declarerName = \"\";\r\n    switch (declarer) {\r\n      case 'N': declarerName = \"North\"; break;\r\n      case 'E': declarerName = \"East\"; break;\r\n      case 'S': declarerName = \"South\"; break;\r\n      case 'W': declarerName = \"West\"; break;\r\n      default: declarerName = declarer;\r\n    }\r\n    \r\n    return gameState.currentDeal.contract.replace(declarer, declarerName);\r\n  };\r\n  \r\n  // Handle calculation\r\n  const handleCalculate = () => {\r\n    const scores = calculateAdjustedScores();\r\n    setAdjustedScores(scores);\r\n  };\r\n  \r\n  // Format the result for display\r\n  const formatResult = () => {\r\n    if (gameState?.currentDeal?.result === null) return '';\r\n    \r\n    const result = gameState.currentDeal.result;\r\n    if (result > 0) {\r\n      return `Made +${result}`;\r\n    } else if (result < 0) {\r\n      return `Down ${Math.abs(result)}`;\r\n    } else {\r\n      return 'Made exactly';\r\n    }\r\n  };\r\n  \r\n  // Get HCP for each player\r\n  const determinePlayersHCP = () => {\r\n    const contractDetails = getContractDetails();\r\n    if (!contractDetails) return {};\r\n    \r\n    const { declarer } = contractDetails;\r\n    \r\n    let declarerPosition = '';\r\n    let dummyPosition = '';\r\n    \r\n    switch (declarer) {\r\n      case 'N':\r\n        declarerPosition = 'North';\r\n        dummyPosition = 'South';\r\n        break;\r\n      case 'E':\r\n        declarerPosition = 'East';\r\n        dummyPosition = 'West';\r\n        break;\r\n      case 'S':\r\n        declarerPosition = 'South';\r\n        dummyPosition = 'North';\r\n        break;\r\n      case 'W':\r\n        declarerPosition = 'West';\r\n        dummyPosition = 'East';\r\n        break;\r\n      default:\r\n        return {};\r\n    }\r\n    \r\n    return { declarerPosition, dummyPosition };\r\n  };\r\n  \r\n  const { declarerPosition, dummyPosition } = determinePlayersHCP();\r\n  \r\n  return (\r\n    <div className=\"score-adjustment-container\">\r\n      <header className=\"sa-header\">\r\n        <h2>Card Analysis</h2>\r\n        <div className=\"contract-display\">\r\n          <div className=\"contract-details\">\r\n            Contract: {formatContract()}\r\n          </div>\r\n          <div className=\"result-details\">\r\n            Result: {formatResult()}\r\n          </div>\r\n        </div>\r\n      </header>\r\n      \r\n      <div className=\"card-analysis\">\r\n        <div className=\"hcp-input-group\">\r\n          <label>\r\n            {declarerPosition} (Declarer) HCP:\r\n            <input \r\n              type=\"number\" \r\n              min=\"0\" \r\n              max=\"37\"\r\n              value={declarerHCP}\r\n              onChange={(e) => setDeclarerHCP(Math.max(0, Math.min(37, parseInt(e.target.value) || 0)))}\r\n              className=\"hcp-input\"\r\n            />\r\n          </label>\r\n          \r\n          <label>\r\n            {dummyPosition} (Dummy) HCP:\r\n            <input \r\n              type=\"number\" \r\n              min=\"0\" \r\n              max=\"37\"\r\n              value={dummyHCP}\r\n              onChange={(e) => setDummyHCP(Math.max(0, Math.min(37, parseInt(e.target.value) || 0)))}\r\n              className=\"hcp-input\"\r\n            />\r\n          </label>\r\n          \r\n          <label>\r\n            Distribution Points:\r\n            <input \r\n              type=\"number\" \r\n              min=\"0\" \r\n              max=\"13\"\r\n              value={distributionPoints}\r\n              onChange={(e) => setDistributionPoints(Math.max(0, Math.min(13, parseInt(e.target.value) || 0)))}\r\n              className=\"hcp-input\"\r\n            />\r\n          </label>\r\n          \r\n          <button \r\n            className=\"bridge-button calculate-btn\"\r\n            onClick={handleCalculate}\r\n          >\r\n            Calculate Adjusted Score\r\n          </button>\r\n        </div>\r\n        \r\n        {adjustedScores && (\r\n          <div className=\"adjusted-scores\">\r\n            <h3>Adjusted Scores</h3>\r\n            \r\n            <div className=\"score-table-container\">\r\n              <table className=\"score-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Team</th>\r\n                    <th>Raw Score</th>\r\n                    <th>Adjustments</th>\r\n                    <th>Final Score</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>North-South</td>\r\n                    <td>{adjustedScores.raw.ns}</td>\r\n                    <td>\r\n                      {getContractDetails().isNS ? (\r\n                        <>\r\n                          HCP: {adjustedScores.adjustments.hcp}\r\n                          <br />\r\n                          Dist: {adjustedScores.adjustments.distribution}\r\n                        </>\r\n                      ) : '0'}\r\n                    </td>\r\n                    <td>{adjustedScores.adjusted.ns}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>East-West</td>\r\n                    <td>{adjustedScores.raw.ew}</td>\r\n                    <td>\r\n                      {!getContractDetails().isNS ? (\r\n                        <>\r\n                          HCP: {adjustedScores.adjustments.hcp}\r\n                          <br />\r\n                          Dist: {adjustedScores.adjustments.distribution}\r\n                        </>\r\n                      ) : '0'}\r\n                    </td>\r\n                    <td>{adjustedScores.adjusted.ew}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            \r\n            <p className=\"hcp-summary\">\r\n              Total HCP in partnership: {declarerHCP + dummyHCP}\r\n            </p>\r\n            <p className=\"dist-summary\">\r\n              Distribution points: {distributionPoints}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"sa-actions\">\r\n        <button \r\n          className=\"bridge-button next-deal-btn\"\r\n          onClick={handleSaveAndNext}\r\n        >\r\n          Save & Next Deal\r\n        </button>\r\n        \r\n        <button \r\n          className=\"bridge-button new-game-btn\"\r\n          onClick={onNewGame}\r\n        >\r\n          New Game\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScoreAdjustment;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}