{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikec\\\\MikesBridge\\\\bonusbridge\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BridgeGameUI from './BridgeGameUI';\nimport ScoreAdjustment from './components/ScoreAdjustment';\nimport './global.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentView, setCurrentView] = useState('game'); // 'game' or 'scoreAdjustment'\n  const [gameState, setGameState] = useState(() => {\n    // Try to load game state from local storage\n    const savedState = localStorage.getItem('bridgeGameState');\n    if (savedState) {\n      try {\n        return JSON.parse(savedState);\n      } catch (e) {\n        console.error('Error parsing saved game state', e);\n      }\n    }\n\n    // Default initial state\n    return {\n      gameNumber: 1,\n      dealNumber: 1,\n      scores: {\n        nsScore: 0,\n        ewScore: 0\n      },\n      deals: [],\n      currentDeal: {\n        contract: '',\n        declarer: '',\n        result: null,\n        tricks: null,\n        vulnerable: {\n          ns: false,\n          ew: false\n        }\n      },\n      isAwake: true,\n      showScorePopup: false\n    };\n  });\n\n  // Save game state to local storage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('bridgeGameState', JSON.stringify(gameState));\n  }, [gameState]);\n\n  // Handle saving the score after adjustment\n  const handleSaveScore = scoreData => {\n    setGameState(prev => {\n      // Add the completed deal to the deals history\n      const completedDeal = {\n        ...prev.currentDeal,\n        dealNumber: prev.dealNumber,\n        nsPoints: scoreData.nsPoints,\n        ewPoints: scoreData.ewPoints,\n        details: scoreData.dealDetails\n      };\n      return {\n        ...prev,\n        scores: {\n          nsScore: prev.scores.nsScore + scoreData.nsPoints,\n          ewScore: prev.scores.ewScore + scoreData.ewPoints\n        },\n        deals: [...prev.deals, completedDeal]\n      };\n    });\n  };\n\n  // Handle starting a new deal\n  const handleNextDeal = () => {\n    setGameState(prev => ({\n      ...prev,\n      dealNumber: prev.dealNumber + 1,\n      showScorePopup: false,\n      currentDeal: {\n        contract: '',\n        declarer: '',\n        result: null,\n        tricks: null,\n        vulnerable: determineVulnerability(prev.dealNumber + 1)\n      }\n    }));\n  };\n\n  // Handle starting a new game\n  const handleNewGame = () => {\n    setGameState({\n      gameNumber: gameState.gameNumber + 1,\n      dealNumber: 1,\n      scores: {\n        nsScore: 0,\n        ewScore: 0\n      },\n      deals: [],\n      currentDeal: {\n        contract: '',\n        declarer: '',\n        result: null,\n        tricks: null,\n        vulnerable: determineVulnerability(1)\n      },\n      isAwake: gameState.isAwake,\n      showScorePopup: false\n    });\n  };\n\n  // Determine vulnerability based on deal number\n  // Standard bridge vulnerability rotation: None, NS, EW, Both, repeating\n  const determineVulnerability = dealNumber => {\n    const vulnerabilityPattern = (dealNumber - 1) % 4;\n    switch (vulnerabilityPattern) {\n      case 0:\n        // None\n        return {\n          ns: false,\n          ew: false\n        };\n      case 1:\n        // NS\n        return {\n          ns: true,\n          ew: false\n        };\n      case 2:\n        // EW\n        return {\n          ns: false,\n          ew: true\n        };\n      case 3:\n        // Both\n        return {\n          ns: true,\n          ew: true\n        };\n      default:\n        return {\n          ns: false,\n          ew: false\n        };\n    }\n  };\n\n  // Update the current deal in the game state\n  const updateCurrentDeal = updatedDeal => {\n    setGameState(prev => ({\n      ...prev,\n      currentDeal: {\n        ...prev.currentDeal,\n        ...updatedDeal\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: currentView === 'game' ? /*#__PURE__*/_jsxDEV(BridgeGameUI, {\n      gameState: gameState,\n      updateCurrentDeal: updateCurrentDeal,\n      onNextDeal: () => setCurrentView('scoreAdjustment'),\n      onNewGame: handleNewGame,\n      setGameState: setGameState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ScoreAdjustment, {\n      gameState: gameState,\n      onSaveScore: handleSaveScore,\n      onNextDeal: () => {\n        handleNextDeal();\n        setCurrentView('game');\n      },\n      onNewGame: () => {\n        handleNewGame();\n        setCurrentView('game');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"YsxxfWurcEG9739Qux+2Qhr//7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BridgeGameUI","ScoreAdjustment","jsxDEV","_jsxDEV","App","_s","currentView","setCurrentView","gameState","setGameState","savedState","localStorage","getItem","JSON","parse","e","console","error","gameNumber","dealNumber","scores","nsScore","ewScore","deals","currentDeal","contract","declarer","result","tricks","vulnerable","ns","ew","isAwake","showScorePopup","setItem","stringify","handleSaveScore","scoreData","prev","completedDeal","nsPoints","ewPoints","details","dealDetails","handleNextDeal","determineVulnerability","handleNewGame","vulnerabilityPattern","updateCurrentDeal","updatedDeal","className","children","onNextDeal","onNewGame","fileName","_jsxFileName","lineNumber","columnNumber","onSaveScore","_c","$RefreshReg$"],"sources":["C:/Users/mikec/MikesBridge/bonusbridge/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport BridgeGameUI from './BridgeGameUI';\r\nimport ScoreAdjustment from './components/ScoreAdjustment';\r\nimport './global.css';\r\n\r\nconst App = () => {\r\n  const [currentView, setCurrentView] = useState('game'); // 'game' or 'scoreAdjustment'\r\n  const [gameState, setGameState] = useState(() => {\r\n    // Try to load game state from local storage\r\n    const savedState = localStorage.getItem('bridgeGameState');\r\n    if (savedState) {\r\n      try {\r\n        return JSON.parse(savedState);\r\n      } catch (e) {\r\n        console.error('Error parsing saved game state', e);\r\n      }\r\n    }\r\n    \r\n    // Default initial state\r\n    return {\r\n      gameNumber: 1,\r\n      dealNumber: 1,\r\n      scores: {\r\n        nsScore: 0,\r\n        ewScore: 0\r\n      },\r\n      deals: [],\r\n      currentDeal: {\r\n        contract: '',\r\n        declarer: '',\r\n        result: null,\r\n        tricks: null,\r\n        vulnerable: {\r\n          ns: false,\r\n          ew: false\r\n        }\r\n      },\r\n      isAwake: true,\r\n      showScorePopup: false\r\n    };\r\n  });\r\n  \r\n  // Save game state to local storage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('bridgeGameState', JSON.stringify(gameState));\r\n  }, [gameState]);\r\n  \r\n  // Handle saving the score after adjustment\r\n  const handleSaveScore = (scoreData) => {\r\n    setGameState(prev => {\r\n      // Add the completed deal to the deals history\r\n      const completedDeal = {\r\n        ...prev.currentDeal,\r\n        dealNumber: prev.dealNumber,\r\n        nsPoints: scoreData.nsPoints,\r\n        ewPoints: scoreData.ewPoints,\r\n        details: scoreData.dealDetails\r\n      };\r\n      \r\n      return {\r\n        ...prev,\r\n        scores: {\r\n          nsScore: prev.scores.nsScore + scoreData.nsPoints,\r\n          ewScore: prev.scores.ewScore + scoreData.ewPoints\r\n        },\r\n        deals: [...prev.deals, completedDeal]\r\n      };\r\n    });\r\n  };\r\n  \r\n  // Handle starting a new deal\r\n  const handleNextDeal = () => {\r\n    setGameState(prev => ({\r\n      ...prev,\r\n      dealNumber: prev.dealNumber + 1,\r\n      showScorePopup: false,\r\n      currentDeal: {\r\n        contract: '',\r\n        declarer: '',\r\n        result: null,\r\n        tricks: null,\r\n        vulnerable: determineVulnerability(prev.dealNumber + 1)\r\n      }\r\n    }));\r\n  };\r\n  \r\n  // Handle starting a new game\r\n  const handleNewGame = () => {\r\n    setGameState({\r\n      gameNumber: gameState.gameNumber + 1,\r\n      dealNumber: 1,\r\n      scores: {\r\n        nsScore: 0,\r\n        ewScore: 0\r\n      },\r\n      deals: [],\r\n      currentDeal: {\r\n        contract: '',\r\n        declarer: '',\r\n        result: null,\r\n        tricks: null,\r\n        vulnerable: determineVulnerability(1)\r\n      },\r\n      isAwake: gameState.isAwake,\r\n      showScorePopup: false\r\n    });\r\n  };\r\n  \r\n  // Determine vulnerability based on deal number\r\n  // Standard bridge vulnerability rotation: None, NS, EW, Both, repeating\r\n  const determineVulnerability = (dealNumber) => {\r\n    const vulnerabilityPattern = (dealNumber - 1) % 4;\r\n    \r\n    switch (vulnerabilityPattern) {\r\n      case 0: // None\r\n        return { ns: false, ew: false };\r\n      case 1: // NS\r\n        return { ns: true, ew: false };\r\n      case 2: // EW\r\n        return { ns: false, ew: true };\r\n      case 3: // Both\r\n        return { ns: true, ew: true };\r\n      default:\r\n        return { ns: false, ew: false };\r\n    }\r\n  };\r\n  \r\n  // Update the current deal in the game state\r\n  const updateCurrentDeal = (updatedDeal) => {\r\n    setGameState(prev => ({\r\n      ...prev,\r\n      currentDeal: {\r\n        ...prev.currentDeal,\r\n        ...updatedDeal\r\n      }\r\n    }));\r\n  };\r\n  \r\n  return (\r\n    <div className=\"app-container\">\r\n      {currentView === 'game' ? (\r\n        <BridgeGameUI \r\n          gameState={gameState} \r\n          updateCurrentDeal={updateCurrentDeal}\r\n          onNextDeal={() => setCurrentView('scoreAdjustment')}\r\n          onNewGame={handleNewGame}\r\n          setGameState={setGameState}\r\n        />\r\n      ) : (\r\n        <ScoreAdjustment \r\n          gameState={gameState}\r\n          onSaveScore={handleSaveScore}\r\n          onNextDeal={() => {\r\n            handleNextDeal();\r\n            setCurrentView('game');\r\n          }}\r\n          onNewGame={() => {\r\n            handleNewGame();\r\n            setCurrentView('game');\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}