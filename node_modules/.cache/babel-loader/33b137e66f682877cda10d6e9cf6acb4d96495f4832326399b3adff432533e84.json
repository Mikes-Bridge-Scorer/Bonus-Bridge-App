{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikec\\\\MikesBridge\\\\bonusbridge\\\\src\\\\components\\\\TrickInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrickInput = ({\n  onTrickChange,\n  initialResult,\n  contract\n}) => {\n  _s();\n  const [tricks, setTricks] = useState(null);\n  const [contractLevel, setContractLevel] = useState(null);\n\n  // Initialize from props if provided\n  useEffect(() => {\n    if (initialResult !== null && contract) {\n      const match = contract.match(/(\\d)/);\n      if (match) {\n        const level = parseInt(match[1]);\n        setContractLevel(level);\n\n        // Calculate tricks from result and level\n        const calculatedTricks = level + 6 + initialResult;\n        setTricks(calculatedTricks);\n      }\n    }\n  }, [initialResult, contract]);\n\n  // Extract contract level when contract changes\n  useEffect(() => {\n    if (contract) {\n      const match = contract.match(/(\\d)/);\n      if (match) {\n        const level = parseInt(match[1]);\n        setContractLevel(level);\n      }\n    } else {\n      setContractLevel(null);\n    }\n  }, [contract]);\n\n  // In bridge, contracts range from 1-7, requiring 7-13 tricks\n  const calculateRequiredTricks = level => {\n    return level ? parseInt(level) + 6 : null;\n  };\n\n  // Update the tricks taken\n  const handleTricksChange = numTricks => {\n    setTricks(numTricks);\n\n    // If contract level is set, calculate the result\n    if (contractLevel !== null) {\n      const requiredTricks = calculateRequiredTricks(contractLevel);\n      const result = numTricks - requiredTricks;\n      onTrickChange(result, numTricks);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trick-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tricks-grid\",\n      children: trickOptions.map(trickCount => {\n        let buttonClass = \"\";\n        if (tricks === trickCount) {\n          buttonClass = \"selected\";\n        } else if (contractLevel && trickCount === contractLevel + 6) {\n          buttonClass = \"required\"; // Highlight the required tricks for the contract\n        }\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: buttonClass,\n          onClick: () => handleTricksChange(trickCount),\n          children: trickCount\n        }, `tricks-${trickCount}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), contractLevel !== null && tricks !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-summary\",\n      children: tricks < calculateRequiredTricks(contractLevel) ? `Down ${calculateRequiredTricks(contractLevel) - tricks}` : tricks === calculateRequiredTricks(contractLevel) ? `Made exactly` : `Made +${tricks - calculateRequiredTricks(contractLevel)}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(TrickInput, \"FNBXzYIk/yYvu0BphasHk07//V8=\");\n_c = TrickInput;\nexport default TrickInput;\nvar _c;\n$RefreshReg$(_c, \"TrickInput\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TrickInput","onTrickChange","initialResult","contract","_s","tricks","setTricks","contractLevel","setContractLevel","match","level","parseInt","calculatedTricks","calculateRequiredTricks","handleTricksChange","numTricks","requiredTricks","result","className","children","trickOptions","map","trickCount","buttonClass","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mikec/MikesBridge/bonusbridge/src/components/TrickInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst TrickInput = ({ onTrickChange, initialResult, contract }) => {\r\n  const [tricks, setTricks] = useState(null);\r\n  const [contractLevel, setContractLevel] = useState(null);\r\n  \r\n  // Initialize from props if provided\r\n  useEffect(() => {\r\n    if (initialResult !== null && contract) {\r\n      const match = contract.match(/(\\d)/);\r\n      if (match) {\r\n        const level = parseInt(match[1]);\r\n        setContractLevel(level);\r\n        \r\n        // Calculate tricks from result and level\r\n        const calculatedTricks = level + 6 + initialResult;\r\n        setTricks(calculatedTricks);\r\n      }\r\n    }\r\n  }, [initialResult, contract]);\r\n  \r\n  // Extract contract level when contract changes\r\n  useEffect(() => {\r\n    if (contract) {\r\n      const match = contract.match(/(\\d)/);\r\n      if (match) {\r\n        const level = parseInt(match[1]);\r\n        setContractLevel(level);\r\n      }\r\n    } else {\r\n      setContractLevel(null);\r\n    }\r\n  }, [contract]);\r\n  \r\n  // In bridge, contracts range from 1-7, requiring 7-13 tricks\r\n  const calculateRequiredTricks = (level) => {\r\n    return level ? parseInt(level) + 6 : null;\r\n  };\r\n  \r\n  // Update the tricks taken\r\n  const handleTricksChange = (numTricks) => {\r\n    setTricks(numTricks);\r\n    \r\n    // If contract level is set, calculate the result\r\n    if (contractLevel !== null) {\r\n      const requiredTricks = calculateRequiredTricks(contractLevel);\r\n      const result = numTricks - requiredTricks;\r\n      onTrickChange(result, numTricks);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"trick-input\">\r\n      <div className=\"tricks-grid\">\r\n        {trickOptions.map((trickCount) => {\r\n          let buttonClass = \"\";\r\n          if (tricks === trickCount) {\r\n            buttonClass = \"selected\";\r\n          } else if (contractLevel && trickCount === (contractLevel + 6)) {\r\n            buttonClass = \"required\"; // Highlight the required tricks for the contract\r\n          }\r\n          \r\n          return (\r\n            <button\r\n              key={`tricks-${trickCount}`}\r\n              className={buttonClass}\r\n              onClick={() => handleTricksChange(trickCount)}\r\n            >\r\n              {trickCount}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n      \r\n      {contractLevel !== null && tricks !== null && (\r\n        <div className=\"result-summary\">\r\n          {tricks < calculateRequiredTricks(contractLevel)\r\n            ? `Down ${calculateRequiredTricks(contractLevel) - tricks}`\r\n            : tricks === calculateRequiredTricks(contractLevel)\r\n            ? `Made exactly`\r\n            : `Made +${tricks - calculateRequiredTricks(contractLevel)}`}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrickInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}