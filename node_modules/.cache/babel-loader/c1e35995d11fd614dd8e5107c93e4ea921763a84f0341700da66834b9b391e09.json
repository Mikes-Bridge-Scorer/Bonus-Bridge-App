{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikec\\\\MikesBridge\\\\bonusbridge\\\\src\\\\index.js\";\n// Updated index.js - Enable PWA functionality\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './global.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this));\n\n// Enable service worker for PWA functionality\n// This allows the app to work offline and load faster\nserviceWorkerRegistration.register({\n  onSuccess: () => {\n    console.log('Bridge app is now available offline!');\n  },\n  onUpdate: () => {\n    console.log('New version available! Please refresh to update.');\n    // Optionally show a notification to user about update\n  }\n});","map":{"version":3,"names":["React","ReactDOM","App","serviceWorkerRegistration","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","register","onSuccess","console","log","onUpdate"],"sources":["C:/Users/mikec/MikesBridge/bonusbridge/src/index.js"],"sourcesContent":["// Updated index.js - Enable PWA functionality\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './global.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorker';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// Enable service worker for PWA functionality\r\n// This allows the app to work offline and load faster\r\nserviceWorkerRegistration.register({\r\n  onSuccess: () => {\r\n    console.log('Bridge app is now available offline!');\r\n  },\r\n  onUpdate: () => {\r\n    console.log('New version available! Please refresh to update.');\r\n    // Optionally show a notification to user about update\r\n  }\r\n});"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,cAAc;AACrB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,KAAKC,yBAAyB,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,IAAI,GAAGL,QAAQ,CAACM,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACTL,OAAA,CAACL,KAAK,CAACW,UAAU;EAAAC,QAAA,eACfP,OAAA,CAACH,GAAG;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;;AAED;AACA;AACAb,yBAAyB,CAACc,QAAQ,CAAC;EACjCC,SAAS,EAAEA,CAAA,KAAM;IACfC,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;EACrD,CAAC;EACDC,QAAQ,EAAEA,CAAA,KAAM;IACdF,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;IAC/D;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}