{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikec\\\\MikesBridge\\\\bonusbridge\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BridgeGameUI from './BridgeGameUI';\nimport ScoreAdjustment from './components/ScoreAdjustment';\nimport GameSummary from './components/GameSummary';\nimport { determineVulnerability } from './utils/scoring';\nimport './global.css';\nimport './components/ScoreAdjustment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Possible views: 'game', 'scoreAdjustment', 'gameSummary', 'home'\n  const [currentView, setCurrentView] = useState('game');\n  const [gameState, setGameState] = useState(() => {\n    // Try to load game state from local storage\n    const savedState = localStorage.getItem('bridgeGameState');\n    if (savedState) {\n      try {\n        return JSON.parse(savedState);\n      } catch (e) {\n        console.error('Error parsing saved game state', e);\n      }\n    }\n\n    // Default initial state\n    return {\n      gameNumber: 1,\n      dealNumber: 1,\n      scores: {\n        nsScore: 0,\n        ewScore: 0\n      },\n      deals: [],\n      currentDeal: {\n        contract: '',\n        declarer: '',\n        result: null,\n        tricks: null,\n        vulnerable: determineVulnerability(1)\n      },\n      isAwake: true,\n      showScorePopup: false\n    };\n  });\n\n  // Save game state to local storage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('bridgeGameState', JSON.stringify(gameState));\n  }, [gameState]);\n\n  // Handle saving the score after adjustment\n  const handleSaveScore = scoreData => {\n    setGameState(prev => {\n      // Add the completed deal to the deals history\n      const completedDeal = {\n        ...prev.currentDeal,\n        dealNumber: prev.dealNumber,\n        nsPoints: scoreData.nsPoints,\n        ewPoints: scoreData.ewPoints,\n        details: scoreData.dealDetails\n      };\n      return {\n        ...prev,\n        scores: {\n          nsScore: prev.scores.nsScore + scoreData.nsPoints,\n          ewScore: prev.scores.ewScore + scoreData.ewPoints\n        },\n        deals: [...prev.deals, completedDeal]\n      };\n    });\n  };\n\n  // Handle starting a new deal\n  const handleNextDeal = () => {\n    setGameState(prev => ({\n      ...prev,\n      dealNumber: prev.dealNumber + 1,\n      showScorePopup: false,\n      currentDeal: {\n        contract: '',\n        declarer: '',\n        result: null,\n        tricks: null,\n        vulnerable: determineVulnerability(prev.dealNumber + 1)\n      }\n    }));\n\n    // Navigate to game screen\n    setCurrentView('game');\n  };\n\n  // Handle starting a new game\n  const handleNewGame = () => {\n    setGameState({\n      gameNumber: gameState.gameNumber + 1,\n      dealNumber: 1,\n      scores: {\n        nsScore: 0,\n        ewScore: 0\n      },\n      deals: [],\n      currentDeal: {\n        contract: '',\n        declarer: '',\n        result: null,\n        tricks: null,\n        vulnerable: determineVulnerability(1)\n      },\n      isAwake: gameState.isAwake,\n      showScorePopup: false\n    });\n\n    // Navigate to home/game screen\n    setCurrentView('game');\n  };\n\n  // Update the current deal in the game state\n  const updateCurrentDeal = updatedDeal => {\n    setGameState(prev => ({\n      ...prev,\n      currentDeal: {\n        ...prev.currentDeal,\n        ...updatedDeal\n      }\n    }));\n  };\n\n  // Handle going to score adjustment screen\n  const handleGoToScoreAdjustment = () => {\n    setCurrentView('scoreAdjustment');\n  };\n\n  // Handle going to game summary screen\n  const handleGoToGameSummary = () => {\n    setCurrentView('gameSummary');\n  };\n\n  // Handle going to home screen\n  const handleGoToHome = () => {\n    setCurrentView('game');\n  };\n\n  // Render the current view\n  const renderView = () => {\n    switch (currentView) {\n      case 'scoreAdjustment':\n        return /*#__PURE__*/_jsxDEV(ScoreAdjustment, {\n          gameState: gameState,\n          onSaveScore: handleSaveScore,\n          onNextDeal: handleNextDeal,\n          onNewGame: handleGoToGameSummary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this);\n      case 'gameSummary':\n        return /*#__PURE__*/_jsxDEV(GameSummary, {\n          gameState: gameState,\n          onNewGame: handleNewGame,\n          onGoToHome: handleGoToHome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this);\n      case 'game':\n      default:\n        return /*#__PURE__*/_jsxDEV(BridgeGameUI, {\n          gameState: gameState,\n          updateCurrentDeal: updateCurrentDeal,\n          onNextDeal: handleGoToScoreAdjustment,\n          onNewGame: handleGoToGameSummary,\n          setGameState: setGameState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: renderView()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"CsdmN4JpjtHdGyamSiy9ozT6doM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BridgeGameUI","ScoreAdjustment","GameSummary","determineVulnerability","jsxDEV","_jsxDEV","App","_s","currentView","setCurrentView","gameState","setGameState","savedState","localStorage","getItem","JSON","parse","e","console","error","gameNumber","dealNumber","scores","nsScore","ewScore","deals","currentDeal","contract","declarer","result","tricks","vulnerable","isAwake","showScorePopup","setItem","stringify","handleSaveScore","scoreData","prev","completedDeal","nsPoints","ewPoints","details","dealDetails","handleNextDeal","handleNewGame","updateCurrentDeal","updatedDeal","handleGoToScoreAdjustment","handleGoToGameSummary","handleGoToHome","renderView","onSaveScore","onNextDeal","onNewGame","fileName","_jsxFileName","lineNumber","columnNumber","onGoToHome","className","children","_c","$RefreshReg$"],"sources":["C:/Users/mikec/MikesBridge/bonusbridge/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport BridgeGameUI from './BridgeGameUI';\r\nimport ScoreAdjustment from './components/ScoreAdjustment';\r\nimport GameSummary from './components/GameSummary';\r\nimport { determineVulnerability } from './utils/scoring';\r\nimport './global.css';\r\nimport './components/ScoreAdjustment.css';\r\n\r\nconst App = () => {\r\n  // Possible views: 'game', 'scoreAdjustment', 'gameSummary', 'home'\r\n  const [currentView, setCurrentView] = useState('game');\r\n  \r\n  const [gameState, setGameState] = useState(() => {\r\n    // Try to load game state from local storage\r\n    const savedState = localStorage.getItem('bridgeGameState');\r\n    if (savedState) {\r\n      try {\r\n        return JSON.parse(savedState);\r\n      } catch (e) {\r\n        console.error('Error parsing saved game state', e);\r\n      }\r\n    }\r\n    \r\n    // Default initial state\r\n    return {\r\n      gameNumber: 1,\r\n      dealNumber: 1,\r\n      scores: {\r\n        nsScore: 0,\r\n        ewScore: 0\r\n      },\r\n      deals: [],\r\n      currentDeal: {\r\n        contract: '',\r\n        declarer: '',\r\n        result: null,\r\n        tricks: null,\r\n        vulnerable: determineVulnerability(1)\r\n      },\r\n      isAwake: true,\r\n      showScorePopup: false\r\n    };\r\n  });\r\n  \r\n  // Save game state to local storage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('bridgeGameState', JSON.stringify(gameState));\r\n  }, [gameState]);\r\n  \r\n  // Handle saving the score after adjustment\r\n  const handleSaveScore = (scoreData) => {\r\n    setGameState(prev => {\r\n      // Add the completed deal to the deals history\r\n      const completedDeal = {\r\n        ...prev.currentDeal,\r\n        dealNumber: prev.dealNumber,\r\n        nsPoints: scoreData.nsPoints,\r\n        ewPoints: scoreData.ewPoints,\r\n        details: scoreData.dealDetails\r\n      };\r\n      \r\n      return {\r\n        ...prev,\r\n        scores: {\r\n          nsScore: prev.scores.nsScore + scoreData.nsPoints,\r\n          ewScore: prev.scores.ewScore + scoreData.ewPoints\r\n        },\r\n        deals: [...prev.deals, completedDeal]\r\n      };\r\n    });\r\n  };\r\n  \r\n  // Handle starting a new deal\r\n  const handleNextDeal = () => {\r\n    setGameState(prev => ({\r\n      ...prev,\r\n      dealNumber: prev.dealNumber + 1,\r\n      showScorePopup: false,\r\n      currentDeal: {\r\n        contract: '',\r\n        declarer: '',\r\n        result: null,\r\n        tricks: null,\r\n        vulnerable: determineVulnerability(prev.dealNumber + 1)\r\n      }\r\n    }));\r\n    \r\n    // Navigate to game screen\r\n    setCurrentView('game');\r\n  };\r\n  \r\n  // Handle starting a new game\r\n  const handleNewGame = () => {\r\n    setGameState({\r\n      gameNumber: gameState.gameNumber + 1,\r\n      dealNumber: 1,\r\n      scores: {\r\n        nsScore: 0,\r\n        ewScore: 0\r\n      },\r\n      deals: [],\r\n      currentDeal: {\r\n        contract: '',\r\n        declarer: '',\r\n        result: null,\r\n        tricks: null,\r\n        vulnerable: determineVulnerability(1)\r\n      },\r\n      isAwake: gameState.isAwake,\r\n      showScorePopup: false\r\n    });\r\n    \r\n    // Navigate to home/game screen\r\n    setCurrentView('game');\r\n  };\r\n  \r\n  // Update the current deal in the game state\r\n  const updateCurrentDeal = (updatedDeal) => {\r\n    setGameState(prev => ({\r\n      ...prev,\r\n      currentDeal: {\r\n        ...prev.currentDeal,\r\n        ...updatedDeal\r\n      }\r\n    }));\r\n  };\r\n  \r\n  // Handle going to score adjustment screen\r\n  const handleGoToScoreAdjustment = () => {\r\n    setCurrentView('scoreAdjustment');\r\n  };\r\n  \r\n  // Handle going to game summary screen\r\n  const handleGoToGameSummary = () => {\r\n    setCurrentView('gameSummary');\r\n  };\r\n  \r\n  // Handle going to home screen\r\n  const handleGoToHome = () => {\r\n    setCurrentView('game');\r\n  };\r\n  \r\n  // Render the current view\r\n  const renderView = () => {\r\n    switch (currentView) {\r\n      case 'scoreAdjustment':\r\n        return (\r\n          <ScoreAdjustment \r\n            gameState={gameState}\r\n            onSaveScore={handleSaveScore}\r\n            onNextDeal={handleNextDeal}\r\n            onNewGame={handleGoToGameSummary}\r\n          />\r\n        );\r\n        \r\n      case 'gameSummary':\r\n        return (\r\n          <GameSummary \r\n            gameState={gameState}\r\n            onNewGame={handleNewGame}\r\n            onGoToHome={handleGoToHome}\r\n          />\r\n        );\r\n        \r\n      case 'game':\r\n      default:\r\n        return (\r\n          <BridgeGameUI \r\n            gameState={gameState} \r\n            updateCurrentDeal={updateCurrentDeal}\r\n            onNextDeal={handleGoToScoreAdjustment}\r\n            onNewGame={handleGoToGameSummary}\r\n            setGameState={setGameState}\r\n          />\r\n        );\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"app-container\">\r\n      {renderView()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}