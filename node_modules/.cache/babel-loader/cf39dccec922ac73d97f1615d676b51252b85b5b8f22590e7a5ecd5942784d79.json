{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikec\\\\MikesBridge\\\\bonusbridge\\\\src\\\\components\\\\TrickInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './TrickInput.css';\n\n/**\r\n * TrickInput Component for Bridge Game\r\n * Allows selecting the number of tricks taken by declarer\r\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TrickInput = ({\n  onTrickChange,\n  initialResult,\n  contract\n}) => {\n  _s();\n  // State for selected tricks\n  const [selectedTricks, setSelectedTricks] = useState(null);\n\n  // Calculate required tricks based on contract\n  const getRequiredTricks = () => {\n    if (!contract) return 0;\n    const contractMatch = contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\n    if (!contractMatch) return 0;\n    const level = parseInt(contractMatch[1]);\n    return level + 6; // Required tricks = level + 6\n  };\n\n  // Reset trick selection when contract changes\n  useEffect(() => {\n    setSelectedTricks(null);\n  }, [contract]);\n\n  // Set initial value if provided\n  useEffect(() => {\n    if (initialResult !== null && contract) {\n      const requiredTricks = getRequiredTricks();\n      const actualTricks = requiredTricks + initialResult;\n      setSelectedTricks(actualTricks);\n    }\n  }, [initialResult, contract]);\n\n  // Handle trick selection\n  const handleTrickSelect = tricks => {\n    setSelectedTricks(tricks);\n\n    // Calculate result based on required tricks\n    const requiredTricks = getRequiredTricks();\n    const result = tricks - requiredTricks;\n\n    // Notify parent component\n    onTrickChange(result, tricks);\n  };\n\n  // Generate trick buttons (0-13)\n  const renderTrickButtons = () => {\n    const requiredTricks = getRequiredTricks();\n    const buttons = [];\n\n    // Group buttons in rows of 4\n    for (let i = 0; i <= 13; i++) {\n      // Determine button class based on relationship to required tricks\n      let buttonClass = 'trick-btn';\n      if (selectedTricks === i) {\n        buttonClass += ' selected';\n      } else if (i < requiredTricks) {\n        buttonClass += ' below-required';\n      }\n      buttons.push(/*#__PURE__*/_jsxDEV(\"button\", {\n        className: buttonClass,\n        onClick: () => handleTrickSelect(i),\n        disabled: !contract,\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this));\n    }\n    return buttons;\n  };\n  const requiredTricks = getRequiredTricks();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trick-input\",\n    children: contract ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"required-tricks\",\n        children: [\"Required tricks: \", requiredTricks]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trick-buttons\",\n        children: renderTrickButtons()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"please-select\",\n      children: [\"Please select\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 24\n      }, this), \"a contract\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 40\n      }, this), \"first\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(TrickInput, \"VNL+SogF4VMa80Azjgb5rnO6UTU=\");\n_c = TrickInput;\nexport default TrickInput;\nvar _c;\n$RefreshReg$(_c, \"TrickInput\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","TrickInput","onTrickChange","initialResult","contract","_s","selectedTricks","setSelectedTricks","getRequiredTricks","contractMatch","match","level","parseInt","requiredTricks","actualTricks","handleTrickSelect","tricks","result","renderTrickButtons","buttons","i","buttonClass","push","className","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mikec/MikesBridge/bonusbridge/src/components/TrickInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './TrickInput.css';\r\n\r\n/**\r\n * TrickInput Component for Bridge Game\r\n * Allows selecting the number of tricks taken by declarer\r\n */\r\nconst TrickInput = ({ onTrickChange, initialResult, contract }) => {\r\n  // State for selected tricks\r\n  const [selectedTricks, setSelectedTricks] = useState(null);\r\n  \r\n  // Calculate required tricks based on contract\r\n  const getRequiredTricks = () => {\r\n    if (!contract) return 0;\r\n    \r\n    const contractMatch = contract.match(/(\\d)([♣♦♥♠]|NT)\\s+([NESW])(X{0,2})/);\r\n    if (!contractMatch) return 0;\r\n    \r\n    const level = parseInt(contractMatch[1]);\r\n    return level + 6; // Required tricks = level + 6\r\n  };\r\n  \r\n  // Reset trick selection when contract changes\r\n  useEffect(() => {\r\n    setSelectedTricks(null);\r\n  }, [contract]);\r\n  \r\n  // Set initial value if provided\r\n  useEffect(() => {\r\n    if (initialResult !== null && contract) {\r\n      const requiredTricks = getRequiredTricks();\r\n      const actualTricks = requiredTricks + initialResult;\r\n      setSelectedTricks(actualTricks);\r\n    }\r\n  }, [initialResult, contract]);\r\n  \r\n  // Handle trick selection\r\n  const handleTrickSelect = (tricks) => {\r\n    setSelectedTricks(tricks);\r\n    \r\n    // Calculate result based on required tricks\r\n    const requiredTricks = getRequiredTricks();\r\n    const result = tricks - requiredTricks;\r\n    \r\n    // Notify parent component\r\n    onTrickChange(result, tricks);\r\n  };\r\n  \r\n  // Generate trick buttons (0-13)\r\n  const renderTrickButtons = () => {\r\n    const requiredTricks = getRequiredTricks();\r\n    const buttons = [];\r\n    \r\n    // Group buttons in rows of 4\r\n    for (let i = 0; i <= 13; i++) {\r\n      // Determine button class based on relationship to required tricks\r\n      let buttonClass = 'trick-btn';\r\n      if (selectedTricks === i) {\r\n        buttonClass += ' selected';\r\n      } else if (i < requiredTricks) {\r\n        buttonClass += ' below-required';\r\n      }\r\n      \r\n      buttons.push(\r\n        <button\r\n          key={i}\r\n          className={buttonClass}\r\n          onClick={() => handleTrickSelect(i)}\r\n          disabled={!contract}\r\n        >\r\n          {i}\r\n        </button>\r\n      );\r\n    }\r\n    \r\n    return buttons;\r\n  };\r\n  \r\n  const requiredTricks = getRequiredTricks();\r\n  \r\n  return (\r\n    <div className=\"trick-input\">\r\n      {contract ? (\r\n        <>\r\n          <div className=\"required-tricks\">\r\n            Required tricks: {requiredTricks}\r\n          </div>\r\n          <div className=\"trick-buttons\">\r\n            {renderTrickButtons()}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"please-select\">\r\n          Please select<br />a contract<br />first\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrickInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}